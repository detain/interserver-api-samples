{
    "get_email_templates": {
        "name": "get_email_templates",
        "params": "",
        "description": [
            "gets a list of email templates and their descriptions",
            "@return array an array of email templates in the form of template -> description"
        ],
        "fieldtexts": []
    },
    "account_security": {
        "name": "account_security",
        "params": "",
        "description": [
            "the account settings section",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "account_settings_new": {
        "name": "account_settings_new",
        "params": "$ajax = false",
        "description": [
            "account_settings_new()",
            "the account settings section",
            "@todo Finish account settings - session limiting is the first thing to add",
            "@param bool $ajax",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "convert_custid": {
        "name": "convert_custid",
        "params": "$custid, $to_module = 'default', $from_module = 'default'",
        "description": [
            "General System Functions And Mapping",
            "This file has the general functions used heavily both by the program and by",
            "the users.   Functions here should be generic enough that they dont fit in",
            "one of the other areas.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category General",
            "convert_custid()",
            "gets the customers customer id under the given module",
            "@param integer $custid the customer ID to start with",
            "@param string $to_module the module to load the customer id for",
            "@param string $from_module the module to load the customer id for",
            "@return false|integer the modules customer id or false on error"
        ],
        "fieldtexts": []
    },
    "get_custid": {
        "name": "get_custid",
        "params": "",
        "description": [
            "Gets the websites custid",
            "@return int"
        ],
        "fieldtexts": []
    },
    "get_admin_ips": {
        "name": "get_admin_ips",
        "params": "",
        "description": [
            "get_admin_ips()",
            "@return array Array of IP Addresses"
        ],
        "fieldtexts": []
    },
    "get_client_non_admin_ips": {
        "name": "get_client_non_admin_ips",
        "params": "$custid",
        "description": [
            "gets a list of all the ips used by the given customer excluding ones also used by admins.",
            "@param int $custid the customer id you want to get the ip listings for",
            "@return array Array of IP Addresses"
        ],
        "fieldtexts": []
    },
    "get_locked_ips": {
        "name": "get_locked_ips",
        "params": "",
        "description": [
            "get_locked_ips()",
            "This will return a list of all IP addresses used for fraud.   Its probably of no real use to anyone, but",
            "I use it to block IP addresses and similar things.",
            "@return array Array of IP Addresses"
        ],
        "fieldtexts": []
    },
    "get_signup_days": {
        "name": "get_signup_days",
        "params": "$minimum = 30",
        "description": [
            "@param int $minimum",
            "@return int"
        ],
        "fieldtexts": []
    },
    "map_innertell_user_to_accounts": {
        "name": "map_innertell_user_to_accounts",
        "params": "$id",
        "description": [
            "map_innertell_user_to_accounts()",
            "maps an innertell user to other databases.",
            "@param integer $id the innertell user id",
            "@return bool|integer false on error or the new account id"
        ],
        "fieldtexts": []
    },
    "map_client_site_to_site": {
        "name": "map_client_site_to_site",
        "params": "$custid, $module",
        "description": [
            "maps a client customer id from one module to the others",
            "@param integer $custid customer id to map",
            "@param string $module the module to map from",
            "@return bool whether or not the command completed successfully"
        ],
        "fieldtexts": []
    },
    "map_my_to_sites": {
        "name": "map_my_to_sites",
        "params": "$custid",
        "description": [
            "map_my_to_sites()",
            "maps a my account id to other modules",
            "@param integer $custid the customer id to map",
            "@return bool whether or not the account was found\/mapped"
        ],
        "fieldtexts": []
    },
    "get_edit_customer_link": {
        "name": "get_edit_customer_link",
        "params": "$custid, $module = 'default'",
        "description": [
            "Gets the Link for Edit Customer3 page properly handling if the customer exists or not",
            "in the default database and returning as short of a call as possible when it can",
            "@param $custid integer customer id",
            "@param $module string optional module the customer id is for",
            "@return string string the url arguments that make up the proper edit customer link"
        ],
        "fieldtexts": []
    },
    "get_customer_options": {
        "name": "get_customer_options",
        "params": "$accountId, $module = 'default', $images = true",
        "description": [
            "@param integer  $accountId",
            "@param string   $module",
            "@param bool     $images",
            "@return string   html links for the various options for the customer"
        ],
        "fieldtexts": []
    },
    "get_blocked_payment_emails": {
        "name": "get_blocked_payment_emails",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_blocked_hostname_keywords": {
        "name": "get_blocked_hostname_keywords",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "is_blocked_hostname_keyword": {
        "name": "is_blocked_hostname_keyword",
        "params": "$hostname",
        "description": [
            "@param $hostname",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "is_blocked_paypal_email": {
        "name": "is_blocked_paypal_email",
        "params": "$email",
        "description": [
            "@param $email",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_blocked_signup_domains": {
        "name": "get_blocked_signup_domains",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "is_blocked_signup_email": {
        "name": "is_blocked_signup_email",
        "params": "$email",
        "description": [
            "is_blocked_signup_email()",
            "this is a little wrapper function to check if an account is banned or not from signing up",
            "in our system.",
            "@todo this could be improved, the domain name could technically be in part of the user and not actually come from the banned domain",
            "@param string $email the email address to check against.",
            "@return false|string returns false if its not blocked or a reason for being blocked if it is"
        ],
        "fieldtexts": []
    },
    "get_gravatar": {
        "name": "get_gravatar",
        "params": "$email, $s = 80, $d = 'blank', $r = 'x', $img = false, $atts = []",
        "description": [
            "Get either a Gravatar URL or complete image tag for a specified email address.",
            "@param string $email The email address",
            "@param int|string $s Size in pixels, defaults to 80px [ 1 - 2048 ]",
            "@param string $d Default imageset to use [ 404 | mm | identicon | monsterid | wavatar | retro | blank ]",
            "404: do not load any image if none is associated with the email hash, instead return an HTTP 404 (File Not Found) response.",
            "mm: (mystery-man) a simple, cartoon-style silhouetted outline of a person (does not vary by email hash).",
            "identicon: a geometric pattern based on an email hash.",
            "monsterid: a generated 'monster' with different colors, faces, etc.",
            "wavatar: generated faces with differing features and backgrounds.",
            "retro: awesome generated, 8-bit arcade-style pixelated faces.",
            "blank: a transparent PNG image",
            "@param string $r Maximum rating (inclusive) [ g | pg | r | x ] g: suitable for display on all websites with any audience type.  pg: may contain rude gestures, provocatively dressed individuals, the lesser swear words, or mild violence.  r: may contain such things as harsh profanity, intense violence, nudity, or hard drug use.  x: may contain hardcore sexual imagery or extremely disturbing violence.",
            "@param bool $img True to return a complete IMG tag False for just the URL",
            "@param array $atts Optional, additional key\/value attributes to include in the IMG tag",
            "@return String containing either just a URL or a complete image tag",
            "@source http:\/\/gravatar.com\/site\/implement\/images\/php\/"
        ],
        "fieldtexts": []
    },
    "api_authenticate": {
        "name": "api_authenticate",
        "params": "$login_id, $passwd, $limitima = false",
        "description": [
            "@param $login_id",
            "@param $passwd",
            "@param bool $limitima",
            "@return bool|int"
        ],
        "fieldtexts": []
    },
    "authenticate": {
        "name": "authenticate",
        "params": "$username = false, $password = false, $retry = 10",
        "description": [
            "@param bool|string $username",
            "@param bool|string $password",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "change_username": {
        "name": "change_username",
        "params": "",
        "description": [
            "Change Username",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Internal",
            "use MyAdmin\\Orm\\Trial;"
        ],
        "fieldtexts": []
    },
    "client_information": {
        "name": "client_information",
        "params": "",
        "description": [
            "Client Billing And Contact Information",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "signupForm()",
            "builds the jformer signup \/ update info form",
            "@internal param bool $newuser whether or not its a new user"
        ],
        "fieldtexts": []
    },
    "disable_account": {
        "name": "disable_account",
        "params": "$custid = false, $module = 'default'",
        "description": [
            "Disables an account and locks it.  also deletes any current sessions the account has",
            "@param integer|bool $custid the customer id to disable",
            "@param string       $module module to disable the account in",
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "enable_account": {
        "name": "enable_account",
        "params": "$custid = false, $module = 'default'",
        "description": [
            "enable_account()",
            "Enables an account that might have been previously locked.",
            "@param bool|int $custid the customer id to enable",
            "@param string $module module to enable the account in",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_db_module": {
        "name": "set_db_module",
        "params": "$module",
        "description": [
            "Session::set_db_module()",
            "@param string $module",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_db": {
        "name": "set_db",
        "params": "\\MyDb\\Generic $db",
        "description": [
            "Session::set_db()",
            "@param \\MyDb\\Generic $db",
            "@return void"
        ],
        "fieldtexts": []
    },
    "restore_db": {
        "name": "restore_db",
        "params": "",
        "description": [
            "Session::restore_db()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "remove_group_from_cache": {
        "name": "remove_group_from_cache",
        "params": "$id",
        "description": [
            "removes a group from the memory_cache",
            "@param integer $id group id to remove",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_group": {
        "name": "get_group",
        "params": "",
        "description": [
            "Gets the repeat_invoices group",
            "@return int"
        ],
        "fieldtexts": []
    },
    "get_next_id": {
        "name": "get_next_id",
        "params": "",
        "description": [
            "@return int"
        ],
        "fieldtexts": []
    },
    "add": {
        "name": "add",
        "params": "$section, $type, $new, $old = '', $custid = false, $extra = false",
        "description": [
            "history::add()",
            "adds a history entry",
            "@param string $section history section",
            "@param string $type history type",
            "@param string $new new value",
            "@param string $old old value",
            "@param bool|integer $custid customer id, false for current session account, or customer id for specific one",
            "@return bool|integer false on failure or the history id if it was successful"
        ],
        "fieldtexts": []
    },
    "get_main_keys": {
        "name": "get_main_keys",
        "params": "",
        "description": [
            "returns a list of keys that shoudl be set in the main accounts table as opposed to accounts_ext",
            "@return array array of keys"
        ],
        "fieldtexts": []
    },
    "update": {
        "name": "update",
        "params": "InstalledRepositoryInterface $repo, PackageInterface $initial, PackageInterface $target",
        "description": [
            "{@inheritDoc}",
            "@throws \\InvalidArgumentException"
        ],
        "fieldtexts": []
    },
    "remove_key": {
        "name": "remove_key",
        "params": "$accountId, $key",
        "description": [
            "deletes an account key from the accounts_ext table",
            "@param integer $accountId the customer id",
            "@param string|array $key the key to remove, or an array of keys to remove",
            "@return void"
        ],
        "fieldtexts": []
    },
    "delete": {
        "name": "delete",
        "params": "$container",
        "description": [
            "@param $container",
            "@return string"
        ],
        "fieldtexts": []
    },
    "create_filter": {
        "name": "create_filter",
        "params": "$filters, $where = true",
        "description": [
            "creates an array of filters usable by read()",
            "@param array $filters array of filters",
            "@param bool $where include the where or not",
            "@return array filter values"
        ],
        "fieldtexts": []
    },
    "read": {
        "name": "read",
        "params": "$accountId, $filters = '', $order_sort = '', $limit = false, $offset = 0",
        "description": [
            "NOTE: Filters is actually an array.  Its built kinda of odd because we are dealing with 2 tables.",
            "Here is an example of its usage.",
            "$array = array(",
            "'account_id'     => \"!='5'\",",
            "'account_group' => \"= '4'\"",
            ");",
            "Also, keep in mind, when dealing with multiple account_ids, using it as a filter might yield",
            "odd results.  This function will pad all the filters using and only.",
            "@param integer|array $accountId a customer id, or an array of customer ids",
            "@param array|string $filters the filters to process for a read account, or blank string for none",
            "@param string $order_sort sql field to sort results by when returning multiple accounts",
            "@param bool|integer $limit whether or not to limit results, if limiting then it specifies how much to limit it by",
            "@param integer $offset the limits offset",
            "@return bool|array false on error, or an array of user data"
        ],
        "fieldtexts": []
    },
    "cross_reference": {
        "name": "cross_reference",
        "params": "$account, $tmodule = 'default', $skip_cache = false",
        "description": [
            "given an account login name, get the account id, or given an account id, get the account login name",
            "@param integer|string $account the account id or the account login name",
            "@param string $tmodule module to do the cross referencing against, or use the current one by default",
            "@param bool $skip_cache defaults to false",
            "@return integer|string|bool returns false on error, account id if you gave it a lid, and account login if you gave it an id"
        ],
        "fieldtexts": []
    },
    "exists": {
        "name": "exists",
        "params": "$account_lid, $tmodule = 'default', $skip_cache = false",
        "description": [
            "check whether or not an account exists. This function is useful because it uses the account cache",
            "@param integer|string $account_lid either the account login name or the account id",
            "@param string $tmodule module to do the cross referencing against, or use the current one by default",
            "@param bool $skip_cache defaults to false",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "populate_missing_account_info": {
        "name": "populate_missing_account_info",
        "params": "$info, $from = 'unknown', $custid = false",
        "description": [
            "@param array $info an array of information",
            "@param string $from",
            "@param false|int  $custid the customer id"
        ],
        "fieldtexts": []
    },
    "report_account": {
        "name": "report_account",
        "params": "$custid = false, $module = 'default'",
        "description": [
            "Reports an account for abuse",
            "@param false|int $custid the customer id",
            "@param string $module",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "updateinfoForm_bootstrap": {
        "name": "updateinfoForm_bootstrap",
        "params": "",
        "description": [
            "updateinfoForm_bootstrap()",
            "calls the signup form but w\/ a current user flag",
            "@return void"
        ],
        "fieldtexts": []
    },
    "signupForm_bootstrap": {
        "name": "signupForm_bootstrap",
        "params": "$newuser = true",
        "description": [
            "signupForm_bootstrap()",
            "builds the jformer signup \/ update info form",
            "@param bool $newuser whether or not its a new user",
            "@return void"
        ],
        "fieldtexts": []
    },
    "onSubmit": {
        "name": "onSubmit",
        "params": "$formValues",
        "description": [
            "@param $formValues",
            "@return array",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "update_info_bootstrap": {
        "name": "update_info_bootstrap",
        "params": "",
        "description": [
            "update_info()",
            "just a wrapper to the updateinfoForm_bootstrap function",
            "@return void"
        ],
        "fieldtexts": []
    },
    "update_info": {
        "name": "update_info",
        "params": "$ajax = false",
        "description": [
            "Update Account Information",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin\\Accounts",
            "Update Account Information",
            "@param bool $ajax defaults to false and indicates whether or not the page was loaded via an ajax request",
            "@return void",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "verify_email": {
        "name": "verify_email",
        "params": "",
        "description": [
            "Initiates the process to verify a clients email address by sending them a confirmation mail and then validates the response",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "chat": {
        "name": "chat",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin"
        ],
        "fieldtexts": []
    },
    "check_utf8": {
        "name": "check_utf8",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin"
        ],
        "fieldtexts": []
    },
    "get_my_roleperms": {
        "name": "get_my_roleperms",
        "params": "$custid = false",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "@param bool $custid",
            "@return array|mixed"
        ],
        "fieldtexts": []
    },
    "has_acl": {
        "name": "has_acl",
        "params": "$permission",
        "description": [
            "@param $permission",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_acl_roles": {
        "name": "get_acl_roles",
        "params": "$roles = false",
        "description": [
            "get acl roles",
            "@param bool $roles",
            "@return array array of roles",
            "@internal param array|false|int|string $role_id false to get all roles, or pass an individual role id or a role name, or an array of roles ids or names to specify what to load"
        ],
        "fieldtexts": []
    },
    "get_acl_permissions": {
        "name": "get_acl_permissions",
        "params": "$perm_id = false",
        "description": [
            "get acl permissions",
            "@param bool $perm_id",
            "@return array array of permissions",
            "@internal param array|false|int $role_id false to get all permissions, or pass an individual permission id, or an array of permission ids to specify what to load"
        ],
        "fieldtexts": []
    },
    "get_permission_usage": {
        "name": "get_permission_usage",
        "params": "",
        "description": [
            "calculates an approximate usage frequency for permissions looking in the include\/ directory and",
            "pattern matching has_acl calls to parent functions",
            "@return array returns an array acl usage in the format of array(\"'sudo'\" => array('sudo_session'), \"'view_cc'\" => array(....))"
        ],
        "fieldtexts": []
    },
    "get_acl_roleperms": {
        "name": "get_acl_roleperms",
        "params": "$role_id = false, $together = false",
        "description": [
            "get acl role permission assignments",
            "@param array|bool|false|int $role_id false to get all roles, or pass an individual role id, or an array of role ids to specify what to load",
            "@param bool $together",
            "@return array array of role permissions"
        ],
        "fieldtexts": []
    },
    "admin_rbac": {
        "name": "admin_rbac",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "admins": {
        "name": "admins",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use \\MyCrud\\Crud;",
            "admins()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "assign_role": {
        "name": "assign_role",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Mr.G <kumar.interserver@gmail.com>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "assign_role()",
            "@return bool|void",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "blocked_hostname_keywords": {
        "name": "blocked_hostname_keywords",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "blocked_hostname_keywords()",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException",
            "@global tf $tf"
        ],
        "fieldtexts": []
    },
    "blocked_payment_emails": {
        "name": "blocked_payment_emails",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "blocked_payment_emails()",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException",
            "@global tf $tf"
        ],
        "fieldtexts": []
    },
    "blocked_signup_domains": {
        "name": "blocked_signup_domains",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "blocked_signup_domains()",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException",
            "@global tf $tf"
        ],
        "fieldtexts": []
    },
    "config_sites_list": {
        "name": "config_sites_list",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "use MyAdmin\\Settings;",
            "use MyAdmin\\Configuration;",
            "@return array"
        ],
        "fieldtexts": []
    },
    "configuration": {
        "name": "configuration",
        "params": "",
        "description": [
            "configuration()",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException@global tf $tf"
        ],
        "fieldtexts": []
    },
    "crontab": {
        "name": "crontab",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use Assetic\\AssetManager;",
            "use Assetic\\AssetWriter;",
            "use Assetic\\FilterManager;",
            "use Assetic\\Asset\\AssetCollection;",
            "use Assetic\\Asset\\AssetReference;",
            "use Assetic\\Asset\\FileAsset;",
            "use Assetic\\Asset\\GlobAsset;",
            "use Assetic\\Factory\\AssetFactory;",
            "use Assetic\\Factory\\Worker\\CacheBustingWorker;",
            "use Assetic\\Filter\\Sass\\ScssFilter;",
            "use Assetic\\Filter\\Yui\\JsCompressorFilter;",
            "use Assetic\\Filter\\Yui\\CssCompressorFilter;",
            "use SensioLabs\\AnsiConverter\\AnsiToHtmlConverter;",
            "use SensioLabs\\AnsiConverter\\Theme\\SolarizedXTermTheme;",
            "@todo cron runner should detect various common errors and provide a way to register error strings\/regexes. When an error happens it should notify us.",
            "@todo If a cron job is skipped it should automatically run it next chance it can.",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException@global tf $tf"
        ],
        "fieldtexts": []
    },
    "get_template_files": {
        "name": "get_template_files",
        "params": "$tpldirs = false, $rawoutput = false",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "get_template_files()",
            "gets all the writable template files and returns them.   will give output warnings if",
            "there is an invalid path or if the files found to be templates are not writable.",
            "@see INSTALL_ROOT",
            "@param array|bool $tpldirs   an array of paths to search for templates in, it defaults to \/public_html\/templates\/, it must be within your {@link INSTALL_ROOT}",
            "@param bool       $rawoutput whether or not you want raw unreplaced output",
            "@return array an array of paths\/files that are considered templates"
        ],
        "fieldtexts": []
    },
    "edit_templates": {
        "name": "edit_templates",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException@global tf $tf"
        ],
        "fieldtexts": []
    },
    "get_all_db_fields": {
        "name": "get_all_db_fields",
        "params": "",
        "description": [
            "This is a script to find licenses that kept getting billed after they expired",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@category map_everything_to_my",
            "@copyright 2018",
            "@return array"
        ],
        "fieldtexts": []
    },
    "remap_lid": {
        "name": "remap_lid",
        "params": "$lid",
        "description": [
            "@param $lid"
        ],
        "fieldtexts": []
    },
    "map_modules_into_new_database": {
        "name": "map_modules_into_new_database",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "payum_setup": {
        "name": "payum_setup",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "payum_setup()",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException@global tf $tf"
        ],
        "fieldtexts": []
    },
    "plugin_find_all": {
        "name": "plugin_find_all",
        "params": "",
        "description": [
            "Plugins Management",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Plugins",
            "Search the vendor directory for plugins.",
            "@return array Plugin basename\/info key\/value pairs."
        ],
        "fieldtexts": []
    },
    "plugin_load_composer": {
        "name": "plugin_load_composer",
        "params": "$plugin_path",
        "description": [
            "loads a plugins composer.json file into an array",
            "@param string $plugin_path the composer style package name for the plugin",
            "@return array the composer array of data about the given plugin"
        ],
        "fieldtexts": []
    },
    "plugin_load": {
        "name": "plugin_load",
        "params": "$plugin_path",
        "description": [
            "loads plugin details",
            "@param string $plugin_path the composer style package name for the plugin",
            "@return false|array the array containing all the plugin information"
        ],
        "fieldtexts": []
    },
    "plugin_register": {
        "name": "plugin_register",
        "params": "$plugin_path",
        "description": [
            "registers a plugin with our system loading the plugin details",
            "@param string $plugin_path the composer style package name for the plugin",
            "@return array|null plugindata"
        ],
        "fieldtexts": []
    },
    "plugin_unregister": {
        "name": "plugin_unregister",
        "params": "$plugin_path",
        "description": [
            "removes a plugin with our system loading the plugin details",
            "@param string $plugin_path",
            "@return array|null plugindata"
        ],
        "fieldtexts": []
    },
    "plugins": {
        "name": "plugins",
        "params": "",
        "description": [
            "plugin management"
        ],
        "fieldtexts": []
    },
    "coupon_list": {
        "name": "coupon_list",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin"
        ],
        "fieldtexts": []
    },
    "coupons": {
        "name": "coupons",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "coupons()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "access_log": {
        "name": "access_log",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "access_log()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "activation_code_lookup": {
        "name": "activation_code_lookup",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "activation_code_lookup()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "communications": {
        "name": "communications",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "communications()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "coupon_customer_list": {
        "name": "coupon_customer_list",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin"
        ],
        "fieldtexts": []
    },
    "edit_customer2": {
        "name": "edit_customer2",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "edit_customer2()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_mouse_events": {
        "name": "get_mouse_events",
        "params": "$repeat_invoice",
        "description": [
            "@param $repeat_invoice",
            "@return string"
        ],
        "fieldtexts": []
    },
    "edit_customer": {
        "name": "edit_customer",
        "params": "",
        "description": [
            "provides a page to view and edit the client details and see his package,s and link to the various",
            "functions you can do w\/ the client",
            "@return bool|void",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "edit_customer4": {
        "name": "edit_customer4",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Admin",
            "@param $service_id",
            "@param $module",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_account_options": {
        "name": "get_account_options",
        "params": "$custid, $default_module, $data",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Admin",
            "@param $service_id",
            "@param $module",
            "use MyAdmin\\Orm\\Trial;",
            "@param $custid",
            "@param $default_module",
            "@param $data",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_account_edit_customer_options": {
        "name": "get_account_edit_customer_options",
        "params": "$custid, $default_module, $data, $extra=''",
        "description": [
            "@param $custid",
            "@param $default_module",
            "@param $data",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_edit_customer_services": {
        "name": "get_edit_customer_services",
        "params": "$custid, $base_module",
        "description": [
            "returns an array of details about the services for a customer",
            "@param int $custid the customer id",
            "@param string $base_module the module the customer id is in",
            "@return array"
        ],
        "fieldtexts": []
    },
    "history_log": {
        "name": "history_log",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers"
        ],
        "fieldtexts": []
    },
    "view_customers": {
        "name": "view_customers",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "view_customers()"
        ],
        "fieldtexts": []
    },
    "view_session": {
        "name": "view_session",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "view_session()"
        ],
        "fieldtexts": []
    },
    "view_sessions": {
        "name": "view_sessions",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "view_sessions()",
            "display user sessions",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "wipe_customer": {
        "name": "wipe_customer",
        "params": "$customer = false",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "wipe_customer()",
            "@param bool|int $customer defaults to false meaning use the UI.  if a customer id is passed it uses a non interactive mode",
            "@return void"
        ],
        "fieldtexts": []
    },
    "find_unbilled_services": {
        "name": "find_unbilled_services",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin"
        ],
        "fieldtexts": []
    },
    "admin_home2": {
        "name": "admin_home2",
        "params": "",
        "description": [
            "Renders a dashboard",
            "https:\/\/github.com\/Shopify\/dashing\/wiki\/Additional-Widgets",
            "https:\/\/github.com\/ankane\/blazer",
            "https:\/\/github.com\/thenaturalist\/awesome-business-intelligence",
            "https:\/\/github.com\/clippings\/layout-grid",
            "http:\/\/clippings.github.io\/layout-grid\/",
            "http:\/\/clippings.github.io\/layout-grid\/demos\/reorder.html",
            "https:\/\/github.com\/hootsuite\/grid",
            "http:\/\/hootsuite.github.io\/grid\/",
            "https:\/\/codepen.io\/detain\/pen\/BVLyjQ",
            "https:\/\/codepen.io\/detain\/pen\/LrbRxa",
            "https:\/\/my.interserver.net\/admin\/admin_home2",
            "https:\/\/my.interserver.net\/admin\/admin_home",
            "https:\/\/my.interserver.net\/admin\/design\/dashboard_2.html",
            "https:\/\/my.interserver.net\/admin\/home_dashboard",
            "https:\/\/my.interserver.net\/admin\/design\/dashboard_1.html",
            "https:\/\/my.interserver.net\/admin\/design\/UI\/Grids\/muuri_grid.html",
            "https:\/\/my.interserver.net\/admin\/home",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Menu",
            "admin_home()",
            "renders the admin home page.",
            "sidemenu differences",
            "false",
            "vertical menu is built",
            "menu is wrapped in a movable window",
            "adds extra tickers and widgets to the output",
            "true",
            "menu is horizontal or vertical based on MENU_ORIENTATION",
            "menu is stationary",
            "@internal param bool $sidemenu whether or not this is the side menu",
            "@return void",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "admin_home": {
        "name": "admin_home",
        "params": "",
        "description": [
            "Home Page",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Menu",
            "admin_home()",
            "renders the admin home page.",
            "sidemenu differences",
            "false",
            "vertical menu is built",
            "menu is wrapped in a movable window",
            "adds extra tickers and widgets to the output",
            "true",
            "menu is horizontal or vertical based on MENU_ORIENTATION",
            "menu is stationary",
            "@internal param bool $sidemenu whether or not this is the side menu",
            "@return void",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "hex2bin_custom": {
        "name": "hex2bin_custom",
        "params": "$data",
        "description": [
            "@param $data",
            "@return string"
        ],
        "fieldtexts": []
    },
    "mb_cc_decrypt": {
        "name": "mb_cc_decrypt",
        "params": "$client_id",
        "description": [
            "decrypts a modernbill cc #",
            "@param int $client_id the id of the client",
            "@return bool|string the decrypted cc or false on failure"
        ],
        "fieldtexts": []
    },
    "mb_encrypt": {
        "name": "mb_encrypt",
        "params": "$pwd = null, $data = null, $decrypt = false, $is_license = false",
        "description": [
            "@param null $pwd",
            "@param null $data",
            "@param bool $decrypt",
            "@param bool $is_license",
            "@return string"
        ],
        "fieldtexts": []
    },
    "import_billing2": {
        "name": "import_billing2",
        "params": "$ajax = false",
        "description": [
            "import_billing2()",
            "@param bool $ajax whether or not this is being loaded via the ajax part or the normal pag e part.",
            "@return string|void",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "get_import_orders_html": {
        "name": "get_import_orders_html",
        "params": "$orders, $packages",
        "description": [
            "@param $orders",
            "@param $packages",
            "@return string"
        ],
        "fieldtexts": []
    },
    "import_billing": {
        "name": "import_billing",
        "params": "$ajax = false",
        "description": [
            "import_billing()",
            "@param bool $ajax whether or not this is being loaded via the ajax part or the normal pag e part.",
            "@return string|void",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "import_master": {
        "name": "import_master",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "import_master()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "add_invoice": {
        "name": "add_invoice",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use Nette\\Forms\\Form;",
            "use Tracy\\Debugger;",
            "Adds an invoice into the system",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "create_next_invoice": {
        "name": "create_next_invoice",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use MyAdmin\\billing\\Billing;",
            "create_next_invoice()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "create_payment": {
        "name": "create_payment",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "Creates a Payment for a given invoice",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "custom_invoice_old": {
        "name": "custom_invoice_old",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "custom_invoice": {
        "name": "custom_invoice",
        "params": "",
        "description": [
            "Administrative Functionality",
            "\\$formValues->([a-z_]*)",
            "$form['\\1']",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use Nette\\Forms\\Form;",
            "use Tracy\\Debugger;",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "delete_invoice": {
        "name": "delete_invoice",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "delete_invoice()"
        ],
        "fieldtexts": []
    },
    "delete_repeat_invoice": {
        "name": "delete_repeat_invoice",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "delete_repeat_invoice()"
        ],
        "fieldtexts": []
    },
    "edit_invoice": {
        "name": "edit_invoice",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use Nette\\Forms\\Form;",
            "use Tracy\\Debugger;",
            "displays a form to edit details for an invoice",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "edit_repeat_invoice": {
        "name": "edit_repeat_invoice",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "edit_repeat_invoice()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "give_more_time_to_pay": {
        "name": "give_more_time_to_pay",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "\/\/use MyAdmin\\Orm\\Invoice;",
            "give_more_time_to_pay()",
            "This is a function for admins to quickly adjust the due date on a service",
            "to give more time.   The time can be chosen from a list of predefined times,",
            "set to a custom date, or entered as an offset from today, like +3 days.",
            "Javascript events were added so when you try using a human date it shows you",
            "what the date you are entering equals (ie +3 days will show you the date",
            "3 days from now next to it).",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_renewals": {
        "name": "get_renewals",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "get_renewals()",
            "@return array"
        ],
        "fieldtexts": []
    },
    "view_renewals": {
        "name": "view_renewals",
        "params": "",
        "description": [
            "view_renewals()",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "pending_approval": {
        "name": "pending_approval",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "pending_approval()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "pending_income": {
        "name": "pending_income",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "pending_income()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "phone_calls_widget": {
        "name": "phone_calls_widget",
        "params": "",
        "description": [
            "builds and returns the recent phone calls with accounts they are tied to",
            "@return string the table showing the recent calls"
        ],
        "fieldtexts": []
    },
    "removable_services": {
        "name": "removable_services",
        "params": "$ajax = false",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "removable_services()",
            "@param bool $ajax",
            "@throws Exception",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "service_editor": {
        "name": "service_editor",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "service_editor()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "service_reassign": {
        "name": "service_reassign",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "service_reassign()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "services_control": {
        "name": "services_control",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "services_control()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "activation_stats": {
        "name": "activation_stats",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin"
        ],
        "fieldtexts": []
    },
    "bandwidth_stats": {
        "name": "bandwidth_stats",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin"
        ],
        "fieldtexts": []
    },
    "billing_error2": {
        "name": "billing_error2",
        "params": "",
        "description": [
            "Billing",
            "@author G <kumar.interserver@gmail.com>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "unbilled_websites()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "billing_stats2": {
        "name": "billing_stats2",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "billing_stats()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "billing_stats": {
        "name": "billing_stats",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "billing_stats()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "client_country_distribution": {
        "name": "client_country_distribution",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "client_country_sales_over_time": {
        "name": "client_country_sales_over_time",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "client_state_distribution": {
        "name": "client_state_distribution",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "customer_word_trends_data": {
        "name": "customer_word_trends_data",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "customer_word_trends",
            "returns an array of affiliate stats in the format of:",
            "Array(",
            "[2013-05-20] => Array(",
            "[total] => 16",
            "[rejected] => 12",
            "[failed] => 4",
            ")",
            "[2013-05-21] => Array(",
            "[total] => 26",
            "[default] => 1",
            "[paid] => 1",
            "[rejected] => 10",
            "[locked] => 6",
            "[failed] => 8",
            ")",
            ")",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "customer_word_trends": {
        "name": "customer_word_trends",
        "params": "",
        "description": [
            "billing_map()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "daily_recap": {
        "name": "daily_recap",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@corpmail.interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return mixed|string|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "echarts_bubbles": {
        "name": "echarts_bubbles",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "echarts_funnel": {
        "name": "echarts_funnel",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "echarts_gauge_combined": {
        "name": "echarts_gauge_combined",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "echarts_pie": {
        "name": "echarts_pie",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "echarts_pie_rose": {
        "name": "echarts_pie_rose",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "echarts_sankey": {
        "name": "echarts_sankey",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "echarts_timeline_bar": {
        "name": "echarts_timeline_bar",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "use Hisune\\EchartsPHP\\ECharts;",
            "echarts moving timeline bar graph",
            "@link https:\/\/my.interserver.net\/echarts_gallery\/editor.php?c=xH1bu-gIIl",
            "@param mixed $return",
            "@return void"
        ],
        "fieldtexts": []
    },
    "monthly_sales_by_module": {
        "name": "monthly_sales_by_module",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "monthly_sales_by_payment_type": {
        "name": "monthly_sales_by_payment_type",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "sales_by_country": {
        "name": "sales_by_country",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_server_billing_stats": {
        "name": "get_server_billing_stats",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "query im working on to replace this with a single function",
            "SELECT `vps_masters`.`vps_name` AS `vps_name`",
            ", `vps_masters`.`vps_load` AS `vps_load`",
            ", `active_vps`.`active_accounts` AS `active_accounts`",
            ", `active_vps`.`active_slices` AS `active_slices`",
            ", `total_query`.`total_earned` AS `total_earned`",
            ", `last30_query`.`total_earned` AS `last30_earned`",
            ", `activeip_query`.`active_ips` AS `active_ips`",
            "FROM",
            "((((`vps_masters`",
            "JOIN (SELECT `vps`.`vps_server` AS `vps_server`",
            ", count(`vps`.`vps_id`) AS `active_accounts`",
            ", sum(`vps`.`vps_slices`) AS `active_slices`",
            "FROM",
            "`vps`",
            "WHERE",
            "(`vps`.`vps_status` = 'active')",
            "GROUP BY",
            "`vps`.`vps_server`) AS `active_vps`)",
            "JOIN (SELECT `vps`.`vps_server` AS `vps_server`",
            ", sum(`invoices`.`invoices_amount`) AS `total_earned`",
            "FROM",
            "(`vps`",
            "LEFT JOIN `invoices`",
            "ON (((`invoices`.`invoices_extra` = `vps`.`vps_invoice`) OR (`invoices`.`invoices_description` LIKE concat('% for VPS ', `vps`.`vps_id`)))))",
            "WHERE",
            "(`invoices`.`invoices_module`='vps' and (`invoices`.`invoices_type` = 1)",
            "AND (`invoices`.`invoices_paid` = 1))",
            "GROUP BY",
            "`vps`.`vps_server`) AS `total_query`)",
            "JOIN (SELECT `vps`.`vps_server` AS `vps_server`",
            ", sum(`invoices`.`invoices_amount`) AS `total_earned`",
            "FROM",
            "(`vps`",
            "LEFT JOIN `invoices`",
            "ON (((`invoices`.`invoices_extra` = `vps`.`vps_invoice`) OR (`invoices`.`invoices_description` LIKE concat('% for VPS ', `vps`.`vps_id`)))))",
            "WHERE",
            "(`invoices`.`invoices_module`='vps' and (`invoices`.`invoices_type` = 1)",
            "AND (`invoices`.`invoices_paid` = 1)",
            "AND (`invoices`.`invoices_date` >= (now() - INTERVAL 30 DAY)))",
            "GROUP BY",
            "`vps`.`vps_server`) AS `last30_query`)",
            "JOIN (SELECT `vps_ips`.`ips_server` AS `vps_server`",
            ", count(`vps_ips`.`ips_ip`) AS `active_ips`",
            "FROM",
            "`vps_ips`",
            "WHERE",
            "(`vps_ips`.`ips_ip` IN (SELECT substr(substr(`repeat_invoices`.`repeat_invoices_description`, 1, (locate(' for VPS', `repeat_invoices`.`repeat_invoices_description`) - 1)), 15) AS `ip`",
            "FROM",
            "(`repeat_invoices`",
            "JOIN `vps`)",
            "WHERE",
            "((`repeat_invoices`.`repeat_invoices_description` LIKE concat('Additional IP % for VPS ', `vps`.`vps_id`))",
            "AND (`vps`.`vps_status` = 'active')))",
            "OR `vps_ips`.`ips_ip` IN (SELECT `vps`.`vps_ip`",
            "FROM",
            "`vps`",
            "WHERE",
            "(`vps`.`vps_status` = 'active')))",
            "GROUP BY",
            "`vps_ips`.`ips_server`) AS `activeip_query`)",
            "WHERE",
            "((`active_vps`.`vps_server` = `vps_masters`.`vps_id`)",
            "AND (`total_query`.`vps_server` = `vps_masters`.`vps_id`)",
            "AND (`last30_query`.`vps_server` = `vps_masters`.`vps_id`)",
            "AND (`activeip_query`.`vps_server` = `vps_masters`.`vps_id`))"
        ],
        "fieldtexts": []
    },
    "server_billing_stats_old": {
        "name": "server_billing_stats_old",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "server_billing_stats": {
        "name": "server_billing_stats",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_linux_load_data": {
        "name": "get_linux_load_data",
        "params": "",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@return array|null"
        ],
        "fieldtexts": []
    },
    "get_server_cpu_usage": {
        "name": "get_server_cpu_usage",
        "params": "",
        "description": [
            "@return float"
        ],
        "fieldtexts": []
    },
    "server_cpu_usage": {
        "name": "server_cpu_usage",
        "params": "$return = false",
        "description": [
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "stats": {
        "name": "stats",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin"
        ],
        "fieldtexts": []
    },
    "weekly_sales_by_module": {
        "name": "weekly_sales_by_module",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "weekly_sales_by_payment_type": {
        "name": "weekly_sales_by_payment_type",
        "params": "$return = false",
        "description": [
            "Daily Recap Email",
            "@author Joe Huss <detain@interserver.net>",
            "@package MyAdmin",
            "@category Scripts",
            "@copyright 2018",
            "@param bool $return",
            "@return",
            "use Hisune\\EchartsPHP\\ECharts;",
            "@param bool $return",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "zero_billing": {
        "name": "zero_billing",
        "params": "",
        "description": [
            "Billing",
            "@author G <kumar.interserver@gmail.com>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "unbilled_websites()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "sudo_session": {
        "name": "sudo_session",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "sudo_session()"
        ],
        "fieldtexts": []
    },
    "system_log": {
        "name": "system_log",
        "params": "$custid = false",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use Monolog\\Logger;",
            "use SensioLabs\\AnsiConverter\\AnsiToHtmlConverter;",
            "use SensioLabs\\AnsiConverter\\Theme\\SolarizedXTermTheme;",
            "Views the system logs  (formerly the billingd.log file)",
            "- [Isotope - combination filters, update filter counts](https:\/\/codepen.io\/desandro\/pen\/pyxwem)",
            "- [Isotope - filtering with search field and button filters](https:\/\/codepen.io\/desandro\/pen\/mCdbD)",
            "- [Isotope - filtering, with toggle buttons](https:\/\/codepen.io\/desandro\/pen\/vEJbNr)",
            "- [Isotope - fade in from bottom with visibleStyle & hiddenStyle](https:\/\/codepen.io\/desandro\/pen\/qjXKBp)",
            "- [Isotope - Bootstrap 3](https:\/\/codepen.io\/desandro\/pen\/yeezdp)",
            "- [Bootstrap framework snippet list projects](https:\/\/bootdey.com\/snippets\/view\/list-projects)",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "ui_elements": {
        "name": "ui_elements",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "@TODO Unfinished",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_host_server_clients": {
        "name": "view_host_server_clients",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "view_host_server_clients()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_host_server": {
        "name": "view_host_server",
        "params": "$id = false",
        "description": [
            "Host Server Display",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "view_host_server()",
            "@param bool $id optional, the id of the host server to view",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_ticket": {
        "name": "view_ticket",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "view_ticket()"
        ],
        "fieldtexts": []
    },
    "api_get_modules": {
        "name": "api_get_modules",
        "params": "",
        "description": [
            "API Billing Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category API"
        ],
        "fieldtexts": []
    },
    "api_get_prepay_remaining": {
        "name": "api_get_prepay_remaining",
        "params": "$sid, $module",
        "description": [
            "get amount of prepay remaining in the given module",
            "@param string $sid the session id",
            "@param string $module the module you want to check your prepay amounts on",
            "@return array"
        ],
        "fieldtexts": []
    },
    "api_make_payment": {
        "name": "api_make_payment",
        "params": "$sid, $module, $invoice",
        "description": [
            "creates a payment for the given invoice",
            "@param string $sid     the session id",
            "@param string $module  the module of the service being paid on",
            "@param int    $invoice the invoice id you want to make a payment on",
            "@return array",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "api_get_paypal_url": {
        "name": "api_get_paypal_url",
        "params": "$module, $invoice",
        "description": [
            "Get the PayPal payment URL for an invoice on a given module.",
            "@param string $module the module the invoice is for. use [get_modules](#get_modules) to get a list of modules",
            "@param int|string $invoice the invoice id, or a comma separated list of invoice ids to get a payment url for.",
            "@return string the paypal payment url."
        ],
        "fieldtexts": []
    },
    "api_session_wrapper": {
        "name": "api_session_wrapper",
        "params": "$sid",
        "description": [
            "API Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category API",
            "require_once INCLUDE_ROOT . '\/api\/api.session.php';",
            "require_once INCLUDE_ROOT . '\/api\/api.billing.php';",
            "require_once INCLUDE_ROOT . '\/api\/api.licenses.php';",
            "require_once INCLUDE_ROOT . '\/api\/api.vps.php';",
            "require_once INCLUDE_ROOT . '\/api\/api.webhosting.php';",
            "require_once INCLUDE_ROOT . '\/api\/api.ticketing.php';",
            "function used to validate a session for automatic incorporation with other functions to provide a session check.",
            "@param string $sid the session id.",
            "@return bool whether or not the check was successful"
        ],
        "fieldtexts": []
    },
    "api_get_ima": {
        "name": "api_get_ima",
        "params": "$sid",
        "description": [
            "@param $sid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "api_register": {
        "name": "api_register",
        "params": "$function, $input, $output, $label = '', $logged_in = true",
        "description": [
            "api_register()",
            "adds a function to be used by the API, hopefully.",
            "@param string $function the function name",
            "@param array $input array of input parameters that it accepts.",
            "@param array $output array of output parameters that it returns",
            "@param string $label description for the api call",
            "@param bool $logged_in whether or not the function requires the user to be logged in with a valid session",
            "@return void"
        ],
        "fieldtexts": []
    },
    "api_register_array": {
        "name": "api_register_array",
        "params": "$function, $data",
        "description": [
            "api_register_array()",
            "adds a function to be used by the API, hopefully.",
            "@param string $function the function name",
            "@param        $data",
            "@internal param array $input array of input parameters that it accepts.",
            "@return void"
        ],
        "fieldtexts": []
    },
    "api_prepare": {
        "name": "api_prepare",
        "params": "soap_server $server",
        "description": [
            "@param soap_server $server",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "api_multi_register": {
        "name": "api_multi_register",
        "params": "$function, $input, $output, $label = '', $logged_in = true",
        "description": [
            "api_multi_register()",
            "adds a function to be used by the API, hopefully.",
            "@param string $function the function name",
            "@param array $input array of input parameters that it accepts.",
            "@param array $output array of output parameters that it returns",
            "@param string $label description for the api call",
            "@param bool $logged_in whether or not the function requires the user to be logged in with a valid session",
            "@return void"
        ],
        "fieldtexts": []
    },
    "api_get_license_types": {
        "name": "api_get_license_types",
        "params": "",
        "description": [
            "API License Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category API",
            "gets a list of the possible license types available and there cost.",
            "@return array ad array of available license types"
        ],
        "fieldtexts": []
    },
    "api_cancel_license_ip": {
        "name": "api_cancel_license_ip",
        "params": "$sid, $ip, $type",
        "description": [
            "Cancels one of your Software Licenses of type $type on the given IP $ip",
            "@param string $sid  Session ID",
            "@param string $ip   IP Address to cancel",
            "@param int    $type Package ID. use [get_license_types](#get-license-types) to get a list of possible types.",
            "@return array",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "api_cancel_license": {
        "name": "api_cancel_license",
        "params": "$sid, $id",
        "description": [
            "Cancels one of your Software Licenses with id $id",
            "@param string $sid Session ID",
            "@param int    $id  License Order ID",
            "@return array",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "api_buy_license_prepay": {
        "name": "api_buy_license_prepay",
        "params": "$sid, $ip, $type, $coupon = '', $use_prepay = null",
        "description": [
            "Places an order in our system for a software license of type $type on the IP $ip",
            "@param string    $sid        the session id",
            "@param string    $ip         ip address you wish to license some software on",
            "@param int       $type       the package id of the license type you want. use [get_license_types](#get-license-types) to get a list of possible types.",
            "@param string    $coupon     an optional coupon",
            "@param null|bool $use_prepay optional, whether or not to use a prepay, if specified as true will return an error if not enough prepay",
            "@return array",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "api_buy_license": {
        "name": "api_buy_license",
        "params": "$sid, $ip, $type, $coupon = '', $use_prepay = null",
        "description": [
            "Places an order in our system for a software license of type $type on the IP $ip",
            "@param string    $sid        the session id",
            "@param string    $ip         ip address you wish to license some software on",
            "@param int       $type       the package id of the license type you want. use [get_license_types](#get-license-types) to get a list of possible types.",
            "@param string    $coupon     an optional coupon",
            "@param null|bool $use_prepay optional, whether or not to use a prepay, if specified as true will return an error if not enough prepay",
            "@return array",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "api_change_license_ip": {
        "name": "api_change_license_ip",
        "params": "$sid, $oldip, $newip",
        "description": [
            "changes the ip address a licenses is registered with",
            "@param string $sid the session id",
            "@param string $oldip the old ip address",
            "@param string $newip the new ip address",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "api_change_license_ip_by_id": {
        "name": "api_change_license_ip_by_id",
        "params": "$sid, $id, $newip",
        "description": [
            "changes the ip address a licenses is registered with using the given license id",
            "@param string $sid the session id",
            "@param int $id the old ip address",
            "@param string $newip the new ip address",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "api_login": {
        "name": "api_login",
        "params": "$username, $password",
        "description": [
            "API Session Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category API",
            "Attempts to login to the system using the username and password credentials you pass.",
            "@param string $username the username (email address) you signed up with.",
            "@param string $password the password you use to login to the web account, or alternatively the API key.",
            "@return bool|string false on failure or a string containing the session id"
        ],
        "fieldtexts": []
    },
    "api_logout": {
        "name": "api_logout",
        "params": "$sid",
        "description": [
            "Logs you out of our system invalidating the session id from further use.",
            "@param string $sid session id",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "openTicket": {
        "name": "openTicket",
        "params": "$user_email, $user_ip, $subject, $product, $body, $box_auth_value",
        "description": [
            "API Ticketing Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category API",
            "creates a new ticket in our support system",
            "@param string $user_email client email address",
            "@param string $user_ip client ip address",
            "@param string $subject subject of the ticket",
            "@param string $product the product\/service if any this is in reference to.",
            "@param string $body full content\/description for the ticket",
            "@param string $box_auth_value encryption string?",
            "@return array returns an array containing the status\/status_text result of adding a new ticket"
        ],
        "fieldtexts": []
    },
    "getTicketList": {
        "name": "getTicketList",
        "params": "$page =1, $limit = 10, $status = null",
        "description": [
            "returns a paginated list of tickets",
            "@param int $page page number of tickets to list",
            "@param int $limit how many tickets to show per page",
            "@param null|string $status null for no status limit or limit to a specific status",
            "@return array returns an array containing the status\/status_text and results"
        ],
        "fieldtexts": []
    },
    "viewTicket": {
        "name": "viewTicket",
        "params": "$ticketID",
        "description": [
            "returns information for viewing a given ticket",
            "@param int $ticketID the id of the ticket to retrieve. you can use [getTicketList](#getticketlist) to get a list of your tickets",
            "@return array"
        ],
        "fieldtexts": []
    },
    "ticketPost": {
        "name": "ticketPost",
        "params": "$ticketID, $content",
        "description": [
            "adds a response to a ticket",
            "@param int $ticketID the id of the ticket to add a response to. you can use [getTicketList](#getticketlist) to get a list of your tickets",
            "@param string $content the message to add to the ticket",
            "@return array returns an array containing the status \/ status_text of adding a ticket response"
        ],
        "fieldtexts": []
    },
    "api_validate_buy_vps": {
        "name": "api_validate_buy_vps",
        "params": "$os, $slices, $platform, $controlpanel, $period, $location, $version, $hostname, $coupon, $rootpass",
        "description": [
            "API VPS Functions",
            "@author    Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  API",
            "Checks if the parameters for your order pass validation and let you know if there are any errors. It will also give you information on the pricing breakdown.",
            "@param string $os file field from [get_vps_templates](#get_vps_templates)",
            "@param int $slices \t1 to 16 specifying the scale of the VPS resources you want (a 3 slice has 3x the resources of a 1 slice vps)",
            "@param string $platform platform field from the [get_vps_platforms_array](#get_vps_platforms_array)",
            "@param string $controlpanel none, cpanel, or da for None, cPanel, or DirectAdmin control panel addons, only available with CentOS",
            "@param int $period 1-36, How frequently to be billed in months. Some discounts as given based on the period",
            "@param int $location id field from the [get_vps_locations_array](#get_vps_locations_array)",
            "@param string $version os field from [get_vps_templates](#get_vps_templates)",
            "@param string $hostname Desired Hostname for the VPS",
            "@param string $coupon Optional Coupon to pass",
            "@param string $rootpass Desired Root Password (unused for windows, send a blank string)",
            "@return array parsed order parameters and the validation result"
        ],
        "fieldtexts": []
    },
    "api_buy_vps": {
        "name": "api_buy_vps",
        "params": "$os, $slices, $platform, $controlpanel, $period, $location, $version, $hostname, $coupon, $rootpass",
        "description": [
            "Places a VPS order in our system. These are the same parameters as api_validate_buy_vps.",
            "@param string $os file field from [get_vps_templates](#get_vps_templates)",
            "@param int $slices \t1 to 16 specifying the scale of the VPS resources you want (a 3 slice has 3x the resources of a 1 slice vps)",
            "@param string $platform platform field from the [get_vps_platforms_array](#get_vps_platforms_array)",
            "@param string $controlpanel none, cpanel, or da for None, cPanel, or DirectAdmin control panel addons, only available with CentOS",
            "@param int $period 1-36, How frequently to be billed in months. Some discounts as given based on the period",
            "@param int $location id field from the [get_vps_locations_array](#get_vps_locations_array)",
            "@param string $version os field from [get_vps_templates](#get_vps_templates)",
            "@param string $hostname Desired Hostname for the VPS",
            "@param string $coupon Optional Coupon to pass",
            "@param string $rootpass Desired Root Password (unused for windows, send a blank string)",
            "@return array array containing order result information"
        ],
        "fieldtexts": []
    },
    "api_buy_vps_admin": {
        "name": "api_buy_vps_admin",
        "params": "$os, $slices, $platform, $controlpanel, $period, $location, $version, $hostname, $coupon, $rootpass, $server = 0",
        "description": [
            "Places a VPS order in our system. These are the same parameters as api_validate_buy_vps with the addition of a server parameter.  This function is for admins only.",
            "@param string $os file field from [get_vps_templates](#get_vps_templates)",
            "@param int $slices \t1 to 16 specifying the scale of the VPS resources you want (a 3 slice has 3x the resources of a 1 slice vps)",
            "@param string $platform platform field from the [get_vps_platforms_array](#get_vps_platforms_array)",
            "@param string $controlpanel none, cpanel, or da for None, cPanel, or DirectAdmin control panel addons, only available with CentOS",
            "@param int $period 1-36, How frequently to be billed in months. Some discounts as given based on the period",
            "@param int $location id field from the [get_vps_locations_array](#get_vps_locations_array)",
            "@param string $version os field from [get_vps_templates](#get_vps_templates)",
            "@param string $hostname Desired Hostname for the VPS",
            "@param string $coupon Optional Coupon to pass",
            "@param string $rootpass Desired Root Password (unused for windows, send a blank string)",
            "@param int $server 0 for auto assign otherwise the id of the vps master to put this on",
            "@return array array containing order result information"
        ],
        "fieldtexts": []
    },
    "api_auto_cpanel_login": {
        "name": "api_auto_cpanel_login",
        "params": "$id",
        "description": [
            "API Functions",
            "@author    Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  API",
            "Automatic CPanel Login to Client Web Interface",
            "@param int $id id of website",
            "@return array array containing status of error or ok and status_text with description of error or the unique logged in url",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "api_place_buy_website": {
        "name": "api_place_buy_website",
        "params": "$service_type, $period, $hostname, $coupon, $password, $script = 0",
        "description": [
            "Places a webhosting order for a website",
            "@param int $service_type",
            "@param int $period",
            "@param string $hostname",
            "@param string $coupon",
            "@param string $password",
            "@param int $script",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "api_validate_buy_website": {
        "name": "api_validate_buy_website",
        "params": "$period, $coupon, $tos, $service_type, $hostname, $password, $script",
        "description": [
            "Validates the order parameters for a webhosting order.",
            "@param int $period",
            "@param string $coupon",
            "@param string $tos",
            "@param int $service_type",
            "@param string $hostname",
            "@param string $password",
            "@param int $script",
            "@return array"
        ],
        "fieldtexts": []
    },
    "backup_get_servers": {
        "name": "backup_get_servers",
        "params": "",
        "description": [
            "Backup Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Backups",
            "define('NEW_BACKUP_SERVER', 14);",
            "register_event('get_service_types', 'get_backup_types', 'backups');",
            "register_event('parse_service_extra', 'parse_backup_extra', 'backups');",
            "backup_get_servers()",
            "@return array"
        ],
        "fieldtexts": []
    },
    "backup_get_server_name": {
        "name": "backup_get_server_name",
        "params": "$id",
        "description": [
            "backup_get_server_name()",
            "@param mixed $id",
            "@return"
        ],
        "fieldtexts": []
    },
    "get_backup_types": {
        "name": "get_backup_types",
        "params": "$hide_empty = false",
        "description": [
            "get_backup_types()",
            "@param bool $hide_empty whether to hide the gaps in service ids",
            "@return array"
        ],
        "fieldtexts": []
    },
    "backup_get_password": {
        "name": "backup_get_password",
        "params": "$id",
        "description": [
            "backup_get_password()",
            "@param mixed $id",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "backup_welcome_email": {
        "name": "backup_welcome_email",
        "params": "$id",
        "description": [
            "backup_welcome_email()",
            "@param mixed $id",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "parse_backup_extra": {
        "name": "parse_backup_extra",
        "params": "$backup_extra",
        "description": [
            "parse_backup_extra()",
            "@param mixed $backup_extra",
            "@return array"
        ],
        "fieldtexts": []
    },
    "backup_features": {
        "name": "backup_features",
        "params": "",
        "description": [
            "backup_features()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "backup_destroy": {
        "name": "backup_destroy",
        "params": "$id",
        "description": [
            "@param $id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "backup_create": {
        "name": "backup_create",
        "params": "$id, $username, $type, $pass",
        "description": [
            "backup_create()",
            "@param mixed $id",
            "@param mixed $username",
            "@param mixed $type",
            "@param mixed $pass",
            "@return string"
        ],
        "fieldtexts": []
    },
    "backup_get_server_id": {
        "name": "backup_get_server_id",
        "params": "$server",
        "description": [
            "backup_get_server_id()",
            "@param mixed $server",
            "@return int|string"
        ],
        "fieldtexts": []
    },
    "backup_get_next_id": {
        "name": "backup_get_next_id",
        "params": "$server",
        "description": [
            "backup_get_next_id()",
            "@param mixed $server",
            "@return int"
        ],
        "fieldtexts": []
    },
    "select_backup_type": {
        "name": "select_backup_type",
        "params": "$default = 0, $name = 'backup', $showprice = true, $limittype = false, $javascript = false, $limitprice = false",
        "description": [
            "select_backup_type()",
            "@param integer $default",
            "@param string  $name",
            "@param bool    $showprice",
            "@param bool    $limittype",
            "@param bool    $javascript",
            "@param bool    $limitprice",
            "@return string"
        ],
        "fieldtexts": []
    },
    "backup_queue": {
        "name": "backup_queue",
        "params": "",
        "description": [
            "Backup Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Backups",
            "backup_queue()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "backup_locations": {
        "name": "backup_locations",
        "params": "",
        "description": [
            "Backup Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Backups",
            "backup_locations()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "buy_backup": {
        "name": "buy_backup",
        "params": "",
        "description": [
            "Backup Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Backups",
            "buy_backup()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "server_select": {
        "name": "server_select",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "view_backup": {
        "name": "view_backup",
        "params": "$id = false",
        "description": [
            "Backup Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Backups",
            "@param bool|int $id",
            "@return void",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_backups_list": {
        "name": "view_backups_list",
        "params": "",
        "description": [
            "Backup Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Backups",
            "view_backups_list()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "__set": {
        "name": "__set",
        "params": "$property, $value",
        "description": [
            "@param $property",
            "@param $value",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "__get": {
        "name": "__get",
        "params": "$property",
        "description": [
            "@param $property",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "__call": {
        "name": "__call",
        "params": "$method, $value",
        "description": [
            "@param $method",
            "@param $value",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "register": {
        "name": "register",
        "params": "",
        "description": [
            "registers the Order with the system",
            "@return $this"
        ],
        "fieldtexts": []
    },
    "doEnable": {
        "name": "doEnable",
        "params": "\\ServiceHandler $serviceOrder, $repeatInvoiceId, $regexMatch = false",
        "description": [
            "@var \\ServiceHandler $service",
            "\t\t$service = $event->getSubject();",
            "\t\tfunction_requirements('class.AddonHandler');",
            "\t\t$addon = new \\AddonHandler();",
            "\t\t$addon->setModule(self::$module)",
            "\t\t\t->set_text('Softaculous')",
            "\t\t\t->set_cost(VPS_SOFTACULOUS_COST)",
            "\t\t\t->set_require_ip(true)",
            "\t\t\t->setEnable([__CLASS__, 'doEnable'])",
            "\t\t\t->setDisable([__CLASS__, 'doDisable'])",
            "\t\t\t->register();",
            "\t\t$service->addAddon($addon);",
            "\t}",
            "@param \\ServiceHandler $serviceOrder",
            "@param                $repeatInvoiceId",
            "@param bool           $regexMatch"
        ],
        "fieldtexts": []
    },
    "doDisable": {
        "name": "doDisable",
        "params": "\\ServiceHandler $serviceOrder, $repeatInvoiceId, $regexMatch = false",
        "description": [
            "@param \\ServiceHandler $serviceOrder",
            "@param                $repeatInvoiceId",
            "@param bool           $regexMatch"
        ],
        "fieldtexts": []
    },
    "setEnable": {
        "name": "setEnable",
        "params": "$callable",
        "description": [
            "Sets the Order text that shows up on the invoice.",
            "@param function $callable the Order text",
            "@return \\ServiceHandler"
        ],
        "fieldtexts": []
    },
    "setDisable": {
        "name": "setDisable",
        "params": "$callable",
        "description": [
            "Sets the Order text that shows up on the invoice.",
            "@param function $callable the Order text",
            "@return \\ServiceHandler"
        ],
        "fieldtexts": []
    },
    "set_text": {
        "name": "set_text",
        "params": "$text",
        "description": [
            "Sets the templates text",
            "@param mixed $text the new text",
            "@return \\MyAdmin\\Orm\\Template"
        ],
        "fieldtexts": []
    },
    "set_text_match": {
        "name": "set_text_match",
        "params": "$text",
        "description": [
            "Sets the addon text that shows up on the invoice.",
            "@param string $text the addon text",
            "@return $this"
        ],
        "fieldtexts": []
    },
    "set_cost": {
        "name": "set_cost",
        "params": "$cost",
        "description": [
            "Sets the websites cost",
            "@param float $cost the new cost",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "setCost": {
        "name": "setCost",
        "params": "$cost",
        "description": [
            "Sets the websites cost",
            "@param float $cost the new cost",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "setOneTime": {
        "name": "setOneTime",
        "params": "$oneTime",
        "description": [
            "Sets whether or not this is a one time item",
            "@param bool $oneTime whether or not this is a one time charge",
            "@return $this"
        ],
        "fieldtexts": []
    },
    "set_require_ip": {
        "name": "set_require_ip",
        "params": "$require_ip",
        "description": [
            "Sets the addon require_ip that shows up on the invoice.",
            "@param string $require_ip the addon require_ip",
            "@return $this"
        ],
        "fieldtexts": []
    },
    "setModule": {
        "name": "setModule",
        "params": "$module",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "namespace MyAdmin\\Services;",
            "class ServiceQueue",
            "{",
            "\tpublic $module = null;",
            "\tpublic $settings = null;",
            "\tpublic $db;",
            "\tpublic $id = null;",
            "\tpublic $serviceTypes;",
            "\tpublic $serviceInfo;",
            "\tpublic $serviceExtra;",
            "\tpublic $serverInfo;",
            "\tpublic $returnOutput = false;",
            "\tpublic function __construct($id = false)",
            "\t{",
            "\t\tif ($id === false) {",
            "\t\t\t$this->returnOutput = false;",
            "\t\t\tif (isset($GLOBALS['tf']->variables->request['id'])) {",
            "\t\t\t\t$this->setId($GLOBALS['tf']->variables->request['id']);",
            "\t\t\t}",
            "\t\t} else {",
            "\t\t\t$this->returnOutput = true;",
            "\t\t\t$this->setId($id);",
            "\t\t}",
            "\t}",
            "sets the module and loads the module settings",
            "@param string $module the module",
            "@return \\MyAdmin\\Services\\ServiceQueue"
        ],
        "fieldtexts": []
    },
    "set_short": {
        "name": "set_short",
        "params": "$short",
        "description": [
            "Sets the addon short that shows up on the invoice.",
            "@param string $short the addon short",
            "@return $this"
        ],
        "fieldtexts": []
    },
    "get_text": {
        "name": "get_text",
        "params": "$text",
        "description": [
            "PDF::get_text()",
            "@param mixed $text",
            "@return string"
        ],
        "fieldtexts": []
    },
    "getText": {
        "name": "getText",
        "params": "",
        "description": [
            "Gets the templates text",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "get_text_match": {
        "name": "get_text_match",
        "params": "",
        "description": [
            "Gets the addon text that shows up on the invoice.",
            "@return string the addon text"
        ],
        "fieldtexts": []
    },
    "getTextMatch": {
        "name": "getTextMatch",
        "params": "",
        "description": [
            "Gets the addon text that shows up on the invoice.",
            "@return string the addon text"
        ],
        "fieldtexts": []
    },
    "get_cost": {
        "name": "get_cost",
        "params": "",
        "description": [
            "Gets the websites cost",
            "@return float"
        ],
        "fieldtexts": []
    },
    "getCost": {
        "name": "getCost",
        "params": "",
        "description": [
            "Gets the websites cost",
            "@return float"
        ],
        "fieldtexts": []
    },
    "getOneTime": {
        "name": "getOneTime",
        "params": "",
        "description": [
            "Gets whether or not this is a one time charge type addon",
            "@return bool whether or not this is a one time charge type addon"
        ],
        "fieldtexts": []
    },
    "get_require_ip": {
        "name": "get_require_ip",
        "params": "",
        "description": [
            "Gets the addon require_ip that shows up on the invoice.",
            "@return string the addon require_ip"
        ],
        "fieldtexts": []
    },
    "getRequireIp": {
        "name": "getRequireIp",
        "params": "",
        "description": [
            "Gets the addon require_ip that shows up on the invoice.",
            "@return string the addon require_ip"
        ],
        "fieldtexts": []
    },
    "getModule": {
        "name": "getModule",
        "params": "",
        "description": [
            "Gets the whitelist module",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_short": {
        "name": "get_short",
        "params": "",
        "description": [
            "Gets the addon short that shows up on the invoice.",
            "@return string the addon short"
        ],
        "fieldtexts": []
    },
    "getShort": {
        "name": "getShort",
        "params": "",
        "description": [
            "Gets the addon short that shows up on the invoice.",
            "@return string the addon short"
        ],
        "fieldtexts": []
    },
    "affiliate_banners": {
        "name": "affiliate_banners",
        "params": "",
        "description": [
            "Affiliate Functions",
            "@package MyAdmin"
        ],
        "fieldtexts": []
    },
    "affiliate_coupon": {
        "name": "affiliate_coupon",
        "params": "",
        "description": [
            "Affiliate Functions",
            "@package MyAdmin"
        ],
        "fieldtexts": []
    },
    "affiliate_credit": {
        "name": "affiliate_credit",
        "params": "",
        "description": [
            "Affiliate Functions",
            "@package MyAdmin"
        ],
        "fieldtexts": []
    },
    "affiliate_dock_setup": {
        "name": "affiliate_dock_setup",
        "params": "",
        "description": [
            "Affiliate Functions",
            "@package MyAdmin"
        ],
        "fieldtexts": []
    },
    "affiliates_list": {
        "name": "affiliates_list",
        "params": "",
        "description": [
            "Affiliate Functions",
            "@package MyAdmin"
        ],
        "fieldtexts": []
    },
    "affiliate_map_data": {
        "name": "affiliate_map_data",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "affiliate_map",
            "returns an array of affiliate stats in the format of:",
            "Array(",
            "[2013-05-20] => Array(",
            "[total] => 16",
            "[rejected] => 12",
            "[failed] => 4",
            ")",
            "[2013-05-21] => Array(",
            "[total] => 26",
            "[default] => 1",
            "[paid] => 1",
            "[rejected] => 10",
            "[locked] => 6",
            "[failed] => 8",
            ")",
            ")",
            "@return array array of signups by date in Y-m-d format"
        ],
        "fieldtexts": []
    },
    "affiliate_map": {
        "name": "affiliate_map",
        "params": "",
        "description": [
            "billing_map()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "affiliate_payment_setup": {
        "name": "affiliate_payment_setup",
        "params": "",
        "description": [
            "Affiliate Functions",
            "@package MyAdmin",
            "Setup payment options for affiliates"
        ],
        "fieldtexts": []
    },
    "affiliate": {
        "name": "affiliate",
        "params": "$ajax=false, $exp_st = 'default', $exp_type = 'csv'",
        "description": [
            "Affiliate Functions",
            "@package MyAdmin"
        ],
        "fieldtexts": []
    },
    "affiliates1": {
        "name": "affiliates1",
        "params": "$update = false",
        "description": [
            "Affiliate Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Affiliates",
            "displays \/ handles the admin affiliates page",
            "@param bool|string $update",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "create_sales_graph": {
        "name": "create_sales_graph",
        "params": "$paidSales, $pendingSales, $defaultSales",
        "description": [
            "Affiliate Functions",
            "@package  MyAdmin",
            "@param $paidSales",
            "@param $pendingSales",
            "@param $defaultSales",
            "@return bool|string",
            "@internal param bool $custid",
            "@internal param int $limit"
        ],
        "fieldtexts": []
    },
    "affiliate_sales_graph": {
        "name": "affiliate_sales_graph",
        "params": "$custid = false, $limit = 31",
        "description": [
            "@param bool $custid",
            "@param int  $limit",
            "@return bool|string"
        ],
        "fieldtexts": []
    },
    "affiliates": {
        "name": "affiliates",
        "params": "$update = false",
        "description": [
            "Affiliate Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Affiliates",
            "displays \/ handles the admin affiliates page",
            "@param bool|string $update",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "affiliate_stats": {
        "name": "affiliate_stats",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Affiliates",
            "affiliate_stats",
            "returns an array of affiliate stats in the format of:",
            "Array(",
            "[2013-05-20] => Array(",
            "[total] => 16",
            "[rejected] => 12",
            "[failed] => 4",
            ")",
            "[2013-05-21] => Array(",
            "[total] => 26",
            "[default] => 1",
            "[paid] => 1",
            "[rejected] => 10",
            "[locked] => 6",
            "[failed] => 8",
            ")",
            ")",
            "@return array array of signups by date in Y-m-d format"
        ],
        "fieldtexts": []
    },
    "affiliate_stats_graph": {
        "name": "affiliate_stats_graph",
        "params": "",
        "description": [
            "billing_stats()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "affiliate_status_legend": {
        "name": "affiliate_status_legend",
        "params": "$title = false",
        "description": [
            "Affiliate Functions",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Affiliates",
            "@param bool $title",
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "affiliate_summary_report": {
        "name": "affiliate_summary_report",
        "params": "$custid = false, $limit = 31",
        "description": [
            "@param bool $custid",
            "@param int  $limit",
            "@return string"
        ],
        "fieldtexts": []
    },
    "affiliate_tos": {
        "name": "affiliate_tos",
        "params": "",
        "description": [
            "Affiliate Functions",
            "@package MyAdmin"
        ],
        "fieldtexts": []
    },
    "create_graph": {
        "name": "create_graph",
        "params": "$averages",
        "description": [
            "Affiliate Functions",
            "@package MyAdmin",
            "@param $averages",
            "@return bool|string",
            "@internal param bool $custid",
            "@internal param int $limit"
        ],
        "fieldtexts": []
    },
    "getTrafficData": {
        "name": "getTrafficData",
        "params": "$custid, $db, $gtype, $limit",
        "description": [
            "@param $custid",
            "@param $db",
            "@param $gtype",
            "@param $limit",
            "@return array|string"
        ],
        "fieldtexts": []
    },
    "affiliate_traffic_graph": {
        "name": "affiliate_traffic_graph",
        "params": "$custid = false, $limit = 31",
        "description": [
            "@param bool $custid",
            "@param int $limit",
            "@return bool|string"
        ],
        "fieldtexts": []
    },
    "affiliate_traffic_table": {
        "name": "affiliate_traffic_table",
        "params": "$custid = false, $limit = 20",
        "description": [
            "Affiliate Functions",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Affiliates",
            "@param bool $custid",
            "@param int  $limit",
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "ajax_affiliate": {
        "name": "ajax_affiliate",
        "params": "",
        "description": [
            "Affiliate Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Affiliates",
            "ajax affiliates interface",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "annual_report_data": {
        "name": "annual_report_data",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "annual_report_data",
            "returns an array of affiliate stats in the format of:",
            "Array(",
            "[2013-05-20] => Array(",
            "[total] => 16",
            "[rejected] => 12",
            "[failed] => 4",
            ")",
            "[2013-05-21] => Array(",
            "[total] => 26",
            "[default] => 1",
            "[paid] => 1",
            "[rejected] => 10",
            "[locked] => 6",
            "[failed] => 8",
            ")",
            ")",
            "@return array array of signups by date in Y-m-d format"
        ],
        "fieldtexts": []
    },
    "annual_report": {
        "name": "annual_report",
        "params": "",
        "description": [
            "displays sales data",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "billing_date": {
        "name": "billing_date",
        "params": "",
        "description": [
            "Billing Balance Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing"
        ],
        "fieldtexts": []
    },
    "billing_frequency": {
        "name": "billing_frequency",
        "params": "",
        "description": [
            "Billing Frequency",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing"
        ],
        "fieldtexts": []
    },
    "get_prorated_cost": {
        "name": "get_prorated_cost",
        "params": "$repeat_cost, $frequency, $next_invoice_date",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "include_once INCLUDE_ROOT.'\/billing\/invoicing\/invoicing.inc.php';",
            "include_once INCLUDE_ROOT.'\/billing\/payments\/payments.inc.php';",
            "include_once INCLUDE_ROOT.'\/..\/vendor\/detain\/myadmin-paypal-payments\/src\/paypal.functions.inc.php';",
            "gets the prorated amount to charge a client",
            "@param float $repeat_cost",
            "@param int $frequency",
            "@param string $next_invoice_date",
            "@return float"
        ],
        "fieldtexts": []
    },
    "get_frequency_discount": {
        "name": "get_frequency_discount",
        "params": "$frequency",
        "description": [
            "gets the discount amount based on frequency",
            "@param int $frequency the frequency to check the discount of",
            "@return float the discount $"
        ],
        "fieldtexts": []
    },
    "calculate_service_frequency": {
        "name": "calculate_service_frequency",
        "params": "$service, $module",
        "description": [
            "calculates the $services frequency with several fallback methods to help ensure success.",
            "@param int $service the service id #",
            "@param string $module the module of the service",
            "@return int the billing frequency for the service"
        ],
        "fieldtexts": []
    },
    "get_signup_comments": {
        "name": "get_signup_comments",
        "params": "",
        "description": [
            "gets additional comments from the client for use in the signup form",
            "@return string returns a table of signup related comments for inclusion in a signup form",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "submonths": {
        "name": "submonths",
        "params": "$olddate, $newdate",
        "description": [
            "finds the difference between 2 dates in months",
            "@param string $olddate initial date point",
            "@param string $newdate new date point",
            "@return int the number of months between the 2 dates"
        ],
        "fieldtexts": []
    },
    "monthsBetween": {
        "name": "monthsBetween",
        "params": "$startDate, $endDate",
        "description": [
            "determines the number of months between 2 dates",
            "@param string $startDate the start date",
            "@param string $endDate the end date",
            "@return int the number of months between the 2 dates"
        ],
        "fieldtexts": []
    },
    "addmonths": {
        "name": "addmonths",
        "params": "$date, $months",
        "description": [
            "adds a certain amount of months onto the given date and returns it.",
            "@param string $date the given date",
            "@param int $months the number of months to add",
            "@return \\date|false|string"
        ],
        "fieldtexts": []
    },
    "adddays": {
        "name": "adddays",
        "params": "$date, $days",
        "description": [
            "adds a certain amount of days onto the given date and returns it",
            "@param string $date the given date",
            "@param int $days the days to add to it",
            "@return string the resulting date"
        ],
        "fieldtexts": []
    },
    "shouldbill": {
        "name": "shouldbill",
        "params": "$invoicedate, $frequency, $now = '%NOW%'",
        "description": [
            "given an invoice date, how frequently its supposed to get billed, and the current date,",
            "decide whether or not i should invoice this thing.",
            "@param string $invoicedate the invoice date",
            "@param int $frequency the billing frequency",
            "@param string $now what it should consider now to be, optional, leave blank to use the current date, otherwise it should be in the Ymd format",
            "@return bool whether or not it should bill"
        ],
        "fieldtexts": []
    },
    "shouldnotify": {
        "name": "shouldnotify",
        "params": "$invoicedate, $frequency",
        "description": [
            "determines whether or not its should notify for an invoice given the last invoice date and frequency",
            "@param string $invoicedate the invoice date in the mysql date format",
            "@param int $frequency the billing frequency",
            "@return bool whether or not it should notify"
        ],
        "fieldtexts": []
    },
    "ensure_timezone": {
        "name": "ensure_timezone",
        "params": "",
        "description": [],
        "fieldtexts": []
    },
    "set_debug_mode": {
        "name": "set_debug_mode",
        "params": "$debug = false",
        "description": [
            "@param bool $debug"
        ],
        "fieldtexts": []
    },
    "set_verbose_mode": {
        "name": "set_verbose_mode",
        "params": "$verbose = false",
        "description": [
            "@param bool $verbose"
        ],
        "fieldtexts": []
    },
    "log": {
        "name": "log",
        "params": "$message, $line = false, $file = false, $level = 'info'",
        "description": [
            "logs a message",
            "@param string $message message to log",
            "@param bool|false|int $line optional line your calling from to track down where the log messages originates easily to send w\/ the log message",
            "@param bool|false|string $file optional file your calling from to track down where the log messages originates easily to send w\/ the log message",
            "@param string $level level to log the message at, defaults to info"
        ],
        "fieldtexts": []
    },
    "service_types": {
        "name": "service_types",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "safe_date": {
        "name": "safe_date",
        "params": "$date",
        "description": [
            "@param $date",
            "@return bool|int|string"
        ],
        "fieldtexts": []
    },
    "last_invoice": {
        "name": "last_invoice",
        "params": "$repeat_invoice",
        "description": [
            "@param $repeat_invoice",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "is_prorate_billing": {
        "name": "is_prorate_billing",
        "params": "",
        "description": [
            "@return bool"
        ],
        "fieldtexts": []
    },
    "is_normal_billing": {
        "name": "is_normal_billing",
        "params": "",
        "description": [
            "@return bool"
        ],
        "fieldtexts": []
    },
    "is_already_invoiced": {
        "name": "is_already_invoiced",
        "params": "",
        "description": [
            "checks if there is a invoice in db",
            "@return bool returns true if there is no invoice, false if there is"
        ],
        "fieldtexts": []
    },
    "end_of_day": {
        "name": "end_of_day",
        "params": "",
        "description": [
            "@return false|string"
        ],
        "fieldtexts": []
    },
    "repeat_billing": {
        "name": "repeat_billing",
        "params": "$id = false",
        "description": [
            "process repeat billing, either on all repeat invoices or on a single one.",
            "@param bool $id optional, the repeat invoice to process"
        ],
        "fieldtexts": []
    },
    "add_invoice_mail_queue": {
        "name": "add_invoice_mail_queue",
        "params": "$invoice",
        "description": [
            "@TODO look for packages that are set to cancel at end of billing cycle",
            "\t\t\t\t\tif ($this->debugMode == true) {",
            "\t\t\t\t\t\t$this->log(\"Normally ID Create new {$this->settings['TABLE']} \".$repeat_invoice->getService().\" Invoice For Customer {$custid} Repeat Invoice {$id} Cost \".$repeat_invoice->get_cost(), __LINE__, __FILE__);",
            "\t\t\t\t\t} else {",
            "\t\t\t\t\t\t$invoice = $repeat_invoice->invoice(false, false, true, false);",
            "\t\t\t\t\t\t$this->add_invoice_mail_queue($invoice);",
            "\t\t\t\t\t}",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t}",
            "\t\t$this->log(\"Invoiced {$invoiced} People\", __LINE__, __FILE__);",
            "\t}",
            "adds an invoice to the mail queue",
            "@param Invoice $invoice",
            "@return void"
        ],
        "fieldtexts": []
    },
    "mail_invoices": {
        "name": "mail_invoices",
        "params": "$data",
        "description": [
            "mails invoices out to clients and admins who hav eit enabled",
            "@param array $data (array of invoice, module)",
            "@internal param string $module",
            "@return false|int false if error or no customer data, otherwise returns customer id",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "charge_creditcards": {
        "name": "charge_creditcards",
        "params": "",
        "description": [],
        "fieldtexts": []
    },
    "delete_pending": {
        "name": "delete_pending",
        "params": "",
        "description": [
            "remove pending orders that have been in the system for a while"
        ],
        "fieldtexts": []
    },
    "suspend_accounts": {
        "name": "suspend_accounts",
        "params": "",
        "description": [
            "processes suspendable accounts",
            "@throws Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_coupon_cost": {
        "name": "get_coupon_cost",
        "params": "$orig_cost, $coupon",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "modifies the $orig_cost based on the $coupon and $module passed and returns the modified cost",
            "@param float $orig_cost the original service cost",
            "@param int $coupon the coupon #",
            "@param string $module the module this is for",
            "@return float the modified cost after the coupon"
        ],
        "fieldtexts": []
    },
    "penny_coupon_check": {
        "name": "penny_coupon_check",
        "params": "$service, $module, $txn_id, $payer_email",
        "description": [
            "checks whether or not the person is allowed to use a penny coupon",
            "@param $service",
            "@param $module",
            "@param $txn_id",
            "@param $payer_email",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "penny_coupon_usable_check": {
        "name": "penny_coupon_usable_check",
        "params": "$custid, $module = 'default', $skip_txn = false",
        "description": [
            "checks whether or not the given client can use a penny coupon still.",
            "@param int $custid the customer id to check",
            "@param string $module the module of the customer id (optional)",
            "@param bool|false|string $skip_txn false to disable feature otherwise specifies a txn id to skip in paypal check",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_invoice": {
        "name": "get_invoice",
        "params": "",
        "description": [
            "Gets the websites invoice",
            "@return int"
        ],
        "fieldtexts": []
    },
    "get_client_invoices": {
        "name": "get_client_invoices",
        "params": "$module",
        "description": [
            "get all invoices for the given module.",
            "@param string $module module to use",
            "@return array an array of all the invoices."
        ],
        "fieldtexts": []
    },
    "get_client_unpaid_invoices": {
        "name": "get_client_unpaid_invoices",
        "params": "$module, $custid = false",
        "description": [
            "get_client_unpaid_invoices()",
            "get all invoices for the given module.",
            "@param string $module module to use",
            "@param integer|bool   $custid customer id or false for session id (only for admins)",
            "@return array an array of all the invoices."
        ],
        "fieldtexts": []
    },
    "get_invoice_data": {
        "name": "get_invoice_data",
        "params": "$data",
        "description": [
            "gets an invoice template prefilled out with invoices passed to it.",
            "@param array $data (array of invoice, module)",
            "@return array|bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_invoices": {
        "name": "get_invoices",
        "params": "$data",
        "description": [
            "gets an invoice template prefilled out with invoices passed to it.",
            "@param array $data (array of invoice, module)",
            "@return string invoice html",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "mail_invoice": {
        "name": "mail_invoice",
        "params": "$invoice = false, $module = 'default'",
        "description": [
            "mails an invoice",
            "@param bool|int $invoice optional, if not passed or false it uses the request 'invoice' variable , otherwise its an integer with the invoice #",
            "@param string $module the module the invoice is for",
            "@return void"
        ],
        "fieldtexts": []
    },
    "mark_invoice_paid": {
        "name": "mark_invoice_paid",
        "params": "$invoice_id, $payment_method, $module = 'default', $description_extra = ''",
        "description": [
            "marks a given invoice as paid then runs any actions that should be ran when the invoice is marked as paid",
            "@param integer $invoice_id the invoice id to mark paid",
            "@param integer $payment_method the invoice type",
            "@param string $module the module the invoice is for",
            "@param string $description_extra",
            "@return bool|integer false on error or returns the payment invoice id"
        ],
        "fieldtexts": []
    },
    "view_balance": {
        "name": "view_balance",
        "params": "$invoice_array = false",
        "description": [
            "Billing Balance Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "view_balance()",
            "@param bool $invoice_array",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_charges": {
        "name": "view_charges",
        "params": "",
        "description": [
            "view_charges()",
            "displays the payments list",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_invoice_pdf": {
        "name": "view_invoice_pdf",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_invoice": {
        "name": "view_invoice",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_invoices2_data": {
        "name": "view_invoices2_data",
        "params": "$invoice_datee = '', $for_export = false",
        "description": [
            "gets the list of current invoices and sends the output to add_output()"
        ],
        "fieldtexts": []
    },
    "view_invoices": {
        "name": "view_invoices",
        "params": "$pdf = false",
        "description": [
            "gets the list of current invoices and sends the output to add_output()",
            "@return bool always returns true",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "load": {
        "name": "load",
        "params": "$module",
        "description": [
            "loads a required php file",
            "@param string $module the file\/module to load",
            "@return void"
        ],
        "fieldtexts": []
    },
    "process": {
        "name": "process",
        "params": "$type = 'spam', $limit = false",
        "description": [
            "@param string $type",
            "@param bool   $limit"
        ],
        "fieldtexts": []
    },
    "confirmation_check": {
        "name": "confirmation_check",
        "params": "",
        "description": [
            "handles checking if we confirmed the order and completes it if so, otherwise shows the summary table",
            "@return bool returns true if successful false if not"
        ],
        "fieldtexts": []
    },
    "complete_order": {
        "name": "complete_order",
        "params": "",
        "description": [
            "completes the order",
            "@return bool returns false if there is an error or true if not"
        ],
        "fieldtexts": []
    },
    "bind_event": {
        "name": "bind_event",
        "params": "$function, $event",
        "description": [
            "Binds a function to be ran when the given event occurs",
            "@param string $function the name of the function that will be ran",
            "@param string $event the name of the event that triggers this function to be ran"
        ],
        "fieldtexts": []
    },
    "trigger_events": {
        "name": "trigger_events",
        "params": "$event",
        "description": [
            "Runs any functions associated with an event",
            "@param string $event the name of the event that occurred",
            "@return bool returns true if there were no problems or false if one of the functions returned false"
        ],
        "fieldtexts": []
    },
    "run": {
        "name": "run",
        "params": "$function",
        "description": [
            "runs a function returning false if the function returns false, then it triggers any functions bound to that function to run",
            "@param string $function the name f the function to run",
            "@return bool returns true on success or false on error"
        ],
        "fieldtexts": []
    },
    "set_page_title": {
        "name": "set_page_title",
        "params": "",
        "description": [
            "sets the page title",
            "@return true"
        ],
        "fieldtexts": []
    },
    "get_interval_name": {
        "name": "get_interval_name",
        "params": "",
        "description": [
            "translates an interval into a name",
            "@return string returns month or year depending on the interval"
        ],
        "fieldtexts": []
    },
    "alert": {
        "name": "alert",
        "params": "$title, $message, $level = 'alert-warning', $template = 'alert.html'",
        "description": [
            "@param $title",
            "@param $message",
            "@param string $level",
            "@param string $template",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "build_summary_header": {
        "name": "build_summary_header",
        "params": "",
        "description": [
            "creates the table header",
            "@return true"
        ],
        "fieldtexts": []
    },
    "build_summary_table": {
        "name": "build_summary_table",
        "params": "",
        "description": [
            "creates the billing\/confirmation question and displays the table",
            "@return true"
        ],
        "fieldtexts": []
    },
    "build_summary_footer": {
        "name": "build_summary_footer",
        "params": "",
        "description": [
            "creates the table footer",
            "@return true"
        ],
        "fieldtexts": []
    },
    "build_description": {
        "name": "build_description",
        "params": "",
        "description": [
            "sets up teh invoice description",
            "@return true"
        ],
        "fieldtexts": []
    },
    "update_frequency_cost": {
        "name": "update_frequency_cost",
        "params": "",
        "description": [
            "updates the frequency and cost variables based on the service",
            "@return true"
        ],
        "fieldtexts": []
    },
    "create_repeat_invoice": {
        "name": "create_repeat_invoice",
        "params": "",
        "description": [
            "creates the repeat invoice for the addon",
            "@return true"
        ],
        "fieldtexts": []
    },
    "create_invoice": {
        "name": "create_invoice",
        "params": "",
        "description": [
            "creates the invoice for the addon",
            "@return true"
        ],
        "fieldtexts": []
    },
    "update_invoices_extra": {
        "name": "update_invoices_extra",
        "params": "",
        "description": [
            "updates the invoices_extra field w\/ the new repeat invoices id",
            "@return true"
        ],
        "fieldtexts": []
    },
    "load_service": {
        "name": "load_service",
        "params": "",
        "description": [
            "loads the main service (package) if any for this service",
            "@return Product"
        ],
        "fieldtexts": []
    },
    "load_service_master": {
        "name": "load_service_master",
        "params": "",
        "description": [
            "@return bool"
        ],
        "fieldtexts": []
    },
    "load_service_repeat_invoice": {
        "name": "load_service_repeat_invoice",
        "params": "",
        "description": [
            "loads the repeat invoice for the service and calculate the prorated cost.  The prorated cost is used for the first",
            "month and reflects an initial cost that is based on the number of days until your next invoice multiplied by the",
            "cost per day which is calculated from dividing the monthly package cost by the number of days in the current month.",
            "@return true"
        ],
        "fieldtexts": []
    },
    "load_repeat_invoice": {
        "name": "load_repeat_invoice",
        "params": "",
        "description": [
            "loads the main repeat invoice if any for this service",
            "@return Product"
        ],
        "fieldtexts": []
    },
    "load_recent_invoice": {
        "name": "load_recent_invoice",
        "params": "",
        "description": [
            "loads a recent invoice for the addon",
            "@return true"
        ],
        "fieldtexts": []
    },
    "is_already_repeat_invoiced": {
        "name": "is_already_repeat_invoiced",
        "params": "",
        "description": [
            "checks if there is a repeat invoice in db",
            "@return bool returns true if there is no repeat invoice, false if there is"
        ],
        "fieldtexts": []
    },
    "valid_service": {
        "name": "valid_service",
        "params": "",
        "description": [
            "checks whether or not a service was able to be loaded",
            "@return bool false if three was an error, true if it was loaded ok"
        ],
        "fieldtexts": []
    },
    "set_payment_vars": {
        "name": "set_payment_vars",
        "params": "$payment_vars = false",
        "description": [
            "sets the payment variables to use\/look for",
            "@param bool|array $payment_vars array of payment variables"
        ],
        "fieldtexts": []
    },
    "has_payment_vars": {
        "name": "has_payment_vars",
        "params": "",
        "description": [
            "checks whether or not we have some payment variables set",
            "@return bool whether or not there are any set"
        ],
        "fieldtexts": []
    },
    "add_admin_confirmation_field": {
        "name": "add_admin_confirmation_field",
        "params": "$field, $label, $default, $type, $data = false",
        "description": [
            "@param $field",
            "@param $label",
            "@param $default",
            "@param $type",
            "@param bool $data"
        ],
        "fieldtexts": []
    },
    "set_title": {
        "name": "set_title",
        "params": "$title",
        "description": [
            "sets the table title",
            "@param string $title the table title",
            "@return void"
        ],
        "fieldtexts": []
    },
    "use_size": {
        "name": "use_size",
        "params": "$use = true, $field = 'size'",
        "description": [
            "@param bool $use",
            "@param string $field"
        ],
        "fieldtexts": []
    },
    "use_period": {
        "name": "use_period",
        "params": "$use = true, $field = 'period'",
        "description": [
            "@param bool $use",
            "@param string $field"
        ],
        "fieldtexts": []
    },
    "use_period_discount": {
        "name": "use_period_discount",
        "params": "$use = true",
        "description": [
            "@param bool $use"
        ],
        "fieldtexts": []
    },
    "set_period_minimum": {
        "name": "set_period_minimum",
        "params": "$period = 1",
        "description": [
            "@param int $period"
        ],
        "fieldtexts": []
    },
    "order": {
        "name": "order",
        "params": "",
        "description": [
            "{@inheritdoc}"
        ],
        "fieldtexts": []
    },
    "use_service_select": {
        "name": "use_service_select",
        "params": "$use = true, $field = 'service_type'",
        "description": [
            "@param bool $use",
            "@param string $field"
        ],
        "fieldtexts": []
    },
    "use_coupon": {
        "name": "use_coupon",
        "params": "$use = true, $field = 'coupon'",
        "description": [
            "@param bool $use",
            "@param string $field"
        ],
        "fieldtexts": []
    },
    "select_service": {
        "name": "select_service",
        "params": "$field = 'service_type', $default = false",
        "description": [
            "@param string $field",
            "@param bool $default",
            "@return string"
        ],
        "fieldtexts": []
    },
    "confirm_order": {
        "name": "confirm_order",
        "params": "",
        "description": [
            "@return bool"
        ],
        "fieldtexts": []
    },
    "cancel_addon": {
        "name": "cancel_addon",
        "params": "$repeatInvoiceId = false, $module = false",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "cancels an addon service, such as an additional IPs for a VPS or something of that nature.",
            "@param bool|integer $repeatInvoiceId false by default, or a repeat invoice id",
            "@param bool|string  $module          false by default to use http request data, otherwise the name of a module",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "cancel_addons": {
        "name": "cancel_addons",
        "params": "$service, $module = 'default'",
        "description": [
            "cancel_addons()",
            "Cancels addons for a given service.",
            "@param integer $service the service id to cancel addons for",
            "@param string  $module  the module the service is in",
            "@return bool whether or not anything was canceled",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "cancel_service": {
        "name": "cancel_service",
        "params": "$id = false, $module = 'default', $status = 'canceled'",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "cancels a service from the billing system and should possibly cancel the actual service as well",
            "@param bool|int $id ID \/ Service ID you wish to cancel",
            "@param string $module the module of the order",
            "@param string $status status to use for canceling.  values should be expired or canceled(default)",
            "@throws Exception",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "order_needs_payment": {
        "name": "order_needs_payment",
        "params": "$orders = false",
        "description": [
            "Displays a message saying order was placed but requires payment.  Includes view balance page",
            "@param array|bool|false|string $orders false = pass via get\/post, string like <module><id>[,<module><id>], or array like ('<module><id>'[,'<module><id>'])",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "order_payment_methods_table": {
        "name": "order_payment_methods_table",
        "params": "$table, $width, $data, $returnURL, $total_cost, $checkout_items, $choice, $validate_fields, $period = 1, $repeat_service_cost = false, $module = 'default', $service_type = 0, $other_enable = true",
        "description": [
            "Billing Services related functions.",
            "This file has the general functions used heavily both by billing related code.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "use \\Firebase\\JWT\\JWT;",
            "creates a payment methods table for use during an order process",
            "@param    $table",
            "@param        $width",
            "@param        $data",
            "@param        $returnURL",
            "@param        $total_cost",
            "@param        $checkout_items",
            "@param        $choice",
            "@param        $validate_fields",
            "@param int $period",
            "@param bool $repeat_service_cost",
            "@param string $module",
            "@param int $service_type",
            "@param bool $other_enable defaults to true, whether or not to enable non cc payment methods",
            "@return string"
        ],
        "fieldtexts": []
    },
    "order_queue_display": {
        "name": "order_queue_display",
        "params": "$return = false",
        "description": [
            "Displays the order summary details mostly for use in the login\/signup process",
            "@param bool $return",
            "@return array",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "uncancel_service": {
        "name": "uncancel_service",
        "params": "",
        "description": [
            "uncancel_service()",
            "uncancels a service",
            "it will attempt to uncancel a service and reapply invoices giving",
            "the client a chance to pay for and reactivate his service\/package",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "sendSlackNotification": {
        "name": "sendSlackNotification",
        "params": "$url, $data",
        "description": [
            "@param $url",
            "@param $data"
        ],
        "fieldtexts": []
    },
    "ChatPayment": {
        "name": "ChatPayment",
        "params": "$type, $link, $product, $cost, $client_link, $client_label",
        "description": [
            "Sends a message ot a Slack and\/or HipChat server notifying them of the",
            "payment and includes a random animated money gif",
            "@param string $type",
            "@param string $link",
            "@param string $product",
            "@param float $cost",
            "@param string $client_link",
            "@param string $client_label"
        ],
        "fieldtexts": []
    },
    "checkout_payment_processing": {
        "name": "checkout_payment_processing",
        "params": "&$continue, &$paid, &$total_cost, &$module, &$coupon_code, &$service_cost, &$slice_cost, &$service_type, &$repeat_slice_cost, &$original_slice_cost, &$original_cost, &$repeat_service_cost, &$monthly_service_cost, &$custid, &$os, &$slices, &$platform, &$controlpanel, &$period, &$location, &$version, &$hostname, &$coupon, &$rootpass, &$server, &$comment",
        "description": [
            "Process the order checking for payments and handling them if any.",
            "@param bool   $continue",
            "@param bool   $paid",
            "@param float  $total_cost",
            "@param string $module",
            "@param int    $coupon_code",
            "@param float  $service_cost",
            "@param float  $slice_cost",
            "@param int    $service_type",
            "@param float  $repeat_slice_cost",
            "@param float  $original_slice_cost",
            "@param float  $original_cost",
            "@param float  $repeat_service_cost",
            "@param float  $monthly_service_cost",
            "@param int    $custid",
            "@param string $os",
            "@param int    $slices",
            "@param string $platform",
            "@param string $controlpanel",
            "@param int    $period",
            "@param int    $location",
            "@param string $version",
            "@param string $hostname",
            "@param string $coupon",
            "@param string $rootpass",
            "@param int    $server",
            "@param string $comment",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "manage_payment_types": {
        "name": "manage_payment_types",
        "params": "$return = false",
        "description": [
            "Manage\/Configure Payment Types",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "sets the current payment type and manage credit cards",
            "@param bool $return optional, defaults to false, whether to return the output or display it",
            "@return string|void if return is true then it returns a string containing this page , otherwise output it",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "pay_balance": {
        "name": "pay_balance",
        "params": "",
        "description": [
            "Billing Balance Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "pay_balance()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "payment_ipn_handler": {
        "name": "payment_ipn_handler",
        "params": "$custom, $payment_remaining, $txn_id, $handler = 'paypal', $payer_email = false",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "handles payment notifications",
            "@param string       $custom            the custom type field we use to pass what the payment was for",
            "@param string|float $payment_remaining payment amount how much the payment was for",
            "@param string       $txn_id            transaction id",
            "@param string       $handler           what payment system sent the notification defaults to paypal",
            "@param bool|string  $payer_email       the email of the person sending the payment, or leave blank\/false for none",
            "@return array returns an array with first element being the custid, and second if the account was locked",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "locked_paypal_email": {
        "name": "locked_paypal_email",
        "params": "$data, $handler = 'PayPal'",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "sends an email when a locked account sends a payment notification",
            "@param array $data account array",
            "@param string $handler what sent the payment notification, defaults to paypal",
            "@return void"
        ],
        "fieldtexts": []
    },
    "repeat_invoice_is_paid": {
        "name": "repeat_invoice_is_paid",
        "params": "$repeatInvoiceId, $module = 'default'",
        "description": [
            "finds the latest invoice for a given repeat invoice, and checks to see if it was paid or not",
            "@param integer $repeatInvoiceId the repeat invoice id #",
            "@param string $module the module of the repeat invoice",
            "@return bool whether or not the invoice is paid"
        ],
        "fieldtexts": []
    },
    "select_payment_method": {
        "name": "select_payment_method",
        "params": "$default = 'credit_card', $in_form = 0",
        "description": [
            "creates a select box (and optionally a form for it) for choosing which payment method a customer wants to use for payments",
            "@param string $default default the default payment method to use (can be either credit_card or check)",
            "@param int $in_form whether or not your already in a form",
            "@return string returns the select box to choose the customer payment method"
        ],
        "fieldtexts": []
    },
    "get_payment_gateways": {
        "name": "get_payment_gateways",
        "params": "",
        "description": [
            "returns a list of payment gateways",
            "@return array array of payment gateways"
        ],
        "fieldtexts": []
    },
    "get_payment_method_text": {
        "name": "get_payment_method_text",
        "params": "$payment_method",
        "description": [
            "returns the text version of a payment method",
            "@todo this should possibly build from the invoice_types table instead.",
            "@param int $payment_method the payment method #",
            "@return string the text description of the payment method"
        ],
        "fieldtexts": []
    },
    "handle_payment": {
        "name": "handle_payment",
        "params": "$custid, $amount, $invoices, $payment_method, $module = 'default', $description_extra = ''",
        "description": [
            "takes care of whatever jobs need done after a payment is received.",
            "@param integer   $custid            the customer id",
            "@param float     $amount            the amount of the payment",
            "@param int|array $invoices          the invoice # or array of invoice #'s",
            "@param int       $payment_method    the payment method #",
            "@param string    $module            optional module the payment was applied under",
            "@param string    $description_extra optional description for the payment",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "mail_payment_approved_invoice": {
        "name": "mail_payment_approved_invoice",
        "params": "$invoice, $module",
        "description": [
            "sends a payment approved email for the given invoice",
            "@param int    $invoice the invoice #",
            "@param string $module  the module the invoice is for",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "mail_payment_approved": {
        "name": "mail_payment_approved",
        "params": "$custid, $module, $amount, $payment_method, $invoices",
        "description": [
            "sends an email when a payment has been approved",
            "@param int $custid the customer id the payment was for",
            "@param string $module the module the payment is applied to",
            "@param float $amount the amount of the payment",
            "@param int $payment_method the payment method id",
            "@param array|int $invoices either an invoice number or array of invoice numbers",
            "@throws Exception",
            "@throws SmartyException",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_payment_type": {
        "name": "get_payment_type",
        "params": "",
        "description": [
            "Gets the paypal payment_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "post_payment_processing_new": {
        "name": "post_payment_processing_new",
        "params": "$repeatInvoiceId = false",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "use MyAdmin\\Orm\\Repeat_Invoice;",
            "use MyAdmin\\Orm\\Invoice;",
            "New Post payment processing handling code generic and shoudl work nicely",
            "with all modules.   It Interfaces with the Addons classs and the Service clas",
            "@param bool|int $repeatInvoiceId the repeat_invoice id # to perform processing on",
            "@return string"
        ],
        "fieldtexts": []
    },
    "process_payment": {
        "name": "process_payment",
        "params": "$invoiceId = false",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "use MyAdmin\\Orm\\Repeat_Invoice;",
            "use MyAdmin\\Orm\\Invoice;",
            "processes payment on an invoice",
            "@param int|bool $invoiceId the id of the invoice to process or pass it via request if admin",
            "@return bool success of the processing"
        ],
        "fieldtexts": []
    },
    "view_payments": {
        "name": "view_payments",
        "params": "",
        "description": [
            "view_payments()",
            "displays the payments list",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "pay_balance_prepay": {
        "name": "pay_balance_prepay",
        "params": "",
        "description": [
            "Pre-Pay Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category PrePay",
            "pay_balance_prepay()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "add_prepay": {
        "name": "add_prepay",
        "params": "$module, $amount, $automatic_use = true, $custid = false, $remaining = 0.00, $type = PREPAY_TYPE_ANY, $service = PREPAY_SERVICE_ANY",
        "description": [
            "Pre-Pay Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category PrePay",
            "define('PREPAY_SERVICE_ANY', 0);",
            "define('PREPAY_TYPE_ANY', 0);",
            "Adds a PrePay into the system under the given module.",
            "PrePays are a credit on your account by prefilling  your account with funds.",
            "These are stored in a PrePay.    PrePay funds can be automatically used as",
            "needed or set to only be usable by direct action",
            "@param string $module the module the prepay is for. use [get_modules](#get_modules) to get a list of modules",
            "@param float $amount the dollar amount of prepay total",
            "@param bool $automatic_use whether or not the prepay will get used automatically by billing system.",
            "@param bool|int $custid the customer id, or false(default) to use the sessions custid",
            "@param float $remaining the amount of funds left, defaults to 0.00",
            "@param int $type optional package type to limit to, defaults to PREPAY_TYPE_ANY",
            "@param int $service optional service id to limit to, defaults to PREPAY_SERVICE_ANY",
            "@return int the prepay id"
        ],
        "fieldtexts": []
    },
    "get_prepay_paypal_fill_url": {
        "name": "get_prepay_paypal_fill_url",
        "params": "$module, $prepay_id, $amount",
        "description": [
            "Gets a paypal payment URL to fill a given prepay for the given amount",
            "@param string $module the module the prepay is for. use [get_modules](#get_modules) to get a list of modules",
            "@param int $prepay_id the ID of the PrePay",
            "@param float $amount the amount to pay on the prepay.",
            "@return string a paypal payment url."
        ],
        "fieldtexts": []
    },
    "get_prepay_list": {
        "name": "get_prepay_list",
        "params": "",
        "description": [
            "gets a list of your prepays",
            "@return array array of prepays."
        ],
        "fieldtexts": []
    },
    "get_prepay_remaining": {
        "name": "get_prepay_remaining",
        "params": "$custid = false, $module = 'default', $automatic_use = false",
        "description": [
            "get the amount they have total available through the prepay system .",
            "@param bool|false|int $custid the customers id",
            "@param string $module the module the prepay is for. use [get_modules](#get_modules) to get a list of modules",
            "@param bool $automatic_use whether or not the prepay will get used automatically by billing system.",
            "@return float the amount they have available."
        ],
        "fieldtexts": []
    },
    "get_prepay_remaining_all": {
        "name": "get_prepay_remaining_all",
        "params": "$ocustid = false, $omodule = 'default', $automatic_use = false",
        "description": [
            "get the amount they have total available through the prepay system .",
            "@param bool|false|int $ocustid the customers id",
            "@param string $omodule the module the prepay is for. use [get_modules](#get_modules) to get a list of modules",
            "@param bool $automatic_use whether or not the prepay will get used automatically by billing system.",
            "@return float the amount they have available."
        ],
        "fieldtexts": []
    },
    "get_prepay_related_amount": {
        "name": "get_prepay_related_amount",
        "params": "$invoices, $module = 'default', $custid = 0, $automatic_use = false, $service_type = false",
        "description": [
            "Gets the total PrePay available amount for the given invoices, module, and customer id",
            "@param string|array $invoices      string with 1 invoice id, or an array of invoice ids",
            "@param string       $module        the module the prepay is for. use [get_modules](#get_modules) to get a list of modules",
            "@param int          $custid        the customers id",
            "@param bool         $automatic_use whether or not the prepay will get used automatically by billing system.",
            "@param bool|int     $service_type",
            "@return float|int|string"
        ],
        "fieldtexts": []
    },
    "use_prepay_related_amount": {
        "name": "use_prepay_related_amount",
        "params": "$invoices, $module = 'default', $amount, $custid = 0, $automatic_use = false",
        "description": [
            "Use\/spend the given amount of prepay funds on teh given customer for the given invoices.",
            "@param string|array $invoices string with 1 invoice id, or an array of invoice ids",
            "@param string $module the module the prepay is for. use [get_modules](#get_modules) to get a list of modules",
            "@param float $amount the dollar amount of prepay to use",
            "@param int $custid the customers id",
            "@param bool $automatic_use whether or not the prepay will get used automatically by billing system.",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "prepay_menu": {
        "name": "prepay_menu",
        "params": "",
        "description": [
            "prepay_menu()",
            "the prepay menu, will render a table that lets you add \/ delete prepays, view them, etc.",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_reseller_price": {
        "name": "get_reseller_price",
        "params": "$module, $service, $price",
        "description": [
            "Reseller Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Reseller",
            "get_reseller_price()",
            "@param mixed $module",
            "@param mixed $service",
            "@param mixed $price",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "reseller_setup": {
        "name": "reseller_setup",
        "params": "",
        "description": [
            "reseller_setup()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "assignIp": {
        "name": "assignIp",
        "params": "",
        "description": [
            "assigns an IP to a service if it doesnt already have one for when its needed",
            "@return false|string the ip address it got, or blank\/false for error"
        ],
        "fieldtexts": []
    },
    "doVerify": {
        "name": "doVerify",
        "params": "",
        "description": [
            "runs the Verify\/activation code for the Order"
        ],
        "fieldtexts": []
    },
    "doTerminate": {
        "name": "doTerminate",
        "params": "",
        "description": [
            "runs the termination code for the Order"
        ],
        "fieldtexts": []
    },
    "doReactivate": {
        "name": "doReactivate",
        "params": "",
        "description": [
            "runs the reactivation code for the Order"
        ],
        "fieldtexts": []
    },
    "getSuccess": {
        "name": "getSuccess",
        "params": "",
        "description": [
            "returns the success status",
            "@return bool the success status"
        ],
        "fieldtexts": []
    },
    "setServiceInfo": {
        "name": "setServiceInfo",
        "params": "$info",
        "description": [
            "sets the serviceInfo data",
            "@param array $info the table record for the service",
            "@return $this"
        ],
        "fieldtexts": []
    },
    "setVerify": {
        "name": "setVerify",
        "params": "$callable",
        "description": [
            "Sets the Order text that shows up on the invoice.",
            "@param function $callable the Order text",
            "@return \\ServiceHandler"
        ],
        "fieldtexts": []
    },
    "setTerminate": {
        "name": "setTerminate",
        "params": "$callable",
        "description": [
            "Sets the Order text that shows up on the invoice.",
            "@param function $callable the Order text",
            "@return \\ServiceHandler"
        ],
        "fieldtexts": []
    },
    "setReactivate": {
        "name": "setReactivate",
        "params": "$callable",
        "description": [
            "Sets the Order text that shows up on the invoice.",
            "@param function $callable the Order text",
            "@return \\ServiceHandler"
        ],
        "fieldtexts": []
    },
    "setActivationStatuses": {
        "name": "setActivationStatuses",
        "params": "$statuses = false",
        "description": [
            "Sets the Status's which trigger activation",
            "@param array|bool|false $statuses false for default (pending and pendapproval) or an array of possible status",
            "@return \\ServiceHandler"
        ],
        "fieldtexts": []
    },
    "getActivationStatuses": {
        "name": "getActivationStatuses",
        "params": "",
        "description": [
            "Gets the array of activation statuses",
            "@return array array of activation statuses"
        ],
        "fieldtexts": []
    },
    "addAddon": {
        "name": "addAddon",
        "params": "$addon",
        "description": [
            "Adds an Addon into the ssytem",
            "@param \\AddonHandler $addon",
            "@return \\ServiceHandler"
        ],
        "fieldtexts": []
    },
    "getAddons": {
        "name": "getAddons",
        "params": "",
        "description": [
            "Gets the array of Addons",
            "@return array {array|Addon} array of addons",
            "array of addons"
        ],
        "fieldtexts": []
    },
    "getServiceInfo": {
        "name": "getServiceInfo",
        "params": "",
        "description": [
            "Gets the Order require_ip that shows up on the invoice.",
            "@return string the Order require_ip"
        ],
        "fieldtexts": []
    },
    "service_definitions": {
        "name": "service_definitions",
        "params": "$module",
        "description": [
            "Billing Services related functions.",
            "This file has the general functions used heavily both by billing related code.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "service_definitions()",
            "gets a table of all the services listed w\/ the given module",
            "@param string $module the module to get the services for",
            "@return string rendered html table of services",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_modules": {
        "name": "get_modules",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_services": {
        "name": "get_services",
        "params": "$module",
        "description": [
            "@param $module",
            "4@return array"
        ],
        "fieldtexts": []
    },
    "service_select": {
        "name": "service_select",
        "params": "$service_select_id = 1",
        "description": [
            "service_select()",
            "gets a select box for the clients services",
            "@param integer $service_select_id the incrementing ID field number to be tacked on the end of the ID values for multiple search boxs",
            "@return string the html for the select box"
        ],
        "fieldtexts": []
    },
    "get_service_view_link": {
        "name": "get_service_view_link",
        "params": "$module",
        "description": [
            "returns the service view link suffix string",
            "@param string $module the module you want the link suffix for",
            "@return string the view link suffix"
        ],
        "fieldtexts": []
    },
    "get_service": {
        "name": "get_service",
        "params": "",
        "description": [
            "Gets the whitelist service",
            "@return int"
        ],
        "fieldtexts": []
    },
    "get_service_history": {
        "name": "get_service_history",
        "params": "$serviceInfo, $module",
        "description": [
            "get_service_history()",
            "gets the history for a given service",
            "@param array $serviceInfo service array possibly returned from get_service()",
            "@param string $module module to load",
            "@return array array of history log results \/ service history"
        ],
        "fieldtexts": []
    },
    "get_service_history_table": {
        "name": "get_service_history_table",
        "params": "$rows, $bootstrap = false",
        "description": [
            "get_service_history_table()",
            "takes the given service history rows returned from get_service_history() and renders a table",
            "@param array $rows      the array of rows from get_service_history()",
            "@param bool  $bootstrap whether or not to use bootstrap theme",
            "@return bool|string false on error or returns a rendered html table",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_service_repeat_invoices": {
        "name": "get_service_repeat_invoices",
        "params": "$serviceInfo, $module",
        "description": [
            "get an array of repeat invoices associated with the given service array",
            "@param array $serviceInfo the array returned by get_service",
            "@param string $module module to load service from",
            "@return array array of repeat invoices associated with the service"
        ],
        "fieldtexts": []
    },
    "get_service_repeat_invoices_table": {
        "name": "get_service_repeat_invoices_table",
        "params": "$serviceInfo, $module",
        "description": [
            "gets the given service repeat invoices  and renders a table",
            "@param array $serviceInfo the array returned by get_service",
            "@param string $module module to load service from",
            "@return bool|string false on error or returns a rendered html table",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_service_invoices": {
        "name": "get_service_invoices",
        "params": "$serviceInfo, $module",
        "description": [
            "get an array of invoices associated with the given service array and repeat invoices array",
            "@param array $serviceInfo the array returned by get_service",
            "@param string $module module to load service from",
            "@return array|bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "is_service_hostname_in_use": {
        "name": "is_service_hostname_in_use",
        "params": "$hostname, $module",
        "description": [
            "finds out if a service hostname is in use or not",
            "@param string $hostname the hostname to check",
            "@param string $module the module this check is for",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "is_service_hostname_available": {
        "name": "is_service_hostname_available",
        "params": "$hostname, $module",
        "description": [
            "finds out if a service hostname is available or not",
            "@param string $hostname the hostname to check",
            "@param string $module the module this check is for",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_service_master": {
        "name": "get_service_master",
        "params": "$id, $module, $include_details = false",
        "description": [
            "get_service_master()",
            "get the service master row for the given service master iD",
            "@param integer $id ID of the service master",
            "@param string $module module the master is for",
            "@param bool $include_details",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "get_service_repeat_invoice": {
        "name": "get_service_repeat_invoice",
        "params": "$invoice_id, $module",
        "description": [
            "@param $invoice_id",
            "@param $module",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "get_service_addons": {
        "name": "get_service_addons",
        "params": "$id, $module, $rdata = false",
        "description": [
            "get_service_addons()",
            "gets the addons associated with the given service id",
            "@param integer $id service ID to get the addons for",
            "@param string $module module the service is under",
            "@param bool $rdata false to not populate, true to fill rdata field with each repeat invoices data",
            "@return array array of information about the addons"
        ],
        "fieldtexts": []
    },
    "get_server_ip_info": {
        "name": "get_server_ip_info",
        "params": "$ip",
        "description": [
            "get server ip info",
            "@param string $ip the ip address to get server info for",
            "@return array|bool false on error  or an array of serverinfo for that ip"
        ],
        "fieldtexts": []
    },
    "get_service_types": {
        "name": "get_service_types",
        "params": "$module, $hide_empty = false",
        "description": [
            "gets an array of service types for the given module",
            "@param string $module the module",
            "@param bool $hide_empty whether to hide the gaps in service ids",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_service_host_id_from_name": {
        "name": "get_service_host_id_from_name",
        "params": "$module, $name",
        "description": [
            "@param $module",
            "@param $name",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "add_menu_link": {
        "name": "add_menu_link",
        "params": "$section, $link",
        "description": [
            "@param $section",
            "@param $link"
        ],
        "fieldtexts": []
    },
    "render": {
        "name": "render",
        "params": "",
        "description": [],
        "fieldtexts": []
    },
    "view_service": {
        "name": "view_service",
        "params": "$id = false, $module = false",
        "description": [
            "Billing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Billing",
            "@param bool $id",
            "@param bool $module",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_service_info": {
        "name": "view_service_info",
        "params": "$module = false, $id = false",
        "description": [
            "view_service_info()",
            "@param bool|string  $module",
            "@param bool|integer $id",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "wipe_service": {
        "name": "wipe_service",
        "params": "$id = false, $module = 'default'",
        "description": [
            "wipe_service()",
            "completely removes a service from our system.",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "cache_unset": {
        "name": "cache_unset",
        "params": "$key",
        "description": [
            "Caching Related Functionality,",
            "Ultimate All-In-One Cache Handler",
            "written by detain@interserver.net with help from no one",
            "Handles the following Caching Methods:",
            "Memcache - http:\/\/memcached.org\/",
            "Xcache - http:\/\/xcache.lighttpd.net\/",
            "APC - http:\/\/pecl.php.net\/package\/APC",
            "Zend - http:\/\/framework.zend.com\/manual\/en\/zend.cache.backends.html",
            "Provides the following unified functions:",
            "cache_set($key, $value)",
            "cache_get($key)",
            "cache_isset($key)",
            "cache_unset($key)",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Cache",
            "define('CACHE_ENABLE', 0);",
            "define('DEFAULT_CACHE_TTL', 0);",
            "define('MEMCACHE_ENABLE', 0);",
            "define('MEMCACHE_HOST', '');",
            "define('MEMCACHE_PORT', '');",
            "if (function_exists('memcache_connect') && MEMCACHE_ENABLE == 1) {",
            "\t$GLOBALS['memcache'] = memcache_connect(MEMCACHE_HOST, MEMCACHE_PORT);",
            "}",
            "cache_unset()",
            "@param mixed $key",
            "@return void"
        ],
        "fieldtexts": []
    },
    "cache_set": {
        "name": "cache_set",
        "params": "$key, $value = null, $ttl = DEFAULT_CACHE_TTL",
        "description": [
            "cache_set()",
            "@param mixed $key",
            "@param mixed $value",
            "@param mixed $ttl",
            "@return void"
        ],
        "fieldtexts": []
    },
    "cache_isset": {
        "name": "cache_isset",
        "params": "$key",
        "description": [
            "cache_isset()",
            "@param mixed $key",
            "@return bool|mixed|\\string[]"
        ],
        "fieldtexts": []
    },
    "cache_get": {
        "name": "cache_get",
        "params": "$key",
        "description": [
            "cache_get()",
            "@param mixed $key",
            "@return mixed|null"
        ],
        "fieldtexts": []
    },
    "memcached_connect": {
        "name": "memcached_connect",
        "params": "",
        "description": [
            "ensures we are connected to the memcached server",
            "@return void"
        ],
        "fieldtexts": []
    },
    "memcached_get": {
        "name": "memcached_get",
        "params": "$key",
        "description": [
            "gets a key or array of keys from the memcached server",
            "called like  memcached_get('key');",
            "or  memcached_get(['key1', 'key2', 'key3']);",
            "@param string|array $key the name of the key to retrieve or an array of key names to retrieve",
            "@return mixed false on error or the result of the get command"
        ],
        "fieldtexts": []
    },
    "memcached_set": {
        "name": "memcached_set",
        "params": "$key, $value = 0",
        "description": [
            "sets a key or array of keys on the memcached server",
            "called like  memcached_set('key', 'value');",
            "or  memcached_set(['key1' => 'value1', 'key2' => 'value2']);",
            "@param string|array $key the name of the key to store the value under, or an array of key=>values",
            "@param mixed $value used only when passing a single key\/string",
            "@return bool indicates the success of the set command"
        ],
        "fieldtexts": []
    },
    "memcached_store_values": {
        "name": "memcached_store_values",
        "params": "$module, $id, $host = false",
        "description": [
            "dump all the values for the given service stored\/cached in the memcached in-memory db to the main sql database for perm storage",
            "@param string $module",
            "@param int $id",
            "@param bool $host",
            "@return void"
        ],
        "fieldtexts": []
    },
    "memcached_store_all": {
        "name": "memcached_store_all",
        "params": "",
        "description": [
            "dump all the key:value paires stored\/cached in the memcached in-memory db to the main sql database for perm storage",
            "@link http:\/\/php.net\/manual\/en\/memcached.getallkeys.php",
            "@return void"
        ],
        "fieldtexts": []
    },
    "client_home": {
        "name": "client_home",
        "params": "",
        "description": [
            "Home Page",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Menu",
            "client_home()",
            "renders the client home page.",
            "sidemenu differences",
            "false",
            "vertical menu is built",
            "menu is wrapped in a movable window",
            "adds extra tickers and widgets to the output",
            "true",
            "menu is horizontal or vertical based on MENU_ORIENTATION",
            "menu is stationary",
            "@internal param bool $sidemenu whether or not this is the side menu",
            "@return void",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "show_date": {
        "name": "show_date",
        "params": "$epoch",
        "description": [
            "common::show_date()",
            "@param mixed $epoch",
            "@return bool|string"
        ],
        "fieldtexts": []
    },
    "timezone_offset": {
        "name": "timezone_offset",
        "params": "$epoch",
        "description": [
            "common::timezone_offset()",
            "@param mixed $epoch",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "dateformatorder": {
        "name": "dateformatorder",
        "params": "$year_str, $month_str, $day_str, $add_separator = false",
        "description": [
            "common::dateformatorder()",
            "@param mixed $year_str",
            "@param mixed $month_str",
            "@param mixed $day_str",
            "@param bool  $add_separator",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_known_tlds": {
        "name": "get_known_tlds",
        "params": "$include_slds = true",
        "description": [
            "returns an array of known tlds",
            "@param bool $include_slds",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_known_slds": {
        "name": "get_known_slds",
        "params": "",
        "description": [
            "returns an array of known second level domains",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_known_2nd_level_domains": {
        "name": "get_known_2nd_level_domains",
        "params": "",
        "description": [
            "returns an array of known 2nd level domains",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_known_top_level_domains": {
        "name": "get_known_top_level_domains",
        "params": "",
        "description": [
            "returns an array of top level domains",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_effective_tld_rules": {
        "name": "get_effective_tld_rules",
        "params": "",
        "description": [
            "returns an array of effective tld rules",
            "@return array"
        ],
        "fieldtexts": []
    },
    "config_register": {
        "name": "config_register",
        "params": "$category, $subcategory, $label, $input, $text = '', $validations = false, $master = false",
        "description": [
            "@param $category",
            "@param $subcategory",
            "@param $label",
            "@param $input",
            "@param string $text",
            "@param bool $validations"
        ],
        "fieldtexts": []
    },
    "get_setting": {
        "name": "get_setting",
        "params": "$setting",
        "description": [
            "returns the value of a setting",
            "@param string $setting",
            "@return mixed the value of the setting"
        ],
        "fieldtexts": []
    },
    "set_settings": {
        "name": "set_settings",
        "params": "$settings",
        "description": [
            "Sets the reports settings",
            "@param mixed $settings the new settings",
            "@return \\MyAdmin\\Orm\\Report"
        ],
        "fieldtexts": []
    },
    "get_settings": {
        "name": "get_settings",
        "params": "",
        "description": [
            "gets all the current settings",
            "@return array array of the current settings"
        ],
        "fieldtexts": []
    },
    "get_config_options": {
        "name": "get_config_options",
        "params": "",
        "description": [
            "gets all the current configuration options",
            "@return array array of the current configuration options"
        ],
        "fieldtexts": []
    },
    "strip_ansi_colors": {
        "name": "strip_ansi_colors",
        "params": "$text",
        "description": [
            "Console Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Console",
            "global $console;",
            "\/\/Terminal Colour Codes (BASH CODES)",
            "$console['PLAIN'] = \"\\033[0m\";",
            "$console['BLACK'] = \"\\033[0;30m\";",
            "$console['DARKGRAY'] = \"\\033[1;30m\";",
            "$console['BLUE'] = \"\\033[0;34m\";",
            "$console['LIGHTBLUE'] = \"\\033[1;34m\";",
            "$console['GREEN'] = \"\\033[0;32m\";",
            "$console['LIGHTGREEN'] = \"\\033[1;32m\";",
            "$console['CYAN'] = \"\\033[0;36m\";",
            "$console['LIGHTCYAN'] = \"\\033[1;36m\";",
            "$console['RED'] = \"\\033[0;31m\";",
            "$console['LIGHTRED'] = \"\\033[1;31m\";",
            "$console['PURPLE'] = \"\\033[0;35m\";",
            "$console['LIGHTPURPLE'] = \"\\033[1;35m\";",
            "$console['BROWN'] = \"\\033[0;33m\";",
            "$console['YELLOW'] = \"\\033[1;33m\";",
            "$console['LIGHTGRAY'] = \"\\033[0;37m\";",
            "$console['WHITE'] = \"\\033[1;37m\";",
            "@param $text",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "mysql_date_add": {
        "name": "mysql_date_add",
        "params": "$now, $adjustment",
        "description": [
            "Internal Unexposed Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Conversions",
            "use ForceUTF8\\Encoding;",
            "mysql_date_add()",
            "wrapper function to give MySQL  DATE_ADD(when, adjustment)",
            "compatibility wrapper for those who want to switch the date calculations",
            "mysql so it can properly query cache.",
            "Supports normal  date_add(now(), INTERVAL 5 MONTH)   syntax, will",
            "convert it to  +5 month    for strtotime() to use and handle",
            "any mysql date <-> php timestamp translations",
            "@param mixed $now if null or 'now()' wil luse the current time",
            "@param string $adjustment the date adjustment ot make, like '5 DAY', '2 MONTH', 'INTERVAL 3 YEAR'.  interval will be removed automaticlaly so it works with it",
            "@return string the mysql formatted date properly adjusted"
        ],
        "fieldtexts": []
    },
    "mysql_date_sub": {
        "name": "mysql_date_sub",
        "params": "$now, $adjustment",
        "description": [
            "mysql_date_sub()",
            "wrapper function to give MySQL  DATE_SUB(when, adjustment)",
            "compatibility wrapper for those who want to switch the date calculations",
            "mysql so it can properly query cache.",
            "Supports normal  date_sub(now(), INTERVAL 5 MONTH)   syntax, will",
            "convert it to  -5 month    for strtotime() to use and handle",
            "any mysql date <-> php timestamp translations",
            "@param mixed $now if null or 'now()' wil luse the current time",
            "@param string $adjustment the date adjustment ot make, like '5 DAY', '2 MONTH', 'INTERVAL 3 YEAR'.  interval will be removed automaticlaly so it works with it",
            "@return string the mysql formatted date properly adjusted"
        ],
        "fieldtexts": []
    },
    "foreign_text_to_latin": {
        "name": "foreign_text_to_latin",
        "params": "$string",
        "description": [
            "@param $string",
            "@return string"
        ],
        "fieldtexts": []
    },
    "convert_country_iso2": {
        "name": "convert_country_iso2",
        "params": "$country",
        "description": [
            "@param $country",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "obj2array": {
        "name": "obj2array",
        "params": "$obj",
        "description": [
            "obj2array()",
            "@param mixed $obj",
            "@return array"
        ],
        "fieldtexts": []
    },
    "generateRandomString": {
        "name": "generateRandomString",
        "params": "$length = 10, $min_lower = 1, $min_upper = 1, $min_num = 1, $min_special = 0",
        "description": [
            "generates a random string with 10 characters",
            "@param int|string $length defaults to 10, length of string",
            "@param int $min_lower min number of lowercase letters in the password, defaults to 1",
            "@param int $min_upper min number of uppercase letters in the password, defaults to 1",
            "@param int $min_num min number of numbers in the password, defaults to 1",
            "@param int $min_special min number of special characters in the password, defaults to 0",
            "@return string random string"
        ],
        "fieldtexts": []
    },
    "generate_password": {
        "name": "generate_password",
        "params": "$length = 8, $available_sets = 'luds'",
        "description": [
            "generates a password with the given length allowing you to choose what type of characters are in it",
            "@param int $length",
            "@param string $available_sets defaults to 'luds'  including all types for lower upper decimal and special",
            "@return string"
        ],
        "fieldtexts": []
    },
    "strPixels": {
        "name": "strPixels",
        "params": "$string",
        "description": [
            "strPixels()",
            "This function uses the array below to calculate the pixel width of a string",
            "of characters. The widths of each character are based on a 12px Helvetica font.",
            "Kerning is not taken into account so RESULTS ARE APPROXIMATE.",
            "The purpose is to return a relative size to help in formatting. For example,",
            "strPixels('I like cake') == 54",
            "strPixels('I LIKE CAKE') == 67",
            "@param string $string characters to measure size",
            "@return integer size in pixels."
        ],
        "fieldtexts": []
    },
    "unparse_url": {
        "name": "unparse_url",
        "params": "$parsed_url",
        "description": [
            "returns a reformed URL combiing all the URL parts returned by parse_url()",
            "the possible fields that can be used are:",
            "scheme   host   port   user   pass   path   query   fragment",
            "@param array $parsed_url an array of optional fields that make up part of the url.",
            "@return string the combined url"
        ],
        "fieldtexts": []
    },
    "charset_decode_utf_8": {
        "name": "charset_decode_utf_8",
        "params": "$string",
        "description": [
            "@param $string",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "utf8toiso8859": {
        "name": "utf8toiso8859",
        "params": "$string",
        "description": [
            "utf8toiso8859()",
            "@param mixed $string",
            "@return string"
        ],
        "fieldtexts": []
    },
    "Scale": {
        "name": "Scale",
        "params": "$intNumber, $strFormat, $intDem, $intReturn = false",
        "description": [
            "Scales a number in bytes or bites down to readable format",
            "@param float  $intNumber Number in bytes or bits to scale",
            "@param string $strFormat 'bytes' or 'bits'",
            "@param integer $intDem number of decimal places",
            "@param bool|integer $intReturn 0=Return All, 1=Return Number, 2=Return Text",
            "@return string|float"
        ],
        "fieldtexts": []
    },
    "size_adjust": {
        "name": "size_adjust",
        "params": "$amount, $type = 'K'",
        "description": [
            "size_adjust()",
            "@param mixed  $amount",
            "@param string $type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "_randomstring": {
        "name": "_randomstring",
        "params": "$size",
        "description": [
            "_randomstring()",
            "@param int   $size",
            "@return string"
        ],
        "fieldtexts": []
    },
    "randhex": {
        "name": "randhex",
        "params": "$chars",
        "description": [
            "@param $chars",
            "@return string"
        ],
        "fieldtexts": []
    },
    "parseHyperLinks": {
        "name": "parseHyperLinks",
        "params": "$string",
        "description": [
            "parseHyperLinks()",
            "@param string  $string",
            "@return string"
        ],
        "fieldtexts": []
    },
    "mysql_now": {
        "name": "mysql_now",
        "params": "",
        "description": [
            "Internal Unexposed Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Internal",
            "returns the current date formatted the same as a MYSQL now() call",
            "@return string date"
        ],
        "fieldtexts": []
    },
    "is_md5": {
        "name": "is_md5",
        "params": "$var",
        "description": [
            "checks whether or not a stirng is an md5 string",
            "@param string $var",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "bcadd": {
        "name": "bcadd",
        "params": "$a, $b, $float = 2",
        "description": [
            "bcadd()",
            "@param mixed   $a",
            "@param mixed   $b",
            "@param integer $float",
            "@return float"
        ],
        "fieldtexts": []
    },
    "bcsub": {
        "name": "bcsub",
        "params": "$a, $b, $float = 2",
        "description": [
            "bcsub()",
            "@param mixed $a",
            "@param mixed $b",
            "@param integer $float",
            "@return float"
        ],
        "fieldtexts": []
    },
    "fixutf8_array": {
        "name": "fixutf8_array",
        "params": "$array",
        "description": [
            "recursivly fix bad utf8 strings in an array\/object",
            "@param array|object $array array with utf8 values",
            "@return array|object the array with fixed utf8 strings"
        ],
        "fieldtexts": []
    },
    "myadmin_stringify": {
        "name": "myadmin_stringify",
        "params": "$object, $default = 'json'",
        "description": [
            "converts an object to a string",
            "@param mixed  $object",
            "@param string $default 'serial' (default) or 'json'",
            "@return string"
        ],
        "fieldtexts": []
    },
    "myadmin_unstringify": {
        "name": "myadmin_unstringify",
        "params": "$string",
        "description": [
            "converts a string to an object.  the string in question can initially be in a serialized or json format.",
            "it also supports automatic handling for strings that have any combination of the optional additional",
            "things done to them:  gzcompress, base64_encode, addslashes, sql escaping, garbled\/corrupted UTF\/BOM data",
            "@param string $string the string to conver back to object",
            "@return array|object the decoded string"
        ],
        "fieldtexts": []
    },
    "valid_utf8": {
        "name": "valid_utf8",
        "params": "$string",
        "description": [
            "checks if a string is valid utf8",
            "@param string $string",
            "@return bool whether or not its valid utf8 string"
        ],
        "fieldtexts": []
    },
    "utf8_for_xml": {
        "name": "utf8_for_xml",
        "params": "$string",
        "description": [
            "strip unsupported utf characters from xml *not all utf8 is supported in utf xml",
            "@param string $string utf8 encoded string",
            "@return string xml safe utf8 string"
        ],
        "fieldtexts": []
    },
    "mb_str_replace": {
        "name": "mb_str_replace",
        "params": "$needle, $replacement, $haystack",
        "description": [
            "performs a multibyte safe str_replace equivalent string replacement",
            "@param string $needle",
            "@param string $replacement",
            "@param string $haystack",
            "@return string"
        ],
        "fieldtexts": []
    },
    "is_utf8": {
        "name": "is_utf8",
        "params": "$string",
        "description": [
            "Internal Unexposed Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Conversions",
            "Checks to see if a string is utf8 encoded checking for up to 5-Byte",
            "sequences. UTF8 has Bytes Sequences with a maximum length of 4.",
            "@param string $string The string to be checked",
            "@return bool True if $string fits a UTF-8 model, false otherwise."
        ],
        "fieldtexts": []
    },
    "romanize": {
        "name": "romanize",
        "params": "$string",
        "description": [
            "Romanization (also spelled romanisation: see spelling differences), in linguistics,",
            "is the conversion of writing from a different writing system to the Roman (Latin)",
            "script, or a system for doing so. Methods of romanization include transliteration,",
            "for representing written text.",
            "@param string $string A String likely encoded in UTF-8 or with foreign characters",
            "@return string the same String conveted to Latin letters [A-Z]"
        ],
        "fieldtexts": []
    },
    "transliterate": {
        "name": "transliterate",
        "params": "$string",
        "description": [
            "Transliteration is a type of conversion of a text from one script to another that involves",
            "swapping letters (thus trans- + liter-) in predictable ways (such as \u03b1 \u2192 a, \u0434 \u2192 d, \u03c7 \u2192 ch,",
            "or \u00e6 \u2192 e) using the closest corresponding letters of a different alphabet or language.",
            "@param string $string A String likely encoded in UTF-8 or with foreign characters",
            "@return string the same String conveted to Latin letters [A-Z]"
        ],
        "fieldtexts": []
    },
    "transliterate_using_mapping": {
        "name": "transliterate_using_mapping",
        "params": "$string",
        "description": [
            "Converts a string into the closest corresponding Latin letters using (a-z and A-Z, no foreign",
            "stuff) a Key=>Value lookup array.   Simple and fast with code control over the mappings.",
            "@param string $string A String likely encoded in UTF-8 or with foreign characters",
            "@return string the same String conveted to Latin letters [A-Z]"
        ],
        "fieldtexts": []
    },
    "transliterate_using_html_encoding": {
        "name": "transliterate_using_html_encoding",
        "params": "$string",
        "description": [
            "Converts a string into the closest corresponding Latin letters using (a-z and A-Z, no foreign",
            "stuff) the HTML entities translation table built-in into PHP to romanize chars.",
            "It works by applying htmlentities() and then removing common entities suffixes, a simple example:",
            "- \u00e3 = &atilde; -> a",
            "- \u00c3 = &Atilde; -> A",
            "- \u00f5 = &otilde; -> o",
            "- \u00d5 = &Otilde; -> O",
            "- \u00e6 = &aelig;  -> ae",
            "- \u00c6 = &AElig;  -> AE",
            "Beware that for this to work properly your files need to be encoded in UTF-8 (no BOM obviously).",
            "@param string $string A String likely encoded in UTF-8 or with foreign characters",
            "@return string the same String conveted to Latin letters [A-Z]"
        ],
        "fieldtexts": []
    },
    "transliterate_complex": {
        "name": "transliterate_complex",
        "params": "$string",
        "description": [
            "Converts all accent characters to ASCII characters.",
            "If there are no accent characters, then the string given is just returned.",
            "**Accent characters converted:**",
            "Currency signs:",
            "|   Code   | Glyph | Replacement |     Description     |",
            "| -------- | ----- | ----------- | ------------------- |",
            "| U+00A3   | \u00a3     | (empty)     | British Pound sign  |",
            "| U+20AC   | \u20ac     | E           | Euro sign           |",
            "Decompositions for Latin-1 Supplement:",
            "|  Code   | Glyph | Replacement |               Description              |",
            "| ------- | ----- | ----------- | -------------------------------------- |",
            "| U+00AA  | \u00aa     | a           | Feminine ordinal indicator             |",
            "| U+00BA  | \u00ba     | o           | Masculine ordinal indicator            |",
            "| U+00C0  | \u00c0     | A           | Latin capital letter A with grave      |",
            "| U+00C1  | \u00c1     | A           | Latin capital letter A with acute      |",
            "| U+00C2  | \u00c2     | A           | Latin capital letter A with circumflex |",
            "| U+00C3  | \u00c3     | A           | Latin capital letter A with tilde      |",
            "| U+00C4  | \u00c4     | A           | Latin capital letter A with diaeresis  |",
            "| U+00C5  | \u00c5     | A           | Latin capital letter A with ring above |",
            "| U+00C6  | \u00c6     | AE          | Latin capital letter AE                |",
            "| U+00C7  | \u00c7     | C           | Latin capital letter C with cedilla    |",
            "| U+00C8  | \u00c8     | E           | Latin capital letter E with grave      |",
            "| U+00C9  | \u00c9     | E           | Latin capital letter E with acute      |",
            "| U+00CA  | \u00ca     | E           | Latin capital letter E with circumflex |",
            "| U+00CB  | \u00cb     | E           | Latin capital letter E with diaeresis  |",
            "| U+00CC  | \u00cc     | I           | Latin capital letter I with grave      |",
            "| U+00CD  | \u00cd     | I           | Latin capital letter I with acute      |",
            "| U+00CE  | \u00ce     | I           | Latin capital letter I with circumflex |",
            "| U+00CF  | \u00cf     | I           | Latin capital letter I with diaeresis  |",
            "| U+00D0  | \u00d0     | D           | Latin capital letter Eth               |",
            "| U+00D1  | \u00d1     | N           | Latin capital letter N with tilde      |",
            "| U+00D2  | \u00d2     | O           | Latin capital letter O with grave      |",
            "| U+00D3  | \u00d3     | O           | Latin capital letter O with acute      |",
            "| U+00D4  | \u00d4     | O           | Latin capital letter O with circumflex |",
            "| U+00D5  | \u00d5     | O           | Latin capital letter O with tilde      |",
            "| U+00D6  | \u00d6     | O           | Latin capital letter O with diaeresis  |",
            "| U+00D8  | \u00d8     | O           | Latin capital letter O with stroke     |",
            "| U+00D9  | \u00d9     | U           | Latin capital letter U with grave      |",
            "| U+00DA  | \u00da     | U           | Latin capital letter U with acute      |",
            "| U+00DB  | \u00db     | U           | Latin capital letter U with circumflex |",
            "| U+00DC  | \u00dc     | U           | Latin capital letter U with diaeresis  |",
            "| U+00DD  | \u00dd     | Y           | Latin capital letter Y with acute      |",
            "| U+00DE  | \u00de     | TH          | Latin capital letter Thorn             |",
            "| U+00DF  | \u00df     | s           | Latin small letter sharp s             |",
            "| U+00E0  | \u00e0     | a           | Latin small letter a with grave        |",
            "| U+00E1  | \u00e1     | a           | Latin small letter a with acute        |",
            "| U+00E2  | \u00e2     | a           | Latin small letter a with circumflex   |",
            "| U+00E3  | \u00e3     | a           | Latin small letter a with tilde        |",
            "| U+00E4  | \u00e4     | a           | Latin small letter a with diaeresis    |",
            "| U+00E5  | \u00e5     | a           | Latin small letter a with ring above   |",
            "| U+00E6  | \u00e6     | ae          | Latin small letter ae                  |",
            "| U+00E7  | \u00e7     | c           | Latin small letter c with cedilla      |",
            "| U+00E8  | \u00e8     | e           | Latin small letter e with grave        |",
            "| U+00E9  | \u00e9     | e           | Latin small letter e with acute        |",
            "| U+00EA  | \u00ea     | e           | Latin small letter e with circumflex   |",
            "| U+00EB  | \u00eb     | e           | Latin small letter e with diaeresis    |",
            "| U+00EC  | \u00ec     | i           | Latin small letter i with grave        |",
            "| U+00ED  | \u00ed     | i           | Latin small letter i with acute        |",
            "| U+00EE  | \u00ee     | i           | Latin small letter i with circumflex   |",
            "| U+00EF  | \u00ef     | i           | Latin small letter i with diaeresis    |",
            "| U+00F0  | \u00f0     | d           | Latin small letter Eth                 |",
            "| U+00F1  | \u00f1     | n           | Latin small letter n with tilde        |",
            "| U+00F2  | \u00f2     | o           | Latin small letter o with grave        |",
            "| U+00F3  | \u00f3     | o           | Latin small letter o with acute        |",
            "| U+00F4  | \u00f4     | o           | Latin small letter o with circumflex   |",
            "| U+00F5  | \u00f5     | o           | Latin small letter o with tilde        |",
            "| U+00F6  | \u00f6     | o           | Latin small letter o with diaeresis    |",
            "| U+00F8  | \u00f8     | o           | Latin small letter o with stroke       |",
            "| U+00F9  | \u00f9     | u           | Latin small letter u with grave        |",
            "| U+00FA  | \u00fa     | u           | Latin small letter u with acute        |",
            "| U+00FB  | \u00fb     | u           | Latin small letter u with circumflex   |",
            "| U+00FC  | \u00fc     | u           | Latin small letter u with diaeresis    |",
            "| U+00FD  | \u00fd     | y           | Latin small letter y with acute        |",
            "| U+00FE  | \u00fe     | th          | Latin small letter Thorn               |",
            "| U+00FF  | \u00ff     | y           | Latin small letter y with diaeresis    |",
            "Decompositions for Latin Extended-A:",
            "|  Code   | Glyph | Replacement |                    Description                    |",
            "| ------- | ----- | ----------- | ------------------------------------------------- |",
            "| U+0100  | \u0100     | A           | Latin capital letter A with macron                |",
            "| U+0101  | \u0101     | a           | Latin small letter a with macron                  |",
            "| U+0102  | \u0102     | A           | Latin capital letter A with breve                 |",
            "| U+0103  | \u0103     | a           | Latin small letter a with breve                   |",
            "| U+0104  | \u0104     | A           | Latin capital letter A with ogonek                |",
            "| U+0105  | \u0105     | a           | Latin small letter a with ogonek                  |",
            "| U+01006 | \u0106     | C           | Latin capital letter C with acute                 |",
            "| U+0107  | \u0107     | c           | Latin small letter c with acute                   |",
            "| U+0108  | \u0108     | C           | Latin capital letter C with circumflex            |",
            "| U+0109  | \u0109     | c           | Latin small letter c with circumflex              |",
            "| U+010A  | \u010a     | C           | Latin capital letter C with dot above             |",
            "| U+010B  | \u010b     | c           | Latin small letter c with dot above               |",
            "| U+010C  | \u010c     | C           | Latin capital letter C with caron                 |",
            "| U+010D  | \u010d     | c           | Latin small letter c with caron                   |",
            "| U+010E  | \u010e     | D           | Latin capital letter D with caron                 |",
            "| U+010F  | \u010f     | d           | Latin small letter d with caron                   |",
            "| U+0110  | \u0110     | D           | Latin capital letter D with stroke                |",
            "| U+0111  | \u0111     | d           | Latin small letter d with stroke                  |",
            "| U+0112  | \u0112     | E           | Latin capital letter E with macron                |",
            "| U+0113  | \u0113     | e           | Latin small letter e with macron                  |",
            "| U+0114  | \u0114     | E           | Latin capital letter E with breve                 |",
            "| U+0115  | \u0115     | e           | Latin small letter e with breve                   |",
            "| U+0116  | \u0116     | E           | Latin capital letter E with dot above             |",
            "| U+0117  | \u0117     | e           | Latin small letter e with dot above               |",
            "| U+0118  | \u0118     | E           | Latin capital letter E with ogonek                |",
            "| U+0119  | \u0119     | e           | Latin small letter e with ogonek                  |",
            "| U+011A  | \u011a     | E           | Latin capital letter E with caron                 |",
            "| U+011B  | \u011b     | e           | Latin small letter e with caron                   |",
            "| U+011C  | \u011c     | G           | Latin capital letter G with circumflex            |",
            "| U+011D  | \u011d     | g           | Latin small letter g with circumflex              |",
            "| U+011E  | \u011e     | G           | Latin capital letter G with breve                 |",
            "| U+011F  | \u011f     | g           | Latin small letter g with breve                   |",
            "| U+0120  | \u0120     | G           | Latin capital letter G with dot above             |",
            "| U+0121  | \u0121     | g           | Latin small letter g with dot above               |",
            "| U+0122  | \u0122     | G           | Latin capital letter G with cedilla               |",
            "| U+0123  | \u0123     | g           | Latin small letter g with cedilla                 |",
            "| U+0124  | \u0124     | H           | Latin capital letter H with circumflex            |",
            "| U+0125  | \u0125     | h           | Latin small letter h with circumflex              |",
            "| U+0126  | \u0126     | H           | Latin capital letter H with stroke                |",
            "| U+0127  | \u0127     | h           | Latin small letter h with stroke                  |",
            "| U+0128  | \u0128     | I           | Latin capital letter I with tilde                 |",
            "| U+0129  | \u0129     | i           | Latin small letter i with tilde                   |",
            "| U+012A  | \u012a     | I           | Latin capital letter I with macron                |",
            "| U+012B  | \u012b     | i           | Latin small letter i with macron                  |",
            "| U+012C  | \u012c     | I           | Latin capital letter I with breve                 |",
            "| U+012D  | \u012d     | i           | Latin small letter i with breve                   |",
            "| U+012E  | \u012e     | I           | Latin capital letter I with ogonek                |",
            "| U+012F  | \u012f     | i           | Latin small letter i with ogonek                  |",
            "| U+0130  | \u0130     | I           | Latin capital letter I with dot above             |",
            "| U+0131  | \u0131     | i           | Latin small letter dotless i                      |",
            "| U+0132  | \u0132     | IJ          | Latin capital ligature IJ                         |",
            "| U+0133  | \u0133     | ij          | Latin small ligature ij                           |",
            "| U+0134  | \u0134     | J           | Latin capital letter J with circumflex            |",
            "| U+0135  | \u0135     | j           | Latin small letter j with circumflex              |",
            "| U+0136  | \u0136     | K           | Latin capital letter K with cedilla               |",
            "| U+0137  | \u0137     | k           | Latin small letter k with cedilla                 |",
            "| U+0138  | \u0138     | k           | Latin small letter Kra                            |",
            "| U+0139  | \u0139     | L           | Latin capital letter L with acute                 |",
            "| U+013A  | \u013a     | l           | Latin small letter l with acute                   |",
            "| U+013B  | \u013b     | L           | Latin capital letter L with cedilla               |",
            "| U+013C  | \u013c     | l           | Latin small letter l with cedilla                 |",
            "| U+013D  | \u013d     | L           | Latin capital letter L with caron                 |",
            "| U+013E  | \u013e     | l           | Latin small letter l with caron                   |",
            "| U+013F  | \u013f     | L           | Latin capital letter L with middle dot            |",
            "| U+0140  | \u0140     | l           | Latin small letter l with middle dot              |",
            "| U+0141  | \u0141     | L           | Latin capital letter L with stroke                |",
            "| U+0142  | \u0142     | l           | Latin small letter l with stroke                  |",
            "| U+0143  | \u0143     | N           | Latin capital letter N with acute                 |",
            "| U+0144  | \u0144     | n           | Latin small letter N with acute                   |",
            "| U+0145  | \u0145     | N           | Latin capital letter N with cedilla               |",
            "| U+0146  | \u0146     | n           | Latin small letter n with cedilla                 |",
            "| U+0147  | \u0147     | N           | Latin capital letter N with caron                 |",
            "| U+0148  | \u0148     | n           | Latin small letter n with caron                   |",
            "| U+0149  | \u0149     | n           | Latin small letter n preceded by apostrophe       |",
            "| U+014A  | \u014a     | N           | Latin capital letter Eng                          |",
            "| U+014B  | \u014b     | n           | Latin small letter Eng                            |",
            "| U+014C  | \u014c     | O           | Latin capital letter O with macron                |",
            "| U+014D  | \u014d     | o           | Latin small letter o with macron                  |",
            "| U+014E  | \u014e     | O           | Latin capital letter O with breve                 |",
            "| U+014F  | \u014f     | o           | Latin small letter o with breve                   |",
            "| U+0150  | \u0150     | O           | Latin capital letter O with double acute          |",
            "| U+0151  | \u0151     | o           | Latin small letter o with double acute            |",
            "| U+0152  | \u0152     | OE          | Latin capital ligature OE                         |",
            "| U+0153  | \u0153     | oe          | Latin small ligature oe                           |",
            "| U+0154  | \u0154     | R           | Latin capital letter R with acute                 |",
            "| U+0155  | \u0155     | r           | Latin small letter r with acute                   |",
            "| U+0156  | \u0156     | R           | Latin capital letter R with cedilla               |",
            "| U+0157  | \u0157     | r           | Latin small letter r with cedilla                 |",
            "| U+0158  | \u0158     | R           | Latin capital letter R with caron                 |",
            "| U+0159  | \u0159     | r           | Latin small letter r with caron                   |",
            "| U+015A  | \u015a     | S           | Latin capital letter S with acute                 |",
            "| U+015B  | \u015b     | s           | Latin small letter s with acute                   |",
            "| U+015C  | \u015c     | S           | Latin capital letter S with circumflex            |",
            "| U+015D  | \u015d     | s           | Latin small letter s with circumflex              |",
            "| U+015E  | \u015e     | S           | Latin capital letter S with cedilla               |",
            "| U+015F  | \u015f     | s           | Latin small letter s with cedilla                 |",
            "| U+0160  | \u0160     | S           | Latin capital letter S with caron                 |",
            "| U+0161  | \u0161     | s           | Latin small letter s with caron                   |",
            "| U+0162  | \u0162     | T           | Latin capital letter T with cedilla               |",
            "| U+0163  | \u0163     | t           | Latin small letter t with cedilla                 |",
            "| U+0164  | \u0164     | T           | Latin capital letter T with caron                 |",
            "| U+0165  | \u0165     | t           | Latin small letter t with caron                   |",
            "| U+0166  | \u0166     | T           | Latin capital letter T with stroke                |",
            "| U+0167  | \u0167     | t           | Latin small letter t with stroke                  |",
            "| U+0168  | \u0168     | U           | Latin capital letter U with tilde                 |",
            "| U+0169  | \u0169     | u           | Latin small letter u with tilde                   |",
            "| U+016A  | \u016a     | U           | Latin capital letter U with macron                |",
            "| U+016B  | \u016b     | u           | Latin small letter u with macron                  |",
            "| U+016C  | \u016c     | U           | Latin capital letter U with breve                 |",
            "| U+016D  | \u016d     | u           | Latin small letter u with breve                   |",
            "| U+016E  | \u016e     | U           | Latin capital letter U with ring above            |",
            "| U+016F  | \u016f     | u           | Latin small letter u with ring above              |",
            "| U+0170  | \u0170     | U           | Latin capital letter U with double acute          |",
            "| U+0171  | \u0171     | u           | Latin small letter u with double acute            |",
            "| U+0172  | \u0172     | U           | Latin capital letter U with ogonek                |",
            "| U+0173  | \u0173     | u           | Latin small letter u with ogonek                  |",
            "| U+0174  | \u0174     | W           | Latin capital letter W with circumflex            |",
            "| U+0175  | \u0175     | w           | Latin small letter w with circumflex              |",
            "| U+0176  | \u0176     | Y           | Latin capital letter Y with circumflex            |",
            "| U+0177  | \u0177     | y           | Latin small letter y with circumflex              |",
            "| U+0178  | \u0178     | Y           | Latin capital letter Y with diaeresis             |",
            "| U+0179  | \u0179     | Z           | Latin capital letter Z with acute                 |",
            "| U+017A  | \u017a     | z           | Latin small letter z with acute                   |",
            "| U+017B  | \u017b     | Z           | Latin capital letter Z with dot above             |",
            "| U+017C  | \u017c     | z           | Latin small letter z with dot above               |",
            "| U+017D  | \u017d     | Z           | Latin capital letter Z with caron                 |",
            "| U+017E  | \u017e     | z           | Latin small letter z with caron                   |",
            "| U+017F  | \u017f     | s           | Latin small letter long s                         |",
            "| U+01A0  | \u01a0     | O           | Latin capital letter O with horn                  |",
            "| U+01A1  | \u01a1     | o           | Latin small letter o with horn                    |",
            "| U+01AF  | \u01af     | U           | Latin capital letter U with horn                  |",
            "| U+01B0  | \u01b0     | u           | Latin small letter u with horn                    |",
            "| U+01CD  | \u01cd     | A           | Latin capital letter A with caron                 |",
            "| U+01CE  | \u01ce     | a           | Latin small letter a with caron                   |",
            "| U+01CF  | \u01cf     | I           | Latin capital letter I with caron                 |",
            "| U+01D0  | \u01d0     | i           | Latin small letter i with caron                   |",
            "| U+01D1  | \u01d1     | O           | Latin capital letter O with caron                 |",
            "| U+01D2  | \u01d2     | o           | Latin small letter o with caron                   |",
            "| U+01D3  | \u01d3     | U           | Latin capital letter U with caron                 |",
            "| U+01D4  | \u01d4     | u           | Latin small letter u with caron                   |",
            "| U+01D5  | \u01d5     | U           | Latin capital letter U with diaeresis and macron  |",
            "| U+01D6  | \u01d6     | u           | Latin small letter u with diaeresis and macron    |",
            "| U+01D7  | \u01d7     | U           | Latin capital letter U with diaeresis and acute   |",
            "| U+01D8  | \u01d8     | u           | Latin small letter u with diaeresis and acute     |",
            "| U+01D9  | \u01d9     | U           | Latin capital letter U with diaeresis and caron   |",
            "| U+01DA  | \u01da     | u           | Latin small letter u with diaeresis and caron     |",
            "| U+01DB  | \u01db     | U           | Latin capital letter U with diaeresis and grave   |",
            "| U+01DC  | \u01dc     | u           | Latin small letter u with diaeresis and grave     |",
            "Decompositions for Latin Extended-B:",
            "|   Code   | Glyph | Replacement |                Description                |",
            "| -------- | ----- | ----------- | ----------------------------------------- |",
            "| U+0218   | \u0218     | S           | Latin capital letter S with comma below   |",
            "| U+0219   | \u0219     | s           | Latin small letter s with comma below     |",
            "| U+021A   | \u021a     | T           | Latin capital letter T with comma below   |",
            "| U+021B   | \u021b     | t           | Latin small letter t with comma below     |",
            "Vowels with diacritic (Chinese, Hanyu Pinyin):",
            "|   Code   | Glyph | Replacement |                      Description                      |",
            "| -------- | ----- | ----------- | ----------------------------------------------------- |",
            "| U+0251   | \u0251     | a           | Latin small letter alpha                              |",
            "| U+1EA0   | \u1ea0     | A           | Latin capital letter A with dot below                 |",
            "| U+1EA1   | \u1ea1     | a           | Latin small letter a with dot below                   |",
            "| U+1EA2   | \u1ea2     | A           | Latin capital letter A with hook above                |",
            "| U+1EA3   | \u1ea3     | a           | Latin small letter a with hook above                  |",
            "| U+1EA4   | \u1ea4     | A           | Latin capital letter A with circumflex and acute      |",
            "| U+1EA5   | \u1ea5     | a           | Latin small letter a with circumflex and acute        |",
            "| U+1EA6   | \u1ea6     | A           | Latin capital letter A with circumflex and grave      |",
            "| U+1EA7   | \u1ea7     | a           | Latin small letter a with circumflex and grave        |",
            "| U+1EA8   | \u1ea8     | A           | Latin capital letter A with circumflex and hook above |",
            "| U+1EA9   | \u1ea9     | a           | Latin small letter a with circumflex and hook above   |",
            "| U+1EAA   | \u1eaa     | A           | Latin capital letter A with circumflex and tilde      |",
            "| U+1EAB   | \u1eab     | a           | Latin small letter a with circumflex and tilde        |",
            "| U+1EA6   | \u1eac     | A           | Latin capital letter A with circumflex and dot below  |",
            "| U+1EAD   | \u1ead     | a           | Latin small letter a with circumflex and dot below    |",
            "| U+1EAE   | \u1eae     | A           | Latin capital letter A with breve and acute           |",
            "| U+1EAF   | \u1eaf     | a           | Latin small letter a with breve and acute             |",
            "| U+1EB0   | \u1eb0     | A           | Latin capital letter A with breve and grave           |",
            "| U+1EB1   | \u1eb1     | a           | Latin small letter a with breve and grave             |",
            "| U+1EB2   | \u1eb2     | A           | Latin capital letter A with breve and hook above      |",
            "| U+1EB3   | \u1eb3     | a           | Latin small letter a with breve and hook above        |",
            "| U+1EB4   | \u1eb4     | A           | Latin capital letter A with breve and tilde           |",
            "| U+1EB5   | \u1eb5     | a           | Latin small letter a with breve and tilde             |",
            "| U+1EB6   | \u1eb6     | A           | Latin capital letter A with breve and dot below       |",
            "| U+1EB7   | \u1eb7     | a           | Latin small letter a with breve and dot below         |",
            "| U+1EB8   | \u1eb8     | E           | Latin capital letter E with dot below                 |",
            "| U+1EB9   | \u1eb9     | e           | Latin small letter e with dot below                   |",
            "| U+1EBA   | \u1eba     | E           | Latin capital letter E with hook above                |",
            "| U+1EBB   | \u1ebb     | e           | Latin small letter e with hook above                  |",
            "| U+1EBC   | \u1ebc     | E           | Latin capital letter E with tilde                     |",
            "| U+1EBD   | \u1ebd     | e           | Latin small letter e with tilde                       |",
            "| U+1EBE   | \u1ebe     | E           | Latin capital letter E with circumflex and acute      |",
            "| U+1EBF   | \u1ebf     | e           | Latin small letter e with circumflex and acute        |",
            "| U+1EC0   | \u1ec0     | E           | Latin capital letter E with circumflex and grave      |",
            "| U+1EC1   | \u1ec1     | e           | Latin small letter e with circumflex and grave        |",
            "| U+1EC2   | \u1ec2     | E           | Latin capital letter E with circumflex and hook above |",
            "| U+1EC3   | \u1ec3     | e           | Latin small letter e with circumflex and hook above   |",
            "| U+1EC4   | \u1ec4     | E           | Latin capital letter E with circumflex and tilde      |",
            "| U+1EC5   | \u1ec5     | e           | Latin small letter e with circumflex and tilde        |",
            "| U+1EC6   | \u1ec6     | E           | Latin capital letter E with circumflex and dot below  |",
            "| U+1EC7   | \u1ec7     | e           | Latin small letter e with circumflex and dot below    |",
            "| U+1EC8   | \u1ec8     | I           | Latin capital letter I with hook above                |",
            "| U+1EC9   | \u1ec9     | i           | Latin small letter i with hook above                  |",
            "| U+1ECA   | \u1eca     | I           | Latin capital letter I with dot below                 |",
            "| U+1ECB   | \u1ecb     | i           | Latin small letter i with dot below                   |",
            "| U+1ECC   | \u1ecc     | O           | Latin capital letter O with dot below                 |",
            "| U+1ECD   | \u1ecd     | o           | Latin small letter o with dot below                   |",
            "| U+1ECE   | \u1ece     | O           | Latin capital letter O with hook above                |",
            "| U+1ECF   | \u1ecf     | o           | Latin small letter o with hook above                  |",
            "| U+1ED0   | \u1ed0     | O           | Latin capital letter O with circumflex and acute      |",
            "| U+1ED1   | \u1ed1     | o           | Latin small letter o with circumflex and acute        |",
            "| U+1ED2   | \u1ed2     | O           | Latin capital letter O with circumflex and grave      |",
            "| U+1ED3   | \u1ed3     | o           | Latin small letter o with circumflex and grave        |",
            "| U+1ED4   | \u1ed4     | O           | Latin capital letter O with circumflex and hook above |",
            "| U+1ED5   | \u1ed5     | o           | Latin small letter o with circumflex and hook above   |",
            "| U+1ED6   | \u1ed6     | O           | Latin capital letter O with circumflex and tilde      |",
            "| U+1ED7   | \u1ed7     | o           | Latin small letter o with circumflex and tilde        |",
            "| U+1ED8   | \u1ed8     | O           | Latin capital letter O with circumflex and dot below  |",
            "| U+1ED9   | \u1ed9     | o           | Latin small letter o with circumflex and dot below    |",
            "| U+1EDA   | \u1eda     | O           | Latin capital letter O with horn and acute            |",
            "| U+1EDB   | \u1edb     | o           | Latin small letter o with horn and acute              |",
            "| U+1EDC   | \u1edc     | O           | Latin capital letter O with horn and grave            |",
            "| U+1EDD   | \u1edd     | o           | Latin small letter o with horn and grave              |",
            "| U+1EDE   | \u1ede     | O           | Latin capital letter O with horn and hook above       |",
            "| U+1EDF   | \u1edf     | o           | Latin small letter o with horn and hook above         |",
            "| U+1EE0   | \u1ee0     | O           | Latin capital letter O with horn and tilde            |",
            "| U+1EE1   | \u1ee1     | o           | Latin small letter o with horn and tilde              |",
            "| U+1EE2   | \u1ee2     | O           | Latin capital letter O with horn and dot below        |",
            "| U+1EE3   | \u1ee3     | o           | Latin small letter o with horn and dot below          |",
            "| U+1EE4   | \u1ee4     | U           | Latin capital letter U with dot below                 |",
            "| U+1EE5   | \u1ee5     | u           | Latin small letter u with dot below                   |",
            "| U+1EE6   | \u1ee6     | U           | Latin capital letter U with hook above                |",
            "| U+1EE7   | \u1ee7     | u           | Latin small letter u with hook above                  |",
            "| U+1EE8   | \u1ee8     | U           | Latin capital letter U with horn and acute            |",
            "| U+1EE9   | \u1ee9     | u           | Latin small letter u with horn and acute              |",
            "| U+1EEA   | \u1eea     | U           | Latin capital letter U with horn and grave            |",
            "| U+1EEB   | \u1eeb     | u           | Latin small letter u with horn and grave              |",
            "| U+1EEC   | \u1eec     | U           | Latin capital letter U with horn and hook above       |",
            "| U+1EED   | \u1eed     | u           | Latin small letter u with horn and hook above         |",
            "| U+1EEE   | \u1eee     | U           | Latin capital letter U with horn and tilde            |",
            "| U+1EEF   | \u1eef     | u           | Latin small letter u with horn and tilde              |",
            "| U+1EF0   | \u1ef0     | U           | Latin capital letter U with horn and dot below        |",
            "| U+1EF1   | \u1ef1     | u           | Latin small letter u with horn and dot below          |",
            "| U+1EF2   | \u1ef2     | Y           | Latin capital letter Y with grave                     |",
            "| U+1EF3   | \u1ef3     | y           | Latin small letter y with grave                       |",
            "| U+1EF4   | \u1ef4     | Y           | Latin capital letter Y with dot below                 |",
            "| U+1EF5   | \u1ef5     | y           | Latin small letter y with dot below                   |",
            "| U+1EF6   | \u1ef6     | Y           | Latin capital letter Y with hook above                |",
            "| U+1EF7   | \u1ef7     | y           | Latin small letter y with hook above                  |",
            "| U+1EF8   | \u1ef8     | Y           | Latin capital letter Y with tilde                     |",
            "| U+1EF9   | \u1ef9     | y           | Latin small letter y with tilde                       |",
            "German (`de_DE`), German formal (`de_DE_formal`), German (Switzerland) formal (`de_CH`),",
            "and German (Switzerland) informal (`de_CH_informal`) locales:",
            "|   Code   | Glyph | Replacement |               Description               |",
            "| -------- | ----- | ----------- | --------------------------------------- |",
            "| U+00C4   | \u00c4     | Ae          | Latin capital letter A with diaeresis   |",
            "| U+00E4   | \u00e4     | ae          | Latin small letter a with diaeresis     |",
            "| U+00D6   | \u00d6     | Oe          | Latin capital letter O with diaeresis   |",
            "| U+00F6   | \u00f6     | oe          | Latin small letter o with diaeresis     |",
            "| U+00DC   | \u00dc     | Ue          | Latin capital letter U with diaeresis   |",
            "| U+00FC   | \u00fc     | ue          | Latin small letter u with diaeresis     |",
            "| U+00DF   | \u00df     | ss          | Latin small letter sharp s              |",
            "Danish (`da_DK`) locale:",
            "|   Code   | Glyph | Replacement |               Description               |",
            "| -------- | ----- | ----------- | --------------------------------------- |",
            "| U+00C6   | \u00c6     | Ae          | Latin capital letter AE                 |",
            "| U+00E6   | \u00e6     | ae          | Latin small letter ae                   |",
            "| U+00D8   | \u00d8     | Oe          | Latin capital letter O with stroke      |",
            "| U+00F8   | \u00f8     | oe          | Latin small letter o with stroke        |",
            "| U+00C5   | \u00c5     | Aa          | Latin capital letter A with ring above  |",
            "| U+00E5   | \u00e5     | aa          | Latin small letter a with ring above    |",
            "Catalan (`ca`) locale:",
            "|   Code   | Glyph | Replacement |               Description               |",
            "| -------- | ----- | ----------- | --------------------------------------- |",
            "| U+00B7   | l\u00b7l   | ll          | Flown dot (between two Ls)              |",
            "Serbian (`sr_RS`) and Bosnian (`bs_BA`) locales:",
            "|   Code   | Glyph | Replacement |               Description               |",
            "| -------- | ----- | ----------- | --------------------------------------- |",
            "| U+0110   | \u0110     | DJ          | Latin capital letter D with stroke      |",
            "| U+0111   | \u0111     | dj          | Latin small letter d with stroke        |",
            "@param string $string A String likely encoded in UTF-8 or with foreign characters",
            "@return string the same String conveted to Latin letters [A-Z]"
        ],
        "fieldtexts": []
    },
    "xml2array": {
        "name": "xml2array",
        "params": "$contents, $get_attributes = 1, $priority = 'tag'",
        "description": [
            "XML Related Code",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category XML",
            "xml2array()",
            "will convert the given XML text to an array in the XML structure.",
            "Examples:",
            "$array =  xml2array(file_get_contents('feed.xml'));",
            "$array =  xml2array(file_get_contents('feed.xml', 1, 'attribute'));",
            "@link http:\/\/www.bin-co.com\/php\/scripts\/xml2array\/",
            "@param string $contents The XML text",
            "@param integer $get_attributes 1 or 0. If this is 1 the function will get the attributes as well as the tag values - this results in a different array structure in the return value.",
            "@param string $priority Can be 'tag' or 'attribute'. This will change the way the resulting array structure. For 'tag', the tags are given more importance.",
            "@return array The parsed XML in an array form. Use print_r() to see the resulting array structure."
        ],
        "fieldtexts": []
    },
    "slugify": {
        "name": "slugify",
        "params": "$string",
        "description": [
            "Internal Unexposed Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Decorators",
            "@param $string",
            "@return mixed|string"
        ],
        "fieldtexts": []
    },
    "generateSlug2": {
        "name": "generateSlug2",
        "params": "$url",
        "description": [
            "generateSlug2()",
            "generates a SEO friendly URL from the given URL",
            "<code>",
            "echo generateSlug2('http:\/\/my.interserver.net\/admin\/index.php?choice=none.view_domain&id=371757');",
            "<\/code>",
            "Example Output:",
            "http:\/\/my.interservernet\/admin\/site-index.php~choice--none.view_domain~id--371757.html",
            "@param string $url URL to make SEO Friendly",
            "@return string SEO version of the URL"
        ],
        "fieldtexts": []
    },
    "make_link": {
        "name": "make_link",
        "params": "$target, $text, $title = false, $extra = false, $tpage = false",
        "description": [
            "Adds an A HREF html link",
            "function is mirrored in functions.inc.php",
            "@param string $target",
            "@param string $text",
            "@param bool|string $title",
            "@param bool $extra",
            "@param bool $tpage",
            "@return string"
        ],
        "fieldtexts": []
    },
    "make_select": {
        "name": "make_select",
        "params": "$name, $values, $text, $current = false, $extra = ''",
        "description": [
            "make_select()",
            "generates a select box using the passed data",
            "@param string $name form name element for the select box",
            "@param array $values  array of values that matches up with the text parameter",
            "@param array $text array of text descriptions that matches up with the values parameter",
            "@param bool|string|array $current currently selected value, or defaults to false for none",
            "@param string $extra extra HTML to add at the beginning of the select box",
            "@return string the select table"
        ],
        "fieldtexts": []
    },
    "make_select_label": {
        "name": "make_select_label",
        "params": "$values, $text, $current = false",
        "description": [
            "make_select_label()",
            "generates a select box using the passed data",
            "@param array $values array of values that matches up with the text parameter",
            "@param array $text array of text descriptions that matches up with the values parameter",
            "@param bool|string|array $current currently selected value, or defaults to false for none",
            "@return string the label for the given select"
        ],
        "fieldtexts": []
    },
    "make_insert_query": {
        "name": "make_insert_query",
        "params": "$table, $args, $duplicate_args = false",
        "description": [
            "builds an SQL Insert Query with the given parameters.",
            "it should properly handle different variable types.",
            "to pass a string as a direct mysql call and avoid it being escaped or put in quotes,",
            "pass the element in an array",
            "<code>",
            "echo make_insert_query('invoices', array(",
            "'invoices_id' => NULL,",
            "'invoices_description' => $service_types[$ssl]['services_name'],",
            "'invoices_amount' => $ssl_cost,",
            "'invoices_custid' => $custid,",
            "'invoices_type' => 1,",
            "'invoices_date' => mysql_now(),",
            "'invoices_group' => 0,",
            "'invoices_extra' => 0,",
            "'invoices_paid' => 0,",
            "'invoices_module' => 'ssl',",
            "'invoices_due_date' => mysql_date_add(null, $settings['SUSPEND_DAYS'].' day')",
            "));",
            "<\/code>",
            "Example Output:",
            "insert into invoices (`invoices_id`, `invoices_description`, `invoices_amount`, `invoices_custid`, `invoices_type`, `invoices_date`, `invoices_group`, `invoices_extra`, `invoices_paid`, `invoices_module`, `invoices_due_date`) values (NULL, '(Repeat Invoice: 2500101) .ws Domain Name Registration', '23.00', '4579', 1, '12:01:01 01:12:33', 0, 2500101, 0, 'domains', '12:12:01 01:12:33')",
            "@param string           $table          the table name to insert the values into",
            "@param array            $args           associated array of arguments in the format of  field => value",
            "@param array|bool|false $duplicate_args if specified, the query will add an ON DUPLICATE KEY text, these are the fields to update on duplicate, if not specified it does not add this part to the query.",
            "@return string the SQL insert string"
        ],
        "fieldtexts": []
    },
    "make_delete_by_id": {
        "name": "make_delete_by_id",
        "params": "$table, $id, $custid = 0, $module = 'default'",
        "description": [
            "generates the SQL query for deleting an entry on the given table where",
            "its id parameter matchs the value(s) passed.",
            "it also performs logging tasks and sanitizing the data.",
            "@param string $table the table to perform the delete on.",
            "@param int|array $id the ID or array of IDs to delete",
            "@param int $custid the customer id",
            "@param string $module the module for the  item if relevant",
            "@return string the sql query if it was successful or a blank string if not."
        ],
        "fieldtexts": []
    },
    "sql_delete_by_id": {
        "name": "sql_delete_by_id",
        "params": "$table, $id, $custid = 0, $module = 'default', $log = true",
        "description": [
            "Added 'invoices' to this array in if condition below because we are facing invoices gets deleted somehow so for testing we added invoices to this",
            "added by Mr.G",
            "\t\tif (in_array($table, ['repeat_invoices'])) {",
            "\t\t\tif (is_array($id)) {",
            "\t\t\t\t$query = 'update '.$table.' set '.$table.'_deleted=1 where '.$id_field.' in ('.implode(',', $id).')';",
            "\t\t\t} else {",
            "\t\t\t\t$query = 'update '.$table.' set '.$table.'_deleted=1 where '.$id_field.'='.$id;",
            "\t\t\t}",
            "\t\t} elseif ($table == 'invoices' && $GLOBALS['tf']->ima == 'admin') {",
            "\t\t\tif (is_array($id) && !empty($id)) {",
            "\t\t\t\t$query = 'delete from '.$table.' where '.$id_field.' in ('.implode(',', $id).') limit '.count($id);",
            "\t\t\t} elseif ($id) {",
            "\t\t\t\t$query = 'delete from '.$table.' where '.$id_field.'='.$id.' limit 1';",
            "\t\t\t}",
            "\t\t} else {",
            "\t\t\tif (is_array($id)) {",
            "\t\t\t\t$query = 'delete from '.$table.' where '.$id_field.' in ('.implode(',', $id).') limit '.count($id);",
            "\t\t\t} else {",
            "\t\t\t\t$query = 'delete from '.$table.' where '.$id_field.'='.$id.' limit 1';",
            "\t\t\t}",
            "\t\t}",
            "@todo finish this .. something needs added aw\/ a list of table custid type fields or some way to determine that",
            "\t\tif ($GLOBALS['tf']->ima == 'client')",
            "\t\t\t$query .= ' and '.$custid_field.'='.$custid;",
            "\t\tif ($has_module_field)",
            "\t\t\t$query .= ' and '.$module_field.'='.$custid;",
            "\t}",
            "\treturn $query;",
            "}",
            "performs a delete on the given table where its id parameter matchs the value(s) passed.",
            "it also performs logging tasks and sanitizing the data.",
            "@param string $table the table to perform the delete on.",
            "@param int|array $id the ID or array of IDs to delete",
            "@param int $custid the customer id",
            "@param string $module the module for the  item if relevant",
            "@param bool $log defaults to true, wether or ont to enable history type logging for this delete (if applicable)",
            "@return bool whether or not it was successful"
        ],
        "fieldtexts": []
    },
    "delete_service_invoices": {
        "name": "delete_service_invoices",
        "params": "$module, $service = -1, $custid = -1, $type = -1, $extra = -1, $paid = -1, $log = true",
        "description": [
            "alias function of delete_service_related that passes 'invoices' as the table",
            "@param string $module the module the service is attached to",
            "@param int $service the id of the service, pass -1 or nothing (optional) if you dont want the service field to be referenced",
            "@param int $custid the customer id for the invoices, pass -1 or nothing (optional) if you dont want the custid field to be referenced",
            "@param int $type the invoice type, pass -1 or nothing (optional) if you dont want the type field to be referenced",
            "@param int $extra the extra field (if type = 1 then it points to the repeat invoice id, if type >= 10 then it points to invoice id this is a payment invoice for, pass -1 or ntohing (optional) if you dont want the extra field to be referenced",
            "@param int $paid -1 to skip this check, otherwise 0 or 1 to limit it by the paid flag",
            "@param bool $log whether or not to enable history logging for this action, defaults to true"
        ],
        "fieldtexts": []
    },
    "delete_service_repeat_invoices": {
        "name": "delete_service_repeat_invoices",
        "params": "$module, $service = -1, $custid = -1, $type = -1, $extra = -1, $paid = -1, $log = true",
        "description": [
            "alias function of delete_service_related that passes 'repeat_invoices' as the table",
            "@param string $module the module the service is attached to",
            "@param int $service the id of the service, pass -1 or nothing (optional) if you dont want the service field to be referenced",
            "@param int $custid the customer id for the invoices, pass -1 or nothing (optional) if you dont want the custid field to be referenced",
            "@param int $type the invoice type, pass -1 or nothing (optional) if you dont want the type field to be referenced",
            "@param int $extra the extra field (if type = 1 then it points to the repeat invoice id, if type >= 10 then it points to invoice id this is a payment invoice for, pass -1 or ntohing (optional) if you dont want the extra field to be referenced",
            "@param int $paid -1 to skip this check, otherwise 0 or 1 to limit it by the paid flag",
            "@param bool $log whether or not to enable history logging for this action, defaults to true"
        ],
        "fieldtexts": []
    },
    "delete_service_related": {
        "name": "delete_service_related",
        "params": "$table, $module, $service = -1, $custid = -1, $type = -1, $extra = -1, $paid = -1, $log = true",
        "description": [
            "function to delete rows from a table that references a service (ie invoices, repeat_invoices, etc)",
            "@param string $table the name of the table",
            "@param string $module the module the service is attached to",
            "@param int $service the id of the service, pass -1 or nothing (optional) if you dont want the service field to be referenced",
            "@param int $custid the customer id for the invoices, pass -1 or nothing (optional) if you dont want the custid field to be referenced",
            "@param int $type the invoice type, pass -1 or nothing (optional) if you dont want the type field to be referenced",
            "@param int $extra the extra field (if type = 1 then it points to the repeat invoice id, if type >= 10 then it points to invoice id this is a payment invoice for, pass -1 or ntohing (optional) if you dont want the extra field to be referenced",
            "@param int $paid -1 to skip this check, otherwise 0 or 1 to limit it by the paid flag",
            "@param bool $log whether or not to enable history logging for this action, defaults to true"
        ],
        "fieldtexts": []
    },
    "build_select": {
        "name": "build_select",
        "params": "$name, $values, $current = ''",
        "description": [
            "Added 'invoices' to this array in if condition below because we are facing invoices gets deleted somehow so for testing we added invoices to this",
            "added by Mr.G",
            "\tif (in_array($table, ['repeat_invoices'])) {",
            "\t\t$query = 'update '.$table.' set '.$table.'_deleted=1 where '.implode(' and ', $where);",
            "\t} elseif ($table == 'invoices' && $GLOBALS['tf']->ima == 'admin') {",
            "\t\t$query = 'delete from '.$table.' where '.implode(' and ', $where);",
            "\t} else {",
            "\t\t$query = 'delete from '.$table.' where '.implode(' and ', $where);",
            "\t}",
            "\tif ($log == false) {",
            "\t\t$db->query($query, __LINE__, __FILE__);",
            "\t} else {",
            "\t\t$ids = [];",
            "\t\t$db->query('select '.$prefix.'_id from '.$table.' where '.implode(' and ', $where));",
            "\t\twhile ($db->next_record(MYSQL_ASSOC)) {",
            "\t\t\t$ids[] = $db->Record[$prefix.'_id'];",
            "\t\t}",
            "\t\t$db->query($query, __LINE__, __FILE__);",
            "\t\tforeach ($ids as $id) {",
            "\t\t\t$GLOBALS['tf']->history->add($table, 'delete', $id, $custid);",
            "\t\t}",
            "\t}",
            "}",
            "build_select()",
            "@param mixed $name",
            "@param mixed $values",
            "@param string $current",
            "@return string"
        ],
        "fieldtexts": []
    },
    "select_module": {
        "name": "select_module",
        "params": "$name = 'module', $current = 'default'",
        "description": [
            "@param string $name",
            "@param string $current",
            "@return string"
        ],
        "fieldtexts": []
    },
    "select_country_data": {
        "name": "select_country_data",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "select_country": {
        "name": "select_country",
        "params": "$name, $current, $extra = '', $width = 250",
        "description": [
            "select_country()",
            "@param mixed $name",
            "@param mixed $current",
            "@param string $extra",
            "@param int $width",
            "@return string"
        ],
        "fieldtexts": []
    },
    "gz_footer": {
        "name": "gz_footer",
        "params": "",
        "description": [
            "gz_footer()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "pdf_link": {
        "name": "pdf_link",
        "params": "$target",
        "description": [
            "pdf_link()",
            "@param mixed $target",
            "@return string"
        ],
        "fieldtexts": []
    },
    "xls_link": {
        "name": "xls_link",
        "params": "$target",
        "description": [
            "xls_link()",
            "@param mixed $target",
            "@return string"
        ],
        "fieldtexts": []
    },
    "page_title": {
        "name": "page_title",
        "params": "$title, $front = true",
        "description": [
            "page_title()",
            "@param mixed $title",
            "@param bool $front",
            "@return void"
        ],
        "fieldtexts": []
    },
    "select_daterange": {
        "name": "select_daterange",
        "params": "$refresh = ''",
        "description": [
            "select_daterange()",
            "@param string $refresh",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "gz_header": {
        "name": "gz_header",
        "params": "",
        "description": [
            "gz_header()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "alternate_row_color": {
        "name": "alternate_row_color",
        "params": "",
        "description": [
            "alternate_row_color()",
            "@return string"
        ],
        "fieldtexts": []
    },
    "beautify_minutes": {
        "name": "beautify_minutes",
        "params": "$minutes",
        "description": [
            "beautify_minutes()",
            "@param mixed $minutes",
            "@return string"
        ],
        "fieldtexts": []
    },
    "makeBootstrap3": {
        "name": "makeBootstrap3",
        "params": "Nette\\Forms\\Form $form",
        "description": [
            "sets the options to render with bootstrap tags",
            "@param Nette\\Forms\\Form $form"
        ],
        "fieldtexts": []
    },
    "dns_add": {
        "name": "dns_add",
        "params": "",
        "description": [
            "The DNS Editor",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "add_dns_default_domain": {
        "name": "add_dns_default_domain",
        "params": "$domain_id = null",
        "description": [
            "@param null $domain_id"
        ],
        "fieldtexts": []
    },
    "dns_delete": {
        "name": "dns_delete",
        "params": "",
        "description": [
            "dns_delete()",
            "deletes a domain from the DNS server",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "dns_editor2": {
        "name": "dns_editor2",
        "params": "",
        "description": [
            "dns_editor2()",
            "The DNS Editor",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "dns_editor": {
        "name": "dns_editor",
        "params": "",
        "description": [
            "The DNS Editor",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_hostname": {
        "name": "get_hostname",
        "params": "",
        "description": [
            "Gets the websites hostname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_dns_domain": {
        "name": "get_dns_domain",
        "params": "$domain_id, $bypass = false, $acl = false",
        "description": [
            "get_dns_domain()",
            "Gets the DNS Entry for a given domain id.",
            "@see API",
            "@param integer $domain_id The ID of the domain in question.",
            "@param bool $bypass defaults to false, whether ot not to bypass domain ownership check",
            "@param bool|string $acl optional name of acl to limitadmins by",
            "@return array|false Either an array containing some information about the domain or false on failure."
        ],
        "fieldtexts": []
    },
    "get_dns_records": {
        "name": "get_dns_records",
        "params": "$domain_id, $bypass = false",
        "description": [
            "To be used in combination with {@}get_dns_domain",
            "This gets all the records for a given domain.",
            "@see API",
            "@param int $domain_id The ID of the domain in question.",
            "@param bool $bypass",
            "@return array|false Either an array containing some information about the domain or false on failure."
        ],
        "fieldtexts": []
    },
    "delete_dns_record": {
        "name": "delete_dns_record",
        "params": "$domain_id, $record_id",
        "description": [
            "delete_dns_record()",
            "deletes a single dns record from a domain",
            "@see API",
            "@param integer $domain_id The ID of the domain in question.",
            "@param integer $record_id The ID of the domains record to remove.",
            "@return bool will return true if it succeeded, or false if there was some type of error."
        ],
        "fieldtexts": []
    },
    "add_dns_record": {
        "name": "add_dns_record",
        "params": "$domain_id, $name, $content, $type, $ttl, $prio, $bypass = false",
        "description": [
            "add_dns_record()",
            "Adds a DNS Record for a given domain id.  It will take care of updating the SOA\/Serial number",
            "after the update so you dont need to worry about that.",
            "@see API",
            "@param integer $domain_id The ID of the domain in question.",
            "@param string $name the hostname being set on the dns record.",
            "@param string $content the value of the dns record, or what its set to.",
            "@param string $type  dns record type.",
            "@param integer $ttl dns record time to live, or update time.",
            "@param integer $prio dns record priority",
            "@param bool $bypass defaults to false, whether ot not to bypass domain ownership check",
            "@return int|false The ID of the newly added record, or false on error.."
        ],
        "fieldtexts": []
    },
    "update_dns_record": {
        "name": "update_dns_record",
        "params": "$domain_id, $record_id, $name, $content, $type, $ttl, $prio",
        "description": [
            "update_dns_record()",
            "Update a DNS Record for a given domain id.  It will take care of updating the SOA\/Serial number",
            "after the update so you dont need to worry about that.",
            "@see API",
            "@param integer $domain_id The ID of the domain in question.",
            "@param integer $record_id The ID of the record to update",
            "@param string $name the hostname being set on the dns record.",
            "@param string $content the value of the dns record, or what its set to.",
            "@param string $type  dns record type.",
            "@param int $ttl dns record time to live, or update time.",
            "@param int $prio dns record priority",
            "@return bool True on success, False on failure."
        ],
        "fieldtexts": []
    },
    "delete_dns_domain": {
        "name": "delete_dns_domain",
        "params": "$domain_id",
        "description": [
            "delete_dns_record()",
            "deletes a domain from the system",
            "@see API",
            "@param int $domain_id The ID of the domain in question.",
            "@return bool will return true if it succeeded, or false if there was some type of error."
        ],
        "fieldtexts": []
    },
    "add_dns_domain": {
        "name": "add_dns_domain",
        "params": "$domain, $ip",
        "description": [
            "add_dns_domain()",
            "adds a new domain into our system.",
            "status will be \"ok\" if it added, or \"error\" if there was any problems",
            "status_text will contain a description of the problem if any.",
            "@see API",
            "@param string $domain domain name to host",
            "@param string $ip ip address to assign it to.",
            "@return array array with status and status_text"
        ],
        "fieldtexts": []
    },
    "reverse_dns": {
        "name": "reverse_dns",
        "params": "$ip, $host = '', $action = 'set_reverse'",
        "description": [
            "reverse_dns()",
            "sets up reverse dns for a given IP address.",
            "@param string $ip the ip address you want reverse changed for.",
            "@param string $host the hostname you'd you want to set DNS on the IP to.",
            "@param string $action optional, defaults to set_reverse, can also be remove_reverse",
            "@return bool true if it was able to make the requested changes, false if it wasn't."
        ],
        "fieldtexts": []
    },
    "dns_list": {
        "name": "dns_list",
        "params": "",
        "description": [
            "The DNS Editor",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "dns_manager": {
        "name": "dns_manager",
        "params": "",
        "description": [
            "dns_manager()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "dns_resolvers": {
        "name": "dns_resolvers",
        "params": "",
        "description": [
            "dns_resolvers()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "_": {
        "name": "_",
        "params": "$text",
        "description": [
            "Power DNS Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category DNS",
            "use \\MyDb\\Mdb2\\Db as db_mdb2;",
            "global $rtypes, $server_types, $valid_tlds;",
            "\/\/ Version 2017072000, Last Updated Thu Jul 20 07:07:01 2017 UTC",
            "\/\/ 1547 TLDs",
            "\/\/ http:\/\/data.iana.org\/TLD\/tlds-alpha-by-domain.txt",
            "$valid_tlds = ['aaa', 'aarp', 'abarth', 'abb', 'abbott', 'abbvie', 'abc', 'able', 'abogado', 'abudhabi', 'ac', 'academy', 'accenture', 'accountant', 'accountants', 'aco', 'active', 'actor', 'ad', 'adac', 'ads', 'adult', 'ae', 'aeg', 'aero', 'aetna', 'af', 'afamilycompany', 'afl', 'africa', 'ag', 'agakhan', 'agency', 'ai', 'aig', 'aigo', 'airbus', 'airforce', 'airtel', 'akdn', 'al', 'alfaromeo', 'alibaba', 'alipay', 'allfinanz', 'allstate', 'ally', 'alsace', 'alstom', 'am', 'americanexpress', 'americanfamily', 'amex', 'amfam', 'amica', 'amsterdam', 'analytics', 'android', 'anquan', 'anz', 'ao', 'aol', 'apartments', 'app', 'apple', 'aq', 'aquarelle', 'ar', 'arab', 'aramco', 'archi', 'army', 'arpa', 'art', 'arte', 'as', 'asda', 'asia', 'associates', 'at', 'athleta', 'attorney', 'au', 'auction', 'audi', 'audible', 'audio', 'auspost', 'author', 'auto', 'autos', 'avianca', 'aw', 'aws', 'ax', 'axa', 'az', 'azure', 'ba', 'baby', 'baidu', 'banamex', 'bananarepublic', 'band', 'bank', 'bar', 'barcelona', 'barclaycard', 'barclays', 'barefoot', 'bargains', 'baseball', 'basketball', 'bauhaus', 'bayern', 'bb', 'bbc', 'bbt', 'bbva', 'bcg', 'bcn', 'bd', 'be', 'beats', 'beauty', 'beer', 'bentley', 'berlin', 'best', 'bestbuy', 'bet', 'bf', 'bg', 'bh', 'bharti', 'bi', 'bible', 'bid', 'bike', 'bing', 'bingo', 'bio', 'biz', 'bj', 'black', 'blackfriday', 'blanco', 'blockbuster', 'blog', 'bloomberg', 'blue', 'bm', 'bms', 'bmw', 'bn', 'bnl', 'bnpparibas', 'bo', 'boats', 'boehringer', 'bofa', 'bom', 'bond', 'boo', 'book', 'booking', 'boots', 'bosch', 'bostik', 'boston', 'bot', 'boutique', 'box', 'br', 'bradesco', 'bridgestone', 'broadway', 'broker', 'brother', 'brussels', 'bs', 'bt', 'budapest', 'bugatti', 'build', 'builders', 'business', 'buy', 'buzz', 'bv', 'bw', 'by', 'bz', 'bzh', 'ca', 'cab', 'cafe', 'cal', 'call', 'calvinklein', 'cam', 'camera', 'camp', 'cancerresearch', 'canon', 'capetown', 'capital', 'capitalone', 'car', 'caravan', 'cards', 'care', 'career', 'careers', 'cars', 'cartier', 'casa', 'case', 'caseih', 'cash', 'casino', 'cat', 'catering', 'catholic', 'cba', 'cbn', 'cbre', 'cbs', 'cc', 'cd', 'ceb', 'center', 'ceo', 'cern', 'cf', 'cfa', 'cfd', 'cg', 'ch', 'chanel', 'channel', 'chase', 'chat', 'cheap', 'chintai', 'chloe', 'christmas', 'chrome', 'chrysler', 'church', 'ci', 'cipriani', 'circle', 'cisco', 'citadel', 'citi', 'citic', 'city', 'cityeats', 'ck', 'cl', 'claims', 'cleaning', 'click', 'clinic', 'clinique', 'clothing', 'cloud', 'club', 'clubmed', 'cm', 'cn', 'co', 'coach', 'codes', 'coffee', 'college', 'cologne', 'com', 'comcast', 'commbank', 'community', 'company', 'compare', 'computer', 'comsec', 'condos', 'construction', 'consulting', 'contact', 'contractors', 'cooking', 'cookingchannel', 'cool', 'coop', 'corsica', 'country', 'coupon', 'coupons', 'courses', 'cr', 'credit', 'creditcard', 'creditunion', 'cricket', 'crown', 'crs', 'cruise', 'cruises', 'csc', 'cu', 'cuisinella', 'cv', 'cw', 'cx', 'cy', 'cymru', 'cyou', 'cz', 'dabur', 'dad', 'dance', 'data', 'date', 'dating', 'datsun', 'day', 'dclk', 'dds', 'de', 'deal', 'dealer', 'deals', 'degree', 'delivery', 'dell', 'deloitte', 'delta', 'democrat', 'dental', 'dentist', 'desi', 'design', 'dev', 'dhl', 'diamonds', 'diet', 'digital', 'direct', 'directory', 'discount', 'discover', 'dish', 'diy', 'dj', 'dk', 'dm', 'dnp', 'do', 'docs', 'doctor', 'dodge', 'dog', 'doha', 'domains', 'dot', 'download', 'drive', 'dtv', 'dubai', 'duck', 'dunlop', 'duns', 'dupont', 'durban', 'dvag', 'dvr', 'dz', 'earth', 'eat', 'ec', 'eco', 'edeka', 'edu', 'education', 'ee', 'eg', 'email', 'emerck', 'energy', 'engineer', 'engineering', 'enterprises', 'epost', 'epson', 'equipment', 'er', 'ericsson', 'erni', 'es', 'esq', 'estate', 'esurance', 'et', 'etisalat', 'eu', 'eurovision', 'eus', 'events', 'everbank', 'exchange', 'expert', 'exposed', 'express', 'extraspace', 'fage', 'fail', 'fairwinds', 'faith', 'family', 'fan', 'fans', 'farm', 'farmers', 'fashion', 'fast', 'fedex', 'feedback', 'ferrari', 'ferrero', 'fi', 'fiat', 'fidelity', 'fido', 'film', 'final', 'finance', 'financial', 'fire', 'firestone', 'firmdale', 'fish', 'fishing', 'fit', 'fitness', 'fj', 'fk', 'flickr', 'flights', 'flir', 'florist', 'flowers', 'fly', 'fm', 'fo', 'foo', 'food', 'foodnetwork', 'football', 'ford', 'forex', 'forsale', 'forum', 'foundation', 'fox', 'fr', 'free', 'fresenius', 'frl', 'frogans', 'frontdoor', 'frontier', 'ftr', 'fujitsu', 'fujixerox', 'fun', 'fund', 'furniture', 'futbol', 'fyi', 'ga', 'gal', 'gallery', 'gallo', 'gallup', 'game', 'games', 'gap', 'garden', 'gb', 'gbiz', 'gd', 'gdn', 'ge', 'gea', 'gent', 'genting', 'george', 'gf', 'gg', 'ggee', 'gh', 'gi', 'gift', 'gifts', 'gives', 'giving', 'gl', 'glade', 'glass', 'gle', 'global', 'globo', 'gm', 'gmail', 'gmbh', 'gmo', 'gmx', 'gn', 'godaddy', 'gold', 'goldpoint', 'golf', 'goo', 'goodhands', 'goodyear', 'goog', 'google', 'gop', 'got', 'gov', 'gp', 'gq', 'gr', 'grainger', 'graphics', 'gratis', 'green', 'gripe', 'grocery', 'group', 'gs', 'gt', 'gu', 'guardian', 'gucci', 'guge', 'guide', 'guitars', 'guru', 'gw', 'gy', 'hair', 'hamburg', 'hangout', 'haus', 'hbo', 'hdfc', 'hdfcbank', 'health', 'healthcare', 'help', 'helsinki', 'here', 'hermes', 'hgtv', 'hiphop', 'hisamitsu', 'hitachi', 'hiv', 'hk', 'hkt', 'hm', 'hn', 'hockey', 'holdings', 'holiday', 'homedepot', 'homegoods', 'homes', 'homesense', 'honda', 'honeywell', 'horse', 'hospital', 'host', 'hosting', 'hot', 'hoteles', 'hotels', 'hotmail', 'house', 'how', 'hr', 'hsbc', 'ht', 'htc', 'hu', 'hughes', 'hyatt', 'hyundai', 'ibm', 'icbc', 'ice', 'icu', 'id', 'ie', 'ieee', 'ifm', 'ikano', 'il', 'im', 'imamat', 'imdb', 'immo', 'immobilien', 'in', 'industries', 'infiniti', 'info', 'ing', 'ink', 'institute', 'insurance', 'insure', 'int', 'intel', 'international', 'intuit', 'investments', 'io', 'ipiranga', 'iq', 'ir', 'irish', 'is', 'iselect', 'ismaili', 'ist', 'istanbul', 'it', 'itau', 'itv', 'iveco', 'iwc', 'jaguar', 'java', 'jcb', 'jcp', 'je', 'jeep', 'jetzt', 'jewelry', 'jio', 'jlc', 'jll', 'jm', 'jmp', 'jnj', 'jo', 'jobs', 'joburg', 'jot', 'joy', 'jp', 'jpmorgan', 'jprs', 'juegos', 'juniper', 'kaufen', 'kddi', 'ke', 'kerryhotels', 'kerrylogistics', 'kerryproperties', 'kfh', 'kg', 'kh', 'ki', 'kia', 'kim', 'kinder', 'kindle', 'kitchen', 'kiwi', 'km', 'kn', 'koeln', 'komatsu', 'kosher', 'kp', 'kpmg', 'kpn', 'kr', 'krd', 'kred', 'kuokgroup', 'kw', 'ky', 'kyoto', 'kz', 'la', 'lacaixa', 'ladbrokes', 'lamborghini', 'lamer', 'lancaster', 'lancia', 'lancome', 'land', 'landrover', 'lanxess', 'lasalle', 'lat', 'latino', 'latrobe', 'law', 'lawyer', 'lb', 'lc', 'lds', 'lease', 'leclerc', 'lefrak', 'legal', 'lego', 'lexus', 'lgbt', 'li', 'liaison', 'lidl', 'life', 'lifeinsurance', 'lifestyle', 'lighting', 'like', 'lilly', 'limited', 'limo', 'lincoln', 'linde', 'link', 'lipsy', 'live', 'living', 'lixil', 'lk', 'loan', 'loans', 'locker', 'locus', 'loft', 'lol', 'london', 'lotte', 'lotto', 'love', 'lpl', 'lplfinancial', 'lr', 'ls', 'lt', 'ltd', 'ltda', 'lu', 'lundbeck', 'lupin', 'luxe', 'luxury', 'lv', 'ly', 'ma', 'macys', 'madrid', 'maif', 'maison', 'makeup', 'man', 'management', 'mango', 'map', 'market', 'marketing', 'markets', 'marriott', 'marshalls', 'maserati', 'mattel', 'mba', 'mc', 'mcd', 'mcdonalds', 'mckinsey', 'md', 'me', 'med', 'media', 'meet', 'melbourne', 'meme', 'memorial', 'men', 'menu', 'meo', 'merckmsd', 'metlife', 'mg', 'mh', 'miami', 'microsoft', 'mil', 'mini', 'mint', 'mit', 'mitsubishi', 'mk', 'ml', 'mlb', 'mls', 'mm', 'mma', 'mn', 'mo', 'mobi', 'mobile', 'mobily', 'moda', 'moe', 'moi', 'mom', 'monash', 'money', 'monster', 'montblanc', 'mopar', 'mormon', 'mortgage', 'moscow', 'moto', 'motorcycles', 'mov', 'movie', 'movistar', 'mp', 'mq', 'mr', 'ms', 'msd', 'mt', 'mtn', 'mtr', 'mu', 'museum', 'mutual', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nab', 'nadex', 'nagoya', 'name', 'nationwide', 'natura', 'navy', 'nba', 'nc', 'ne', 'nec', 'net', 'netbank', 'netflix', 'network', 'neustar', 'new', 'newholland', 'news', 'next', 'nextdirect', 'nexus', 'nf', 'nfl', 'ng', 'ngo', 'nhk', 'ni', 'nico', 'nike', 'nikon', 'ninja', 'nissan', 'nissay', 'nl', 'no', 'nokia', 'northwesternmutual', 'norton', 'now', 'nowruz', 'nowtv', 'np', 'nr', 'nra', 'nrw', 'ntt', 'nu', 'nyc', 'nz', 'obi', 'observer', 'off', 'office', 'okinawa', 'olayan', 'olayangroup', 'oldnavy', 'ollo', 'om', 'omega', 'one', 'ong', 'onl', 'online', 'onyourside', 'ooo', 'open', 'oracle', 'orange', 'org', 'organic', 'origins', 'osaka', 'otsuka', 'ott', 'ovh', 'pa', 'page', 'pamperedchef', 'panasonic', 'panerai', 'paris', 'pars', 'partners', 'parts', 'party', 'passagens', 'pay', 'pccw', 'pe', 'pet', 'pf', 'pfizer', 'pg', 'ph', 'pharmacy', 'phd', 'philips', 'phone', 'photo', 'photography', 'photos', 'physio', 'piaget', 'pics', 'pictet', 'pictures', 'pid', 'pin', 'ping', 'pink', 'pioneer', 'pizza', 'pk', 'pl', 'place', 'play', 'playstation', 'plumbing', 'plus', 'pm', 'pn', 'pnc', 'pohl', 'poker', 'politie', 'porn', 'post', 'pr', 'pramerica', 'praxi', 'press', 'prime', 'pro', 'prod', 'productions', 'prof', 'progressive', 'promo', 'properties', 'property', 'protection', 'pru', 'prudential', 'ps', 'pt', 'pub', 'pw', 'pwc', 'py', 'qa', 'qpon', 'quebec', 'quest', 'qvc', 'racing', 'radio', 'raid', 're', 'read', 'realestate', 'realtor', 'realty', 'recipes', 'red', 'redstone', 'redumbrella', 'rehab', 'reise', 'reisen', 'reit', 'reliance', 'ren', 'rent', 'rentals', 'repair', 'report', 'republican', 'rest', 'restaurant', 'review', 'reviews', 'rexroth', 'rich', 'richardli', 'ricoh', 'rightathome', 'ril', 'rio', 'rip', 'rmit', 'ro', 'rocher', 'rocks', 'rodeo', 'rogers', 'room', 'rs', 'rsvp', 'ru', 'rugby', 'ruhr', 'run', 'rw', 'rwe', 'ryukyu', 'sa', 'saarland', 'safe', 'safety', 'sakura', 'sale', 'salon', 'samsclub', 'samsung', 'sandvik', 'sandvikcoromant', 'sanofi', 'sap', 'sapo', 'sarl', 'sas', 'save', 'saxo', 'sb', 'sbi', 'sbs', 'sc', 'sca', 'scb', 'schaeffler', 'schmidt', 'scholarships', 'school', 'schule', 'schwarz', 'science', 'scjohnson', 'scor', 'scot', 'sd', 'se', 'search', 'seat', 'secure', 'security', 'seek', 'select', 'sener', 'services', 'ses', 'seven', 'sew', 'sex', 'sexy', 'sfr', 'sg', 'sh', 'shangrila', 'sharp', 'shaw', 'shell', 'shia', 'shiksha', 'shoes', 'shop', 'shopping', 'shouji', 'show', 'showtime', 'shriram', 'si', 'silk', 'sina', 'singles', 'site', 'sj', 'sk', 'ski', 'skin', 'sky', 'skype', 'sl', 'sling', 'sm', 'smart', 'smile', 'sn', 'sncf', 'so', 'soccer', 'social', 'softbank', 'software', 'sohu', 'solar', 'solutions', 'song', 'sony', 'soy', 'space', 'spiegel', 'spot', 'spreadbetting', 'sr', 'srl', 'srt', 'st', 'stada', 'staples', 'star', 'starhub', 'statebank', 'statefarm', 'statoil', 'stc', 'stcgroup', 'stockholm', 'storage', 'store', 'stream', 'studio', 'study', 'style', 'su', 'sucks', 'supplies', 'supply', 'support', 'surf', 'surgery', 'suzuki', 'sv', 'swatch', 'swiftcover', 'swiss', 'sx', 'sy', 'sydney', 'symantec', 'systems', 'sz', 'tab', 'taipei', 'talk', 'taobao', 'target', 'tatamotors', 'tatar', 'tattoo', 'tax', 'taxi', 'tc', 'tci', 'td', 'tdk', 'team', 'tech', 'technology', 'tel', 'telecity', 'telefonica', 'temasek', 'tennis', 'teva', 'tf', 'tg', 'th', 'thd', 'theater', 'theatre', 'tiaa', 'tickets', 'tienda', 'tiffany', 'tips', 'tires', 'tirol', 'tj', 'tjmaxx', 'tjx', 'tk', 'tkmaxx', 'tl', 'tm', 'tmall', 'tn', 'to', 'today', 'tokyo', 'tools', 'top', 'toray', 'toshiba', 'total', 'tours', 'town', 'toyota', 'toys', 'tr', 'trade', 'trading', 'training', 'travel', 'travelchannel', 'travelers', 'travelersinsurance', 'trust', 'trv', 'tt', 'tube', 'tui', 'tunes', 'tushu', 'tv', 'tvs', 'tw', 'tz', 'ua', 'ubank', 'ubs', 'uconnect', 'ug', 'uk', 'unicom', 'university', 'uno', 'uol', 'ups', 'us', 'uy', 'uz', 'va', 'vacations', 'vana', 'vanguard', 'vc', 've', 'vegas', 'ventures', 'verisign', 'versicherung', 'vet', 'vg', 'vi', 'viajes', 'video', 'vig', 'viking', 'villas', 'vin', 'vip', 'virgin', 'visa', 'vision', 'vista', 'vistaprint', 'viva', 'vivo', 'vlaanderen', 'vn', 'vodka', 'volkswagen', 'volvo', 'vote', 'voting', 'voto', 'voyage', 'vu', 'vuelos', 'wales', 'walmart', 'walter', 'wang', 'wanggou', 'warman', 'watch', 'watches', 'weather', 'weatherchannel', 'webcam', 'weber', 'website', 'wed', 'wedding', 'weibo', 'weir', 'wf', 'whoswho', 'wien', 'wiki', 'williamhill', 'win', 'windows', 'wine', 'winners', 'wme', 'wolterskluwer', 'woodside', 'work', 'works', 'world', 'wow', 'ws', 'wtc', 'wtf', 'xbox', 'xerox', 'xfinity', 'xihuan', 'xin', 'xn--11b4c3d', 'xn--1ck2e1b', 'xn--1qqw23a', 'xn--2scrj9c', 'xn--30rr7y', 'xn--3bst00m', 'xn--3ds443g', 'xn--3e0b707e', 'xn--3hcrj9c', 'xn--3oq18vl8pn36a', 'xn--3pxu8k', 'xn--42c2d9a', 'xn--45br5cyl', 'xn--45brj9c', 'xn--45q11c', 'xn--4gbrim', 'xn--54b7fta0cc', 'xn--55qw42g', 'xn--55qx5d', 'xn--5su34j936bgsg', 'xn--5tzm5g', 'xn--6frz82g', 'xn--6qq986b3xl', 'xn--80adxhks', 'xn--80ao21a', 'xn--80aqecdr1a', 'xn--80asehdb', 'xn--80aswg', 'xn--8y0a063a', 'xn--90a3ac', 'xn--90ae', 'xn--90ais', 'xn--9dbq2a', 'xn--9et52u', 'xn--9krt00a', 'xn--b4w605ferd', 'xn--bck1b9a5dre4c', 'xn--c1avg', 'xn--c2br7g', 'xn--cck2b3b', 'xn--cg4bki', 'xn--clchc0ea0b2g2a9gcd', 'xn--czr694b', 'xn--czrs0t', 'xn--czru2d', 'xn--d1acj3b', 'xn--d1alf', 'xn--e1a4c', 'xn--eckvdtc9d', 'xn--efvy88h', 'xn--estv75g', 'xn--fct429k', 'xn--fhbei', 'xn--fiq228c5hs', 'xn--fiq64b', 'xn--fiqs8s', 'xn--fiqz9s', 'xn--fjq720a', 'xn--flw351e', 'xn--fpcrj9c3d', 'xn--fzc2c9e2c', 'xn--fzys8d69uvgm', 'xn--g2xx48c', 'xn--gckr3f0f', 'xn--gecrj9c', 'xn--gk3at1e', 'xn--h2breg3eve', 'xn--h2brj9c', 'xn--h2brj9c8c', 'xn--hxt814e', 'xn--i1b6b1a6a2e', 'xn--imr513n', 'xn--io0a7i', 'xn--j1aef', 'xn--j1amh', 'xn--j6w193g', 'xn--jlq61u9w7b', 'xn--jvr189m', 'xn--kcrx77d1x4a', 'xn--kprw13d', 'xn--kpry57d', 'xn--kpu716f', 'xn--kput3i', 'xn--l1acc', 'xn--lgbbat1ad8j', 'xn--mgb9awbf', 'xn--mgba3a3ejt', 'xn--mgba3a4f16a', 'xn--mgba7c0bbn0a', 'xn--mgbaakc7dvf', 'xn--mgbaam7a8h', 'xn--mgbab2bd', 'xn--mgbai9azgqp6j', 'xn--mgbayh7gpa', 'xn--mgbb9fbpob', 'xn--mgbbh1a', 'xn--mgbbh1a71e', 'xn--mgbc0a9azcg', 'xn--mgbca7dzdo', 'xn--mgberp4a5d4ar', 'xn--mgbgu82a', 'xn--mgbi4ecexp', 'xn--mgbpl2fh', 'xn--mgbt3dhd', 'xn--mgbtx2b', 'xn--mgbx4cd0ab', 'xn--mix891f', 'xn--mk1bu44c', 'xn--mxtq1m', 'xn--ngbc5azd', 'xn--ngbe9e0a', 'xn--ngbrx', 'xn--node', 'xn--nqv7f', 'xn--nqv7fs00ema', 'xn--nyqy26a', 'xn--o3cw4h', 'xn--ogbpf8fl', 'xn--p1acf', 'xn--p1ai', 'xn--pbt977c', 'xn--pgbs0dh', 'xn--pssy2u', 'xn--q9jyb4c', 'xn--qcka1pmc', 'xn--qxam', 'xn--rhqv96g', 'xn--rovu88b', 'xn--rvc1e0am3e', 'xn--s9brj9c', 'xn--ses554g', 'xn--t60b56a', 'xn--tckwe', 'xn--tiq49xqyj', 'xn--unup4y', 'xn--vermgensberater-ctb', 'xn--vermgensberatung-pwb', 'xn--vhquv', 'xn--vuq861b', 'xn--w4r85el8fhu5dnra', 'xn--w4rs40l', 'xn--wgbh1c', 'xn--wgbl6a', 'xn--xhq521b', 'xn--xkc2al3hye2a', 'xn--xkc2dl3a5ee0h', 'xn--y9a3aq', 'xn--yfro4i67o', 'xn--ygbi2ammx', 'xn--zfr164b', 'xperia', 'xxx', 'xyz', 'yachts', 'yahoo', 'yamaxun', 'yandex', 'ye', 'yodobashi', 'yoga', 'yokohama', 'you', 'youtube', 'yt', 'yun', 'za', 'zappos', 'zara', 'zero', 'zip', 'zippo', 'zm', 'zone', 'zuerich', 'zw'];",
            "\/\/ Array of the available zone types",
            "$server_types = ['MASTER', 'SLAVE', 'NATIVE'];",
            "\/\/ $rtypes - array of possible record types",
            "$rtypes = ['A', 'A6', 'AAAA', 'AFSDB', 'ALIAS', 'CAA', 'CDNSKEY', 'CDS', 'CERT', 'CNAME', 'DHCID', 'DLV', 'DNSKEY', 'DNAME', 'DS', 'EUI48', 'EUI64', 'HINFO', 'IPSECKEY', 'KEY', 'KX', 'LOC', 'MAILA', 'MAILB', 'MINFO', 'MR', 'MX', 'NAPTR', 'NS', 'NSEC', 'NSEC3', 'NSEC3PARAM', 'OPENPGPKEY', 'OPT', 'PTR', 'RKEY', 'RP', 'RRSIG', 'SIG', 'SOA', 'SPF', 'SRV', 'SSHFP', 'TLSA', 'TKEY', 'TSIG', 'TXT', 'WKS', 'URI'];",
            "\/\/ If fancy records is enabled, extend this field.",
            "if (isset($dns_fancy) && $dns_fancy) {",
            "\t$rtypes[14] = 'URL';",
            "\t$rtypes[15] = 'MBOXFW';",
            "\t$rtypes[16] = 'CURL';",
            "}",
            "if (!function_exists('_')) {",
            "@param $text",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "get_db_mdb2": {
        "name": "get_db_mdb2",
        "params": "",
        "description": [
            "@return \\MyDb\\Mdb2\\Db"
        ],
        "fieldtexts": []
    },
    "endsWith": {
        "name": "endsWith",
        "params": "$needle, $haystack",
        "description": [
            "@param $needle",
            "@param $haystack",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "is_valid_email": {
        "name": "is_valid_email",
        "params": "$address",
        "description": [
            "is_valid_email()",
            "@param mixed $address",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "set_timezone": {
        "name": "set_timezone",
        "params": "",
        "description": [
            "set_timezone()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "isError": {
        "name": "isError",
        "params": "$result",
        "description": [
            "isError()",
            "@param mixed $result",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "is_not_empty_cname_rr": {
        "name": "is_not_empty_cname_rr",
        "params": "$name, $zone",
        "description": [
            "Check that the zone does not have a empty CNAME RR",
            "@param string $name",
            "@param string $zone",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "buy_domain3": {
        "name": "buy_domain3",
        "params": "",
        "description": [
            "Domain Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains",
            "buy_domain()",
            "@return void",
            "@throws \\Detain\\ZipZapper\\ValidationException",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "buy_domain_from_website": {
        "name": "buy_domain_from_website",
        "params": "",
        "description": [
            "Domain Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains",
            "places a domain order in the system with the same hostname as a website order",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "buy_domain": {
        "name": "buy_domain",
        "params": "",
        "description": [
            "Domain Related Functionality",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains",
            "buy_domain()",
            "@return void",
            "@throws \\Detain\\ZipZapper\\ValidationException",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "parse_domain_extra": {
        "name": "parse_domain_extra",
        "params": "$extra",
        "description": [
            "Domain Related Functionality",
            "OpenSRS Documentation: https:\/\/opensrs.com\/docs\/apidomains\/\t *",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains",
            "if (function_exists('register_event')) {",
            "\tregister_event('get_service_types', 'get_domain_types', 'domains');",
            "\tregister_event('parse_service_extra', 'parse_domain_extra', 'domains');",
            "}",
            "parse_domain_extra()",
            "@param mixed $extra",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_domain_types": {
        "name": "get_domain_types",
        "params": "$hide_empty = false",
        "description": [
            "get_domain_types()",
            "@param bool $hide_empty whether to hide the gaps in service ids",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_domain_error_text": {
        "name": "get_domain_error_text",
        "params": "$osrsHandler",
        "description": [
            "@param $osrsHandler",
            "@return array|mixed|string"
        ],
        "fieldtexts": []
    },
    "get_available_domain_tlds": {
        "name": "get_available_domain_tlds",
        "params": "",
        "description": [
            "gets an array of available tlds for purchase via the domains module.",
            "@return array an array of tlds (including the .)"
        ],
        "fieldtexts": []
    },
    "get_available_domain_tlds_by_tld": {
        "name": "get_available_domain_tlds_by_tld",
        "params": "",
        "description": [
            "gets a list of tlds by tld",
            "@return array array of tlds that are buyable indexed by tld including the cost and service id"
        ],
        "fieldtexts": []
    },
    "get_available_service_tld_pricing": {
        "name": "get_available_service_tld_pricing",
        "params": "",
        "description": [
            "returns an array of tld prices",
            "@return array an array of array('tld' => array('new' => 1.23, 'renewal' => '1.23', 'transfer' => '1.23'))"
        ],
        "fieldtexts": []
    },
    "get_service_tld_pricing": {
        "name": "get_service_tld_pricing",
        "params": "",
        "description": [
            "returns an array of tld prices",
            "@return array an array of array('tld' => array('new' => 1.23, 'renewal' => '1.23', 'transfer' => '1.23'))"
        ],
        "fieldtexts": []
    },
    "get_service_tlds": {
        "name": "get_service_tlds",
        "params": "",
        "description": [
            "gets an array of the tlds that are buyable",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "get_effective_tld": {
        "name": "get_effective_tld",
        "params": "$url_or_domain",
        "description": [
            "gets the effective tld from a given url or domain name",
            "@param string $url_or_domain url or domain name",
            "@return string the effective tld parsed from the domain or url"
        ],
        "fieldtexts": []
    },
    "get_domain_tld": {
        "name": "get_domain_tld",
        "params": "$domain",
        "description": [
            "gets the tld for a given domain",
            "@param string $domain domain name to get the tld for",
            "@return string the tld parsed from the domain or url"
        ],
        "fieldtexts": []
    },
    "get_domain_tld_info": {
        "name": "get_domain_tld_info",
        "params": "$domain",
        "description": [
            "returns tld information about the given domain including tld that we sell, the effective tld, and what the primary and subdomain info would be.",
            "@param string $domain the hostname to get info about",
            "@return array array with the tld, etld, primary domain, and subdomain info"
        ],
        "fieldtexts": []
    },
    "get_domain_tld_whois_privacy": {
        "name": "get_domain_tld_whois_privacy",
        "params": "$domain",
        "description": [
            "gets whether or not whois privacy is available for the given domain",
            "@param string $domain the domain name",
            "@return bool whether or not whois privacy is available."
        ],
        "fieldtexts": []
    },
    "is_registerable_domain": {
        "name": "is_registerable_domain",
        "params": "$domain",
        "description": [
            "returns whether or not the domain is registerable",
            "@param string $domain the hostname to check if its registerable",
            "@return bool whether or not the domain is registerable"
        ],
        "fieldtexts": []
    },
    "checkPublicSuffix": {
        "name": "checkPublicSuffix",
        "params": "$domain, $expected_public_domain",
        "description": [
            "@param $domain",
            "@param $expected_public_domain",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_service_tld_from_domain": {
        "name": "get_service_tld_from_domain",
        "params": "$domain",
        "description": [
            "get_service_tld_from_domain()",
            "@param mixed $domain",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "domain_welcome_email": {
        "name": "domain_welcome_email",
        "params": "$id, $renew = false",
        "description": [
            "domain_welcome_email()",
            "@param mixed $id",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "display_domain_results": {
        "name": "display_domain_results",
        "params": "$results, $title = 'Domain Search Results', $actualResults = true",
        "description": [
            "display_domain_results()",
            "@param mixed $results",
            "@param mixed $title",
            "@return bool|string",
            "function display_domain_results($results, $title) {",
            "\t$table = new TFTable;",
            "\t$table->set_title($title);",
            "\t$table->set_filename(DEFAULT_THEME.'\/newtable.tpl');",
            "\t$table->set_options('width = 400');",
            "\t$table->alternate_rows();",
            "\t\/\/echo '<pre>';print_r($results);",
            "\tforeach ($results as $domain_result) {",
            "\t\tif (!isset($domain_result['domain'])) {",
            "\t\t\tmyadmin_log('domains', 'info', \"Domain Lookup $title Got Weird Output \" . json_encode($domain_result), __LINE__, __FILE__);",
            "\t\t}",
            "\t\t$table->add_field($domain_result['domain']);",
            "\t\t$service = get_service_tld_from_domain($domain_result['domain']);",
            "\t\tif (isset($domain_result['price'])) {",
            "\t\t\t$table->add_field('$'.$domain_result['price']); \/\/ price only for premium domain listings",
            "\t\t} else {",
            "\t\t\tif ($service) {",
            "\t\t\t\t$table->add_field('$'.$service['services_cost']);",
            "\t\t\t}",
            "\t\t}",
            "\t\tif ($domain_result['status'] == 'available') {",
            "\t\t\t$table->add_field($table->make_link('choice=none.buy_domain&amp;domain='.$service['services_id'].'&amp;hostname='.$domain_result['domain'], 'Register'));",
            "\t\t} else {",
            "\t\t\t\/\/$table->add_field($domain_result['status']);",
            "\t\t\t$table->add_field($domain_result['status'].' '.$table->make_link('choice=none.buy_domain&amp;domain='.$service['services_id'].'&amp;transfer=yes&amp;hostname='.$domain_result['domain'], ' (Transfer Domain)'));",
            "\t\t}",
            "\t\t$table->add_row();",
            "\t}",
            "\treturn ($table->get_table());",
            "}*\/",
            "display_domain_results()",
            "@param mixed $results",
            "@param mixed $title",
            "@param bool  $actualResults",
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_domain_type_by_domain_id": {
        "name": "get_domain_type_by_domain_id",
        "params": "$default = 0",
        "description": [
            "get_domain_type_by_domain_id()",
            "@param integer $default",
            "@return string"
        ],
        "fieldtexts": []
    },
    "select_domain_type": {
        "name": "select_domain_type",
        "params": "$default = 0, $name = 'domain', $javascript = false",
        "description": [
            "select_domain_type()",
            "@param integer $default",
            "@param string $name",
            "@param bool $javascript",
            "@return string"
        ],
        "fieldtexts": []
    },
    "opensrs_get_cookie": {
        "name": "opensrs_get_cookie",
        "params": "$username, $password, $domain",
        "description": [
            "Gets an OpenSRS cookie for a domain name given the username and password for it.",
            "@param string $username the username to authenticate with opensrs",
            "@param string $password the password for opensrs authentication",
            "@param string $domain the domain name",
            "@return false|string false if there was a problem or the string containing the cookie"
        ],
        "fieldtexts": []
    },
    "opensrs_get_nameservers": {
        "name": "opensrs_get_nameservers",
        "params": "$cookie",
        "description": [
            "Gets the current nameservers for a domain using an authenticated cookie.",
            "@param string $cookie the cookie from opensrs_get_cookie()",
            "@return false|array false if error or an array of nameservers"
        ],
        "fieldtexts": []
    },
    "opensrs_create_nameserver": {
        "name": "opensrs_create_nameserver",
        "params": "$cookie, $hostname, $ip, $useDomain = false",
        "description": [
            "Creates a domain nameserver entry for a domain using an authenticated cookie.",
            "@param string $cookie the cookie from opensrs_get_cookie()",
            "@param string $hostname hostname of the nameserver to add",
            "@param string $ip ip address of the nameserver to add",
            "@param bool $useDomain",
            "@return bool true if successful, false if there was an error."
        ],
        "fieldtexts": []
    },
    "opensrs_delete_nameserver": {
        "name": "opensrs_delete_nameserver",
        "params": "$cookie, $hostname, $ip, $useDomain = false",
        "description": [
            "Deletes a domain nameserver entry for a domain using an authenticated cookie.",
            "@param string $cookie the cookie from opensrs_get_cookie()",
            "@param string $hostname hostname of the nameserver to delete",
            "@param string $ip ip address of the nameserver to delete",
            "@param bool $useDomain",
            "@return bool true if successful, false if there was an error."
        ],
        "fieldtexts": []
    },
    "check_domain_available": {
        "name": "check_domain_available",
        "params": "$domain",
        "description": [
            "Checks whether or not the domain is available for registration.",
            "@param string $domain the domain name to lookup",
            "@return bool returns true if the domain is available, false otherwise"
        ],
        "fieldtexts": []
    },
    "lookup_domain_price": {
        "name": "lookup_domain_price",
        "params": "$domain",
        "description": [
            "Checks the OpenSRS price for a domain name.",
            "@param string $domain the domain name to lookup the price for",
            "@return false|float false if there was an error or the price"
        ],
        "fieldtexts": []
    },
    "search_domain": {
        "name": "search_domain",
        "params": "$domain, $function",
        "description": [
            "Searches for a domain name matching it up with our tlds that we have buyable.",
            "@param string $domain the domain name or part to search for",
            "@param string $function the search function to perform",
            "@return array returns an array containing the search results"
        ],
        "fieldtexts": []
    },
    "is_domain_available": {
        "name": "is_domain_available",
        "params": "$domain",
        "description": [
            "@param $domain",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "domain_move": {
        "name": "domain_move",
        "params": "",
        "description": [
            "Domains Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains"
        ],
        "fieldtexts": []
    },
    "get_199_domains_list": {
        "name": "get_199_domains_list",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_domain_fields": {
        "name": "get_domain_fields",
        "params": "$domain_type, $cust_data, $reg_type = 'registration'",
        "description": [
            "Domain Related Functionality",
            "OpenSRS Documentation: https:\/\/opensrs.com\/docs\/apidomains\/",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains",
            "Returns a list of all the fields of information we need from the customer when",
            "registering a domain.   It also contains rules (or at least suggestions) on how",
            "to get the input from the user, how to validate the information, and if its",
            "required or not.",
            "Items in the array should look like",
            "'field' => array(",
            "'label' => 'Description',",
            "'input' => $InputType,",
            "'value' => 'value',",
            "'required' => true,",
            "'validations' => array([$Validation], [$Validation]),",
            ")",
            "$Validation (optional)",
            "can be any combination of these:",
            "integer, float, email, hostname, noselect, positive, boolean, ip, alpha, alphanum, nohtml",
            "noselect - negates automatically validating select inputs",
            "against the list of possible values in the select box",
            "$InputType",
            "can be either a string or an array.   if you dont want to specify",
            "any options for your $InputType then you can use string calling syntax",
            "to speed things up.single text element or an array,  The array type",
            "has a 'type' element that must be be set, the rest of the elements",
            "are optional and only need to be specified if you want to change their",
            "default behavior   if labels is not specified on a select type , then the",
            "values are used as the label as well.",
            "example (single):",
            "'input' => 'text',",
            "example (array):",
            "'input' => Array(",
            "'type' => 'select',",
            "'values' => array('value1', 'value2', 'value3'),",
            "'labels' => array('Value 1', 'Value 2', 'Value 3')",
            "),",
            "@param integer|string $domain_type service id for the domain type or the .tld (including period)",
            "@param array $cust_data customer data array to use for filling in default values for matching keys",
            "@param string $reg_type optional, defaults to 'registration', can be 'registration', 'transfer', or 'any'  to return fields specific to a type, or fields for both if set to 'any'",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "manage_domain": {
        "name": "manage_domain",
        "params": "",
        "description": [
            "manage_domain()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "search_domain_internal": {
        "name": "search_domain_internal",
        "params": "$domain, $function, $maxLimit",
        "description": [
            "search_domain()",
            "@param mixed $domain",
            "@param mixed $function",
            "@param $maxLimit",
            "@return array"
        ],
        "fieldtexts": []
    },
    "display_domain_results_internal": {
        "name": "display_domain_results_internal",
        "params": "$results, $title, $actualResults",
        "description": [
            "display_domain_results()",
            "@param mixed $results",
            "@param mixed $title",
            "@param       $actualResults",
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "validate_domain_fields": {
        "name": "validate_domain_fields",
        "params": "$domain_fields, $return = false",
        "description": [
            "Domain Related Functionality",
            "OpenSRS Documentation: https:\/\/opensrs.com\/docs\/apidomains\/",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains",
            "Validates the domain fields for registration",
            "@param array $domain_fields associative array of current fields and values",
            "@param bool  $return        defaults to false, whether or not to return the errors vs display them",
            "@return array|bool if return is not specified or false, then it returns a boolean of the status, otherwise an array of errors",
            "@throws \\Detain\\ZipZapper\\ValidationException"
        ],
        "fieldtexts": []
    },
    "validate_domain": {
        "name": "validate_domain",
        "params": "$data",
        "description": [
            "validate_domain($data)",
            "@param $data",
            "@return array|bool",
            "@throws \\Detain\\ZipZapper\\ValidationException",
            "@internal param mixed $id"
        ],
        "fieldtexts": []
    },
    "view_domain2": {
        "name": "view_domain2",
        "params": "$id = false",
        "description": [
            "Domain Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains",
            "view_domain2()",
            "@param bool $id",
            "@return void",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "loadDomainInfo": {
        "name": "loadDomainInfo",
        "params": "",
        "description": [
            "Loads all the domain information into the 2 globals and sets the locked, whois_privacy, expiry_date, and registrarStatus globals based on the output.",
            "@return void"
        ],
        "fieldtexts": []
    },
    "check_domain_owner": {
        "name": "check_domain_owner",
        "params": "$domain_id, $domain_custid",
        "description": [
            "@param $domain_id",
            "@param $domain_custid",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "link_whois_privacy": {
        "name": "link_whois_privacy",
        "params": "",
        "description": [
            "Enable\/Disable Whois Privacy for a Domain and purchase it when applicable"
        ],
        "fieldtexts": []
    },
    "view_domain": {
        "name": "view_domain",
        "params": "$id = false",
        "description": [
            "Domain Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains",
            "view_domain()",
            "@param bool $id",
            "@return void",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_domains_list": {
        "name": "view_domains_list",
        "params": "",
        "description": [
            "Domain Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains",
            "view_domains_list()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "view_domains": {
        "name": "view_domains",
        "params": "",
        "description": [
            "view_domains()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "domains_check_whois_privacy": {
        "name": "domains_check_whois_privacy",
        "params": "$addon",
        "description": [
            "Domain Related Functionality",
            "OpenSRS Documentation: https:\/\/opensrs.com\/docs\/apidomains\/\t *",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Domains",
            " use Detain\\MyAdminOpenSRS\\OpenSRS;",
            "checks the whois privacy on a given addon for use in the whois privacy addon",
            "@param \\AddServiceAddon $addon the AddServiceAddon class object",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "whois_privacy": {
        "name": "whois_privacy",
        "params": "",
        "description": [
            "Enable\/Disable Whois Privacy for a Domain and purchase it when applicable"
        ],
        "fieldtexts": []
    },
    "my_error_handler": {
        "name": "my_error_handler",
        "params": "$num, $str, $file, $line",
        "description": [
            "Error handler, passes flow over the exception logger with new ErrorException.",
            "@param $num",
            "@param $str",
            "@param $file",
            "@param $line",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "my_exception_handler": {
        "name": "my_exception_handler",
        "params": "Exception $e",
        "description": [
            "Uncaught exception handler.",
            "@param Exception $e"
        ],
        "fieldtexts": []
    },
    "base_error_handler": {
        "name": "base_error_handler",
        "params": "$error, $message, $file, $line, $backtrace",
        "description": [
            "@param $error",
            "@param $message",
            "@param $file",
            "@param $line",
            "@param $backtrace"
        ],
        "fieldtexts": []
    },
    "common_error_handler": {
        "name": "common_error_handler",
        "params": "$error, $message, $file, $line",
        "description": [
            "@param $error",
            "@param $message",
            "@param $file",
            "@param $line"
        ],
        "fieldtexts": []
    },
    "shutdown_fatal_check": {
        "name": "shutdown_fatal_check",
        "params": "",
        "description": [
            "Checks for a fatal error, work around for set_error_handler not working on fatal errors."
        ],
        "fieldtexts": []
    },
    "register_event": {
        "name": "register_event",
        "params": "$event, $function, $module = 'default'",
        "description": [
            "Internal Unexposed Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Events",
            "register_event()",
            "@param mixed $event",
            "@param mixed $function",
            "@param string $module",
            "@return void"
        ],
        "fieldtexts": []
    },
    "register_service_data": {
        "name": "register_service_data",
        "params": "$module, $field, $name, $value",
        "description": [
            "register_service_data()",
            "@param string $module",
            "@param string $field",
            "@param string $name",
            "@param mixed $value",
            "@return void"
        ],
        "fieldtexts": []
    },
    "run_event": {
        "name": "run_event",
        "params": "$event, $args = false, $module = 'default', $section = false",
        "description": [
            "@param mixed  $event",
            "@param mixed  $args",
            "@param string $module",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_custid": {
        "name": "set_custid",
        "params": "$custid",
        "description": [
            "Sets the websites custid",
            "@param int $custid the new custid",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "setCustid": {
        "name": "setCustid",
        "params": "$custid",
        "description": [
            "Sets the websites custid",
            "@param int $custid the new custid",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "ensure_custid": {
        "name": "ensure_custid",
        "params": "",
        "description": [
            "ensures that the custid field is set",
            "@return bool|int the customer id or false if none"
        ],
        "fieldtexts": []
    },
    "update_set_vars": {
        "name": "update_set_vars",
        "params": "",
        "description": [
            "updates the set variables first populating with defaults hten if paassed sets the value and populates it in setr_vars",
            "@return bool whether or not anything was set via form submission"
        ],
        "fieldtexts": []
    },
    "prepare_validations": {
        "name": "prepare_validations",
        "params": "",
        "description": [
            "prepares the validation by populating the variables and initializing the continue flag",
            "@return void\t *"
        ],
        "fieldtexts": []
    },
    "process_validations": {
        "name": "process_validations",
        "params": "",
        "description": [
            "processes all the fields validating them and updating the overall form continue flag.",
            "it also keeps track of any errors and their corrisponding fields.",
            "@return void"
        ],
        "fieldtexts": []
    },
    "validate_order": {
        "name": "validate_order",
        "params": "",
        "description": [
            "validates the vps order parameters"
        ],
        "fieldtexts": []
    },
    "error": {
        "name": "error",
        "params": "$line, $file, $s",
        "description": [
            "generates and logs a system error",
            "@param mixed $line",
            "@param mixed $file",
            "@param mixed $s",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_field_validations": {
        "name": "add_field_validations",
        "params": "$field, $validations",
        "description": [
            "adds validations to the given field",
            "@param string $field name of the field to associate these validations with",
            "@param array $validations an array of validations to apply"
        ],
        "fieldtexts": []
    },
    "add_validations": {
        "name": "add_validations",
        "params": "$validations",
        "description": [
            "adds validations for multiple fields",
            "@param array $validations an array with each element containing a $field => $validations  where $validations is an array of validations to apply and $field is the field name"
        ],
        "fieldtexts": []
    },
    "add_input_type_field": {
        "name": "add_input_type_field",
        "params": "$field, $input_type, $data = false",
        "description": [
            "adds an input type field into the array of input types",
            "@param string $field the field name",
            "@param string $input_type the input type to use for the field",
            "@param array|bool|false $data optional data to use along with the input type"
        ],
        "fieldtexts": []
    },
    "add_input_type_fields": {
        "name": "add_input_type_fields",
        "params": "$fields",
        "description": [
            "directs adds an array of input types",
            "@param mixed $fields"
        ],
        "fieldtexts": []
    },
    "add_field": {
        "name": "add_field",
        "params": "$text = '&nbsp;', $align = 'd'",
        "description": [
            "Adds a column to a table",
            "@param string $text html or text to add",
            "@param string $align optional parameter to add alignment, @see set_align for list of aligments",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_fields": {
        "name": "add_fields",
        "params": "$fields",
        "description": [
            "adds multiple fields to the system",
            "@param array $fields an array of fields to add"
        ],
        "fieldtexts": []
    },
    "set_default": {
        "name": "set_default",
        "params": "$field, $value",
        "description": [
            "sets the default value for a field",
            "@param string $field the field name to set the default value of",
            "@param string $value the default value for the field",
            "@return $this"
        ],
        "fieldtexts": []
    },
    "set_defaults": {
        "name": "set_defaults",
        "params": "$defaults",
        "description": [
            "sets default values for multiple fields",
            "@param array $defaults an array of    field => value",
            "@return $this"
        ],
        "fieldtexts": []
    },
    "set_label": {
        "name": "set_label",
        "params": "$field, $label",
        "description": [
            "sets the label for a field",
            "@param string $field field name",
            "@param string $label label to apply to the field",
            "@return $this"
        ],
        "fieldtexts": []
    },
    "set_labels": {
        "name": "set_labels",
        "params": "$labels",
        "description": [
            "sets the labels for an array of fields",
            "@param array $labels array with elements in the form of  field => label",
            "@return $this"
        ],
        "fieldtexts": []
    },
    "get_label": {
        "name": "get_label",
        "params": "$field",
        "description": [
            "alias function for label()",
            "@param string $field field to get the label for",
            "@return string the label"
        ],
        "fieldtexts": []
    },
    "label": {
        "name": "label",
        "params": "$field",
        "description": [
            "gets the label for a field",
            "@param string $field field to get the label for",
            "@return string the label"
        ],
        "fieldtexts": []
    },
    "make_form_manager_dropdown": {
        "name": "make_form_manager_dropdown",
        "params": "$label, $field, $values, $labels, $current, $options = false",
        "description": [
            "jFormer \/ Form related functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Forms",
            "@param string   $label",
            "@param string     $field",
            "@param array     $values",
            "@param array     $labels",
            "@param string     $current",
            "@param bool|array $options",
            "@return \\JFormComponentDropDown"
        ],
        "fieldtexts": []
    },
    "get_jformer_forms": {
        "name": "get_jformer_forms",
        "params": "",
        "description": [
            "get_jformer_forms()",
            "@return array"
        ],
        "fieldtexts": []
    },
    "select_customer_form_noajax": {
        "name": "select_customer_form_noajax",
        "params": "$custid = 0, $field = 'custid', $label = 'Customer'",
        "description": [
            "select_customer_form_noajax()",
            "builds a select box component for the customers",
            "@param integer $custid current customer ID, or 0(default) for none selected",
            "@param string $field field name, defaults to custid",
            "@param string $label label, defaults to Customer",
            "@return JFormComponentDropDown"
        ],
        "fieldtexts": []
    },
    "select_customer_form": {
        "name": "select_customer_form",
        "params": "$custid = 0, $field = 'custid', $label = 'Customer', $module = 'default'",
        "description": [
            "select_customer_form()",
            "builds a select box component for the customers",
            "@param integer $custid current customer ID, or 0(default) for none selected",
            "@param string  $field  field name, defaults to custid",
            "@param string  $label  label, defaults to Customer",
            "@param string  $module",
            "@return JFormComponentDropDown"
        ],
        "fieldtexts": []
    },
    "select_customer_form_autocomplete": {
        "name": "select_customer_form_autocomplete",
        "params": "$custid = 0, $field = 'custid', $label = 'Customer', $module = 'default'",
        "description": [
            "select_customer_form_autocomplete()",
            "builds a select box component for the customers",
            "@param integer $custid current customer ID, or 0(default) for none selected",
            "@param string  $field  field name, defaults to custid",
            "@param string  $label  label, defaults to Customer",
            "@param string  $module",
            "@return \\JFormComponentDropDown|\\JFormComponentHtml"
        ],
        "fieldtexts": []
    },
    "select_module_form": {
        "name": "select_module_form",
        "params": "$current = 'default', $field = 'module', $label = 'Module'",
        "description": [
            "select_module_form()",
            "builds a select box component for the module",
            "@param string $current current module or default for default",
            "@param string $field field name, defaults to module",
            "@param string $label label, defaults to Module",
            "@return JFormComponentDropDown"
        ],
        "fieldtexts": []
    },
    "handle_form_response": {
        "name": "handle_form_response",
        "params": "$data",
        "description": [
            "handle_form_response()",
            "parses the form resposne, this is old and being replaced w\/ proper code",
            "@todo replace any code using this with proper calls now that i figured them out\t *",
            "@param mixed $data",
            "@return void|string responds with the string enclosed in its wrapper"
        ],
        "fieldtexts": []
    },
    "handle_post_response": {
        "name": "handle_post_response",
        "params": "$data",
        "description": [
            "handle_post_response()",
            "parses the form resposne, this is old and being replaced w\/ proper code",
            "@todo replace any code using this with proper calls now that i figured them out\t *",
            "@param mixed $data",
            "@return void"
        ],
        "fieldtexts": []
    },
    "loginSubmit": {
        "name": "loginSubmit",
        "params": "$formValues",
        "description": [
            "loginSubmit()",
            "process the login form",
            "@param mixed $formValues",
            "@return array",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "loginForm": {
        "name": "loginForm",
        "params": "",
        "description": [
            "loginForm()",
            "builds the jformer login form",
            "@return void"
        ],
        "fieldtexts": []
    },
    "ftp_string": {
        "name": "ftp_string",
        "params": "$string, $file, $path, $user, $pass, $host, $port = 21",
        "description": [
            "@param $string",
            "@param $file",
            "@param $path",
            "@param $user",
            "@param $pass",
            "@param $host",
            "@param int $port"
        ],
        "fieldtexts": []
    },
    "graph_this_live": {
        "name": "graph_this_live",
        "params": "$datasets, $title",
        "description": [
            "graph_this_live()",
            "@param mixed $datasets",
            "@param mixed $title",
            "@return void"
        ],
        "fieldtexts": []
    },
    "graph_this": {
        "name": "graph_this",
        "params": "",
        "description": [
            "graph_this()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "admin_tickets": {
        "name": "admin_tickets",
        "params": "",
        "description": [
            "Ticket Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Tickets",
            "admin tickets"
        ],
        "fieldtexts": []
    },
    "contact2": {
        "name": "contact2",
        "params": "",
        "description": [
            "Ticket Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Tickets",
            "contact()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException",
            "@throws \\kyException"
        ],
        "fieldtexts": []
    },
    "contact": {
        "name": "contact",
        "params": "",
        "description": [
            "Ticket Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Tickets",
            "contact()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "create_ky_ticket": {
        "name": "create_ky_ticket",
        "params": "$email, $subject, $body, $name = '', $user_ip = '', $root_password = '', $sudo_user = '', $sudo_pass = '', $ssh_port = '22', $kyDepartment = 'General'",
        "description": [
            "creates a kayako ticket",
            "@param string $email",
            "@param string $subject ticket subject",
            "@param string $body body of the ticket",
            "@param string $name ticket creator name",
            "@param string $user_ip customfield value",
            "@param string $root_password customfield value - a plain text needs and encryption will be done here",
            "@param string $sudo_user customfield value",
            "@param string $sudo_pass customfield value - a plain text needs and encryption will be done here",
            "@param integer $ssh_port customfield value",
            "@throws exception",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "create_ticket": {
        "name": "create_ticket",
        "params": "$user_email, $body, $subject, $notes = []",
        "description": [
            "creates a ticket in the system",
            "@param string $user_email",
            "@param string $body",
            "@param string $subject",
            "@param array $notes optional array of notes to add",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "list_ticket": {
        "name": "list_ticket",
        "params": "",
        "description": [
            "Ticket Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Tickets",
            "list_ticket()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "list_tickets_admin": {
        "name": "list_tickets_admin",
        "params": "$return = false, $custid = false",
        "description": [
            "Ticket Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Tickets",
            "list_tickets_admin()",
            "@param bool $return",
            "@param bool $custid",
            "@return string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "list_tickets": {
        "name": "list_tickets",
        "params": "$return = false, $custid = false, $limit = false, $req_sour = false",
        "description": [
            "Ticket Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Tickets",
            "list_tickets()",
            "@param bool $return",
            "@param bool $custid",
            "@param bool $limit",
            "@return string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "list_tickets_widget": {
        "name": "list_tickets_widget",
        "params": "",
        "description": [
            "Ticket Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Tickets",
            "list_tickets_widget()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "ticket_box_auth": {
        "name": "ticket_box_auth",
        "params": "",
        "description": [
            "Ticket Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Tickets",
            "gets a decrypted pass for a ticket and forwards it to the user",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "xml2array1": {
        "name": "xml2array1",
        "params": "$xmlObject, $out = []",
        "description": [
            "@param $xmlObject",
            "@param array $out",
            "@return array"
        ],
        "fieldtexts": []
    },
    "ticket_dashboard": {
        "name": "ticket_dashboard",
        "params": "",
        "description": [
            "Ticket Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Tickets",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "ticket_decrypt_pass": {
        "name": "ticket_decrypt_pass",
        "params": "",
        "description": [
            "Ticket Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Tickets",
            "gets a decrypted pass for a ticket and forwards it to the user",
            "@return void"
        ],
        "fieldtexts": []
    },
    "ticket_department_all": {
        "name": "ticket_department_all",
        "params": "",
        "description": [
            "gets all the ticket departments",
            "@return kyResultSet"
        ],
        "fieldtexts": []
    },
    "ticket_priority_all": {
        "name": "ticket_priority_all",
        "params": "",
        "description": [
            "gets all the ticket ticketprioritys",
            "@return kyResultSet"
        ],
        "fieldtexts": []
    },
    "tickets_list": {
        "name": "tickets_list",
        "params": "",
        "description": [
            "lists a clients tickets",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "ticket_status_all": {
        "name": "ticket_status_all",
        "params": "",
        "description": [
            "gets all the ticket ticketstatuss",
            "@return kyResultSet"
        ],
        "fieldtexts": []
    },
    "ticket_type_all": {
        "name": "ticket_type_all",
        "params": "",
        "description": [
            "gets all the ticket tickettypes",
            "@return kyResultSet"
        ],
        "fieldtexts": []
    },
    "get_history_table": {
        "name": "get_history_table",
        "params": "$section",
        "description": [
            "@param $section",
            "@return string"
        ],
        "fieldtexts": []
    },
    "change": {
        "name": "change",
        "params": "$id, $data, $log = 'history_log'",
        "description": [
            "@param $id",
            "@param $data",
            "@param string $log",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "home": {
        "name": "home",
        "params": "",
        "description": [
            "Home Page",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Menu",
            "home()",
            "renders the home page.",
            "sidemenu differences",
            "false",
            "vertical menu is built",
            "menu is wrapped in a movable window",
            "adds extra tickers and widgets to the output",
            "true",
            "menu is horizontal or vertical based on MENU_ORIENTATION",
            "menu is stationary",
            "@internal param bool $sidemenu whether or not this is the side menu",
            "@return void"
        ],
        "fieldtexts": []
    },
    "preInstall": {
        "name": "preInstall",
        "params": "Event $event",
        "description": [
            "Class Installer",
            "@package Detain\\MyAdmin",
            "class Installer",
            "{",
            "@param \\Detain\\MyAdmin\\Event $event",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "postInstall": {
        "name": "postInstall",
        "params": "Event $event",
        "description": [
            "@param \\Detain\\MyAdmin\\Event $event"
        ],
        "fieldtexts": []
    },
    "postPackageInstall": {
        "name": "postPackageInstall",
        "params": "Event $event",
        "description": [
            "@param \\Detain\\MyAdmin\\Event $event"
        ],
        "fieldtexts": []
    },
    "setup_test_environment": {
        "name": "setup_test_environment",
        "params": "Event $event",
        "description": [
            "@param \\Detain\\MyAdmin\\Event $event"
        ],
        "fieldtexts": []
    },
    "csrf": {
        "name": "csrf",
        "params": "$name, $onetime = true",
        "description": [
            "Generates a CSRF token and adds it as a hidden value to the form.",
            "@param string $name unique name for this form",
            "@param bool $onetime (default: true) whether or not this is a one time use csrf toke",
            "@return string the csrf token value"
        ],
        "fieldtexts": []
    },
    "ensure_shell_paths": {
        "name": "ensure_shell_paths",
        "params": "$paths",
        "description": [
            "@param $paths",
            "@return string"
        ],
        "fieldtexts": []
    },
    "parse_query": {
        "name": "parse_query",
        "params": "$var",
        "description": [
            "parse_query()",
            "parses a URL into an array of elements that would be the GET",
            "variables",
            "<code>",
            "print_r(parse_query('http:\/\/my.interserver.net\/admin\/index.php?choice=none.view_domain&id=371757&sessionid=8ff9d14e4df43eef751887e792bbfd96'));",
            "<\/code>",
            "Example Output:",
            "array(",
            "'choice' => 'none.view_domain',",
            "'id' => 371757,",
            "'sessionid' => '8ff9d14e4df43eef751887e792bbfd96'",
            ")",
            "@param string $var the URL to parse into elements",
            "@return array array of URL elements in an associated array"
        ],
        "fieldtexts": []
    },
    "iframe_safe_redirect": {
        "name": "iframe_safe_redirect",
        "params": "$url",
        "description": [
            "Use this function to parse out the query array element from",
            "the output of parse_url().",
            "\t$var = parse_url($var, PHP_URL_QUERY);",
            "\t$var = html_entity_decode($var);",
            "\t$var = explode('&', $var);",
            "\t$arr = [];",
            "\tforeach ($var as $val) {",
            "\t\t$x = explode('=', $val);",
            "\t\t$arr[$x[0]] = $x[1];",
            "\t}",
            "\tunset($val, $x, $val);",
            "\treturn $arr;",
            "}",
            "@param $url"
        ],
        "fieldtexts": []
    },
    "get_misha_username": {
        "name": "get_misha_username",
        "params": "",
        "description": [
            "returns the first part of of the currently logged in users email address, like account john@doe.com would return john",
            "@return string the first part of the currently logged in users email address."
        ],
        "fieldtexts": []
    },
    "misha_auth": {
        "name": "misha_auth",
        "params": "",
        "description": [
            "uses Basic Authentication to validate a user and create a session.  this is specificly used by the",
            "misha site but should work on other things.",
            "@return void"
        ],
        "fieldtexts": []
    },
    "data_wizard_grid_gui": {
        "name": "data_wizard_grid_gui",
        "params": "",
        "description": [
            "Data Wizard Grid GUI",
            "Quickly build styled interactive paginated tables\/grids from an SQL query, function call, or array.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package DataWizardGridGUI",
            "@category Rendering"
        ],
        "fieldtexts": []
    },
    "set_is_admin_callback": {
        "name": "set_is_admin_callback",
        "params": "$setting",
        "description": [
            "@param $setting"
        ],
        "fieldtexts": []
    },
    "is_admin": {
        "name": "is_admin",
        "params": "",
        "description": [
            "returns whether or not you are logged in as an administrator",
            "@return bool whether or not your logged in as an admin"
        ],
        "fieldtexts": []
    },
    "set_js_replacements": {
        "name": "set_js_replacements",
        "params": "$what, $with",
        "description": [
            "@param $what",
            "@param $with"
        ],
        "fieldtexts": []
    },
    "set_query_replacements": {
        "name": "set_query_replacements",
        "params": "$what, $with",
        "description": [
            "@param $what",
            "@param $with"
        ],
        "fieldtexts": []
    },
    "set_form_submit_location": {
        "name": "set_form_submit_location",
        "params": "$uri",
        "description": [
            "@param $uri"
        ],
        "fieldtexts": []
    },
    "set_output_callback": {
        "name": "set_output_callback",
        "params": "$function",
        "description": [
            "@param $function"
        ],
        "fieldtexts": []
    },
    "output": {
        "name": "output",
        "params": "$what",
        "description": [
            "@param $what"
        ],
        "fieldtexts": []
    },
    "form_find_all": {
        "name": "form_find_all",
        "params": "",
        "description": [
            "JavaScript Related Stuff",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category JS",
            "Search the vendor directory for plugins.",
            "@return array Plugin basename\/info key\/value pairs."
        ],
        "fieldtexts": []
    },
    "gui": {
        "name": "gui",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "add_js": {
        "name": "add_js",
        "params": "$module",
        "description": [
            "JavaScript Related Stuff",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  JS",
            "@param $module",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "form_manager": {
        "name": "form_manager",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_form_data": {
        "name": "get_form_data",
        "params": "$name = ''",
        "description": [
            "@param string $name",
            "@return array|mixed"
        ],
        "fieldtexts": []
    },
    "form_manager_new": {
        "name": "form_manager_new",
        "params": "",
        "description": [
            "this sets some defaults for new forms",
            "\t$form_data = [",
            "\t\t'caption' => ucwords(str_replace('_', ' ', $name)),",
            "\t\t'height' => '100%',",
            "\t\t'rownum' => 10,",
            "\t\t'rowlist' => '10,20,30,50,100',",
            "\t\t'scroll' => 'false',",
            "\t\t'autowidth' => 1,",
            "\t\t'navigatoradd' => 1,",
            "\t\t'navigatoredit' => 1,",
            "\t\t'navigatordel' => 1,",
            "\t\t'navigatorview' => 1,",
            "\t\t'navigatorsearch' => 1",
            "\t];",
            "\t$cols = [];",
            "\tif ($name != '') {",
            "\t\tif (!file_exists(INCLUDE_ROOT . '\/forms\/'.$name.'.json')) {",
            "\t\t\tfile_put_contents(INCLUDE_ROOT . '\/forms\/'.$name.'.json', json_encode($form_data, JSON_PRETTY_PRINT));",
            "\t\t}",
            "\t\tif (file_exists(INCLUDE_ROOT . '\/forms\/'.$name.'.json')) {",
            "\t\t\t$form_data = json_decode(file_get_contents(INCLUDE_ROOT . '\/forms\/'.$name.'.json'), true);",
            "\t\t\t$vars = [",
            "\t\t\t\t'query',",
            "\t\t\t\t'columns',",
            "\t\t\t\t'table',",
            "\t\t\t\t'sortable',",
            "\t\t\t\t'autowidth',",
            "\t\t\t\t'hiddengrid',",
            "\t\t\t\t'caption',",
            "\t\t\t\t'module',",
            "\t\t\t\t'height',",
            "\t\t\t\t'rownum',",
            "\t\t\t\t'rowlist',",
            "\t\t\t\t'scroll',",
            "\t\t\t\t'sortname',",
            "\t\t\t\t'sortorder',",
            "\t\t\t\t'queryfields',",
            "\t\t\t\t'querycustid',",
            "\t\t\t\t'navigatorview',",
            "\t\t\t\t'navigatoradd',",
            "\t\t\t\t'navigatoredit',",
            "\t\t\t\t'navigatordel',",
            "\t\t\t\t'navigatorsearch',",
            "\t\t\t\t'viewbottominfo',",
            "\t\t\t\t'viewheight',",
            "\t\t\t\t'viewwidth',",
            "\t\t\t\t'editrecreateform',",
            "\t\t\t\t'editbeforeshowform',",
            "\t\t\t\t'addrecreateform',",
            "\t\t\t\t'addbeforeshowform',",
            "\t\t\t\t'editbottominfo',",
            "\t\t\t\t'editheight',",
            "\t\t\t\t'editwidth',",
            "\t\t\t\t'addbottominfo',",
            "\t\t\t\t'addheight',",
            "\t\t\t\t'addwidth',",
            "\t\t\t\t'gridcomplete',",
            "\t\t\t\t'recordpos',",
            "\t\t\t\t'multiselect',",
            "\t\t\t\t'treegrid',",
            "\t\t\t\t'treegridmodel',",
            "\t\t\t\t'expandcolumn',",
            "\t\t\t\t'treegridid',",
            "\t\t\t\t'treegridparent',",
            "\t\t\t\t'postdata',",
            "\t\t\t\t'toolbar',",
            "\t\t\t\t'js_extra',",
            "\t\t\t\t'countquery',",
            "\t\t\t\t'countquerycustid',",
            "\t\t\t\t'datasource_type',",
            "\t\t\t\t'loadui',",
            "\t\t\t\t'extra'",
            "\t\t\t];",
            "\t\t\tforeach ($vars as $var) {",
            "\t\t\t\tif (isset($GLOBALS['tf']->variables->request[$var])) {",
            "\t\t\t\t\t$form_data[$var] = $GLOBALS['tf']->variables->request[$var];",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\t$first = false;",
            "\t\t\tif (isset($GLOBALS['tf']->variables->request['query'])) {",
            "\t\t\t\tif ($form_data['cols'][$column]['size'] == '') {",
            "\t\t\t\t\t$form_data['cols'][$column]['size'] = ceil(0.25 * $form_data['cols'][$column]['width']);",
            "\t\t\t\t}",
            "\t\t\t\t$update_defaults = [];",
            "\t\t\t\t\/\/ load columns",
            "\t\t\t\tswitch ($form_data['datasource_type']) {",
            "\t\t\t\t\tcase 'array':",
            "\t\t\t\t\tcase 'function':",
            "\t\t\t\t\t\tif (function_exists($form_data['query'])) {",
            "\t\t\t\t\t\t\t$response = call_user_func($form_data['query']);",
            "\t\t\t\t\t\t\/\/myadmin_log('js', 'info', json_encode($response), __LINE__, __FILE__);",
            "\t\t\t\t\t\t} else {",
            "\t\t\t\t\t\t\tdialog('Invalid', 'Function Doesnt Exist');",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\tbreak;",
            "\t\t\t\t\tcase 'sql':",
            "\t\t\t\t\tdefault:",
            "\t\t\t\t\t\t$dbm = get_module_db($form_data['module']);",
            "\t\t\t\t\t\t$settings = get_module_settings($form_data['module']);",
            "\t\t\t\t\t\t$query = 'select * ' . str_replace(",
            "\t\t\t\t\t\t\t\t[",
            "\t\t\t\t\t\t\t'__TBLNAME__',",
            "\t\t\t\t\t\t\t'__TABLE__',",
            "\t\t\t\t\t\t\t'__PREFIX__',",
            "\t\t\t\t\t\t\t'__TITLE_FIELD__',",
            "\t\t\t\t\t\t\t'__CUSTID__'",
            "\t\t\t\t\t\t\t\t], [",
            "\t\t\t\t\t\t\t$settings['TBLNAME'],",
            "\t\t\t\t\t\t\t$settings['TABLE'],",
            "\t\t\t\t\t\t\t$settings['PREFIX'],",
            "\t\t\t\t\t\t\t$settings['TITLE_FIELD'],",
            "\t\t\t\t\t\t\t$GLOBALS['tf']->session->account_id",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ], $form_data['query']) . ' limit 1';",
            "\t\t\t\t\t\t$dbm->query($query, __LINE__, __FILE__);",
            "\t\t\t\t\t\t$response = [];",
            "\t\t\t\t\t\twhile ($dbm->next_record(MYSQL_ASSOC)) {",
            "\t\t\t\t\t\t\t$response[] = $dbm->Record;",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\tbreak;",
            "\t\t\t\t}",
            "\t\t\t\tif (is_array($response) && is_array($response[0])) {",
            "\t\t\t\t\tforeach (array_keys($response[0]) as $key) {",
            "\t\t\t\t\t\t$cols[] = $key;",
            "\t\t\t\t\t\tforeach (['width'] as $field) {",
            "\t\t\t\t\t\t\tif (!isset($form_data['cols'][$key][$field]) || $form_data['cols'][$key][$field] == '') {",
            "\t\t\t\t\t\t\t\t\/\/add_output('Updating ' . $field . '<br>');",
            "\t\t\t\t\t\t\t\t$update_defaults[] = $field;",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\tif (!isset($form_data['cols'][$key]['sortable']) || $form_data['cols'][$key]['sortable'] == '') {",
            "\t\t\t\t\t\t\t$form_data['cols'][$key]['sortable'] = '1';",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\tif ($form_data['cols'][$key]['description'] == '') {",
            "\t\t\t\t\t\t\t$form_data['cols'][$key]['description'] = ucwords(str_replace('_', ' ', $key));",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t}",
            "\t\t\t\t\t\/\/echo '<pre>' . print_r($update_fields, TRUE) . '<\/pre>';",
            "\t\t\t\t\tif (count($update_defaults) > 0) {",
            "\t\t\t\t\t\tforeach ($response as $idx => $data) {",
            "\t\t\t\t\t\t\tforeach ($data as $key => $value) {",
            "\t\t\t\t\t\t\t\tforeach ($update_defaults as $field) {",
            "\t\t\t\t\t\t\t\t\tswitch ($field) {",
            "\t\t\t\t\t\t\t\t\t\tcase 'width':",
            "\t\t\t\t\t\t\t\t\t\t\t$pixelwidth = strPixels($value);",
            "\t\t\t\t\t\t\t\t\t\t\t\/\/add_output(\"$value is $pixelwidth wide<br>\");",
            "\t\t\t\t\t\t\t\t\t\t\tif (!isset($form_data['cols'][$key][$field]) || $pixelwidth > $form_data['cols'][$key][$field]) {",
            "\t\t\t\t\t\t\t\t\t\t\t\t\/\/add_output(\"setting key $key  field $field   to value $pixelwidth<br>\");",
            "\t\t\t\t\t\t\t\t\t\t\t\t$form_data['cols'][$key][$field] = $pixelwidth;",
            "\t\t\t\t\t\t\t\t\t\t\t\t$GLOBALS['tf']->variables->request[$key . $field] = $pixelwidth;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t}",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\tif ($form_data['columns'] == '') {",
            "\t\t\t\t$form_data['columns'] = implode(',', $cols);",
            "\t\t\t} elseif (count($cols) == 0) {",
            "\t\t\t\t$cols = explode(',', $form_data['columns']);",
            "\t\t\t}",
            "\t\t}",
            "\t}",
            "\t$form_data['cols_array'] = $cols;",
            "\treturn $form_data;",
            "}",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_js": {
        "name": "get_js",
        "params": "$js_one = false",
        "description": [
            "JavaScript Related Stuff",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  JS",
            "@param bool $js_one",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_js_foot": {
        "name": "get_js_foot",
        "params": "",
        "description": [
            "CK Editor Class",
            "\t\t\t\tcase 'ckeditor':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/ckeditor\/ckeditor.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_string('",
            "\/\/CKEDITOR.config.protectedSource.push( \/<\\?[\\s\\S]*?\\?>\/g );   \/\/ PHP Code",
            "\/\/CKEDITOR.config.protectedSource.push( \/<\\\/html[\\s\\S]*?\\>\/g ); \/\/<\/html> tag",
            "\/\/CKEDITOR.config.protectedSource.push( \/<head[\\s\\S]*?\\>\/g );  \/\/ <head> tag",
            "\/\/CKEDITOR.config.protectedSource.push( \/<\\\/head[\\s\\S]*?\\>\/g ); \/\/<\/head> tag",
            "\/\/CKEDITOR.config.protectedSource.push( \/<body[\\s\\S]*?\\>\/g ); \/\/ <body> tag",
            "\/\/CKEDITOR.config.protectedSource.push( \/<\\\/body[\\s\\S]*?\\>\/g ); \/\/<\/body> tag",
            "\/\/CKEDITOR.config.protectedSource.push(\/<style type=\"[\\s\\S]*?\\\">\/g); \/\/<style> tag",
            "\/\/CKEDITOR.config.protectedSource.push( \/<\\\/style[\\s\\S]*?\\>\/g ); \/\/<\/style> tag",
            "\/\/CKEDITOR.config.protectedSource.push( \/\\{[\\s\\S]*?\\}\/g ); \/\/ Smarty {} tags",
            "CKEDITOR.config.allowedContent = true;",
            "\/\/CKEDITOR.config.autoParagraph = false;",
            "\/\/CKEDITOR.config.scayt_autoStartup = true; \/\/ auto spell checking",
            "\/\/CKEDITOR.config.templates_files = [ \"\/mytemplates.js\" ];     \/\/ setup your custom templates file",
            "CKEDITOR.config.pasteFromWordRemoveFontStyles = false;       \/\/ lets you paste from word keeping fonts and stuff",
            "');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'cookie':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jquery.cookie\/jquery.cookie.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'custom-checkbox-radio':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/css\/custom-checkbox-radio.css');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'datatables':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/\/cdn.datatables.net\/1.10.16\/css\/dataTables.bootstrap.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/\/cdn.datatables.net\/1.10.16\/js\/jquery.dataTables.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/\/cdn.datatables.net\/1.10.16\/js\/dataTables.bootstrap.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/\/cdn.datatables.net\/plug-ins\/1.10.16\/dataRender\/datetime.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'dependent-dropdown':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('path\/to\/css\/dependent-dropdown.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('path\/to\/js\/dependent-dropdown.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'echarts':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/echarts\/dist\/echarts-en.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/echarts\/theme\/macarons.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/echarts\/dist\/extension\/dataTool.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/echarts\/dist\/extension\/bmap.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'freetile':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/freetile\/jquery.freetile.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'faviconx':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/faviconx\/faviconx-min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'font-awesome':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/font-awesome\/css\/font-awesome.min.css');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'flot':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/jquery.browser.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/Flot\/examples\/examples.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js('<!--[if IE]><script type=\"text\/javascript\" ' . (WWW_TYPE == 'HTML5' ? '' : 'language=\"javascript\"') . ' src=\"\/lib\/Flot\/excanvas.min.js\"><\/script><![endif]-->');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/Flot\/jquery.flot.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/Flot\/jquery.flot.selection.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/Flot\/jquery.flot.time.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/jquery.flot.tickrotor.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'gridster':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/pwstrength-bootstrap\/dist\/pwstrength-bootstrap.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/dsmorse-gridster\/dist\/jquery.gridster.with-extras.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'handlebars':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/\/cdnjs.cloudflare.com\/ajax\/libs\/handlebars.js\/3.0.3\/handlebars.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'isotope':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/isotope-layout\/dist\/isotope.pkgd.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'imagesloaded':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/imagesloaded\/imagesloaded.pkgd.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'jformer':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/js\/jformer-detain-git\/styles\/jformer.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/jformer-detain-git\/scripts\/jformer-all.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'jpicker':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/jpicker\/jPicker.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/jpicker\/css\/jPicker-1.1.6.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jpicker\/jpicker-1.1.6.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'jquery-tools':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('http:\/\/cdn.jquerytools.org\/1.2.6\/all\/jquery.tools.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'jquery-svg-gauge':",
            "\t\t\t\t\tif (!in_array('raphael', $jsq)) {",
            "\t\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/raphael\/raphael-min.js');",
            "\t\t\t\t\t}",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/bower_components\/jquery-svg-gauge-plugin\/style.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/bower_components\/jquery-svg-gauge-plugin\/script.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'jqgrid':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_string('\/* css for timepicker *\/",
            ".ui-timepicker-div .ui-widget-header{ margin-bottom: 8px; }",
            ".ui-timepicker-div dl{ text-align: left; }",
            ".ui-timepicker-div dl dt{ height: 25px; }",
            ".ui-timepicker-div dl dd{ margin: -25px 0 10px 65px; }",
            ".ui-timepicker-div td { font-size: 90%; }');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/jqGrid\/css\/addons\/ui.multiselect.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/jqGrid\/css\/ui.jqgrid.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/jqGrid\/plugins\/searchFilter.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/jquery-ui-timepicker-addon.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jqGrid\/js\/minified\/i18n\/grid.locale-en.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jqGrid\/js\/addons\/ui.multiselect.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jqGrid\/js\/jquery.jqGrid.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jqGrid\/plugins\/grid.postext.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jqGrid\/plugins\/jquery.tablednd.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jqGrid\/plugins\/jquery.contextmenu.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jqGrid\/plugins\/jquery.searchFilter.js');",
            "\t\t\t\t\tif (!in_array('layout', $jsq)) {",
            "\t\t\t\t\t\t$jsq[] = 'layout';",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'jstree':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jquery.cookie\/jquery.cookie.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jstree\/_lib\/jquery.hotkeys.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jstree\/jquery.jstree.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/jstree\/dist\/themes\/default\/style.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jstree\/dist\/jstree.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'lavalamp':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/jquery\/jquery.lavalamp-1.3.4b2.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'layout':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/jquery.layout\/dist\/layout-default-latest.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jquery.layout\/dist\/jquery.layout-latest-min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'muuri':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/velocity\/velocity.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/hammerjs\/hammer.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/muuri\/muuri.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'modernizr':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/component-modernizr\/modernizr.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'nvd3':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/d3\/build\/d3.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/js\/nvd3\/build\/nv.d3.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/nvd3\/build\/nv.d3.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'prefixfree':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/prefixfree\/prefixfree.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'pwstrength-bootstrap':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/pwstrength-bootstrap\/dist\/pwstrength-bootstrap.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'raphael':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/raphael\/raphael-min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'requirejs':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/requirejs\/require.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'requirecss':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/require-css\/css.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'reset':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/css\/reset.css');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'select2':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/select2\/dist\/css\/select2.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/select2-bootstrap-theme\/dist\/select2-bootstrap.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/select2\/dist\/js\/select2.full.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'selectmenu':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/css\/ui.selectmenu.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_string('\/*-------------------------------- Selectmenu ----------------------------------*\/",
            "a .ui-selectmenu-status span { font-weight: bold; font-size: 12pt; }",
            ".ui-selectmenu-status .ui-selectmenu-item-content { display: none; height: 0; }",
            ".ui-selectmenu a { text-decoration: none;}",
            ".ui-selectmenu { display: block; position:relative; height:1.1em; text-decoration: none; overflow:hidden;}",
            ".ui-selectmenu-icon { position:absolute; right:6px; margin-top:-8px; top: 50%; }",
            ".ui-selectmenu-menu { padding:0; margin:0; list-style:none; position:absolute; top: 0; visibility: hidden; overflow: auto; z-index: 1005;} \/* z-index: 1005 to make selectmenu work with dialog *\/",
            ".ui-selectmenu-open { visibility: visible; }",
            ".ui-selectmenu-menu-popup { margin-top: -1px; z-index:1000 !important;-moz-box-shadow:#000 0 0 18px;-webkit-box-shadow:#000 0 0 18px;box-shadow:#000 0 0 18px; }",
            ".ui-selectmenu-menu-dropdown { }",
            ".ui-selectmenu-menu li { padding:0; margin:0; display: block; border-top: 1px dotted transparent; border-bottom: 1px dotted transparent; border-right-width: 0 !important; border-left-width: 0 !important; font-weight: normal !important; }",
            ".ui-selectmenu-menu li a,.ui-selectmenu-status {line-height: 1.2em; display:block; padding:0px .7em; outline:none; text-decoration:none; }",
            ".ui-selectmenu-menu li.ui-selectmenu-hasIcon a,",
            ".ui-selectmenu-hasIcon .ui-selectmenu-status { padding-left: 20px; position: relative; margin-left: 5px; }",
            ".ui-selectmenu-menu li .ui-icon, .ui-selectmenu-status .ui-icon { position: absolute; top: 1em; margin-top: -8px; left: 0; }",
            ".ui-selectmenu-status { line-height: 1.0em; } *\/",
            ".ui-selectmenu-open li.ui-selectmenu-item-focus a { -moz-border-radius: 14px; -webkit-border-radius: 14px; border-radius: 14px; }",
            ".ui-selectmenu-open li.ui-selectmenu-item-selected { }",
            ".ui-selectmenu-menu li span,.ui-selectmenu-status span { display:block;",
            "height: 16px;",
            "margin-bottom: 0;",
            "margin-bottom: .2em; *\/",
            "white-space: nowrap;",
            "}",
            ".ui-selectmenu-menu li .ui-selectmenu-item-header { font-weight: bold; }",
            ".ui-selectmenu-menu li .ui-selectmenu-item-content { font-size: 14px; }",
            ".ui-selectmenu-menu li .ui-selectmenu-item-footer { opacity: .8; }",
            "for optgroups*\/",
            ".ui-selectmenu-menu .ui-selectmenu-group { font-size: 1em; }",
            ".ui-selectmenu-menu .ui-selectmenu-group .ui-selectmenu-group-label { line-height: 1.0em; display:block; padding:.6em .5em 0; font-weight: bold; }",
            ".ui-selectmenu-menu .ui-selectmenu-group ul { margin: 0; padding: 0; }",
            "');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/jquery.ui.selectmenu.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'smoothscroll':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/smooth-div-scroll\/js\/jquery.mousewheel.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/smooth-div-scroll\/js\/jquery.smoothdivscroll-1.3-min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/smooth-div-scroll\/css\/smoothDivScroll.css');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'sparkline':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/Sparkline\/dist\/jquery.sparkline.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'strtotime':",
            "This function is taken from http:\/\/phpjs.org\/functions\/strtotime *\/",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/strtotime.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'tablesorter':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/tablesorter\/dist\/css\/theme.jui.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/tablesorter\/dist\/css\/theme.blue.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/tablesorter\/dist\/css\/jquery.tablesorter.pager.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_string('",
            ".tablesorter-jui .header, .tablesorter-jui .tablesorter-header {",
            "\tpadding: 3px;",
            "}",
            "table.tablesorter {",
            "\twidth: inherit;",
            "\tmax-width: 95%;",
            "\tmin-width: 50%;",
            "\tmargin:5px 0 5px;",
            "}",
            "table.tablesorter .header {",
            "\tcolor: #3D3D3D;",
            "}",
            "table.tablesorter tbody td {",
            "\twhite-space: nowrap;",
            "}",
            "');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/tablesorter\/dist\/js\/jquery.tablesorter.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/tablesorter\/dist\/js\/jquery.tablesorter.widgets.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/tablesorter\/dist\/js\/extras\/jquery.tablesorter.pager.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'tablesorter_bootstrap':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/tablesorter\/dist\/css\/theme.bootstrap.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_string('",
            "table.tablesorter {",
            "\twidth: inherit;",
            "\tmax-width: 95%;",
            "\tmin-width: 50%;",
            "\tmargin:5px 0 5px;",
            "}",
            "table.tablesorter tbody td {",
            "\twhite-space: nowrap;",
            "}",
            "');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/tablesorter\/dist\/js\/jquery.tablesorter.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/tablesorter\/dist\/js\/jquery.tablesorter.widgets.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/tablesorter\/dist\/css\/jquery.tablesorter.pager.min.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/tablesorter\/dist\/js\/extras\/jquery.tablesorter.pager.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'themeswitcher':",
            "\t\t\t\t\t\/\/$GLOBALS['tf']->add_html_head_js_file('\/jquery\/themeswitchertool.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/Super-Theme-Switcher\/jquery.themeswitcher.min.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_string('",
            "div#switcher a {",
            "\tbackground: none !important;",
            "\tcolor: inherit !important;",
            "\tfont-size: inherit !important;",
            "\tfont-family: inherit !important;",
            "\ttext-decoration: inherit !important;",
            "}",
            "');",
            "\t\t\t\t\t\/\/$GLOBALS['tf']->add_html_head_js_file('\/js\/Super-Theme-Switcher\/jquery.themeswitcher.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'tmpl':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/jquery-tmpl\/jquery.tmpl.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'typeahead.js':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/typeahead.js\/dist\/typeahead.bundle.min.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'vps_bandwidth':",
            "\t\t\t\t\t\/\/$GLOBALS['tf']->add_html_head_js_file('\/lib\/jquery.cookie\/jquery.cookie.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/jquery.cookie.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/js\/bitmeter\/css\/bitmeter.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/js\/bitmeter\/css\/flexigrid.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/js\/bitmeter\/css\/farbtastic.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/js\/bitmeter\/m\/css\/bitmeter_mobile.css');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css('",
            "<!--[if IE]>",
            "\t<link type=\"text\/css\" href=\"js\/bitmeter\/css\/ie.css\" rel=\"stylesheet\" \/>",
            "<![endif]-->",
            "');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_string('",
            "var config = {",
            "\t\"monitorInterval\" : 15000,",
            "\t\"summaryInterval\" : 15000,",
            "\t\"historyInterval\" : 30000,",
            "\t\"monitorIntervalMin\" : 5000,",
            "\t\"monitorIntervalMax\" : 120000,",
            "\t\"historyIntervalMin\" : 15000,",
            "\t\"historyIntervalMax\" : 1200000,",
            "\t\"summaryIntervalMin\" : 5000,",
            "\t\"summaryIntervalMax\" : 1200000,",
            "\t\"binaryUnits\" : \"true\",",
            "\t\"showFilterWarning\" : \"true\",",
            "\t\"dlColour\" : \"#ff0000\",",
            "\t\"ulColour\" : \"#00ff00\",",
            "\t\"allowAdmin\" : 1,",
            "\t\"version\" : \"0.7.4\",",
            "\t\"rssItems\" : 10,",
            "\t\"rssFreq\" : 1,",
            "\t\"rssHost\" : \"\"",
            "};",
            "');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/flexigrid.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/bitmeterModel.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/bitmeterMonitor.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/bitmeterQuery.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/bitmeterHistory.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/bitmeterSummary.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/bitmeterCalc.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/bitmeterAlert.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/bitmeterPrefs.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter\/js\/farbtastic.js');",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/bitmeter.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'whhg':",
            "\t\t\t\tcase 'webhostinghub_glyphs':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_css_file('\/lib\/webhostinghub-glyphs-icons\/css\/whhg.css');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'widgets':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/js\/widgets.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'zxcvbn':",
            "\t\t\t\t\t$GLOBALS['tf']->add_html_head_js_file('\/lib\/zxcvbn\/dist\/zxcvbn.js');",
            "\t\t\t\t\tbreak;",
            "\t\t\t}",
            "\t\t\t\/\/myadmin_log('js', 'info', \"Loaded $js Module, Now \" . mb_strlen($output) . \"Bytes More\", __LINE__, __FILE__);",
            "\t\t}",
            "\t}",
            "\t$output_css = implode(NL, $GLOBALS['tf']->html_head_css) . $output_css;",
            "\t$output = implode(NL, $GLOBALS['tf']->html_head) . $output;",
            "\t$output_js = implode(NL, $GLOBALS['tf']->html_head_js) . $output_js;",
            "\t$GLOBALS['tf']->session->appnocache('extra_js_added', '');",
            "\treturn $output_css . $output . $output_js;",
            "}",
            "@return string"
        ],
        "fieldtexts": []
    },
    "json_search_where": {
        "name": "json_search_where",
        "params": "$s, $form_data",
        "description": [
            "JavaScript Related Stuff",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category JS",
            "json_search_where()",
            "builds a where clause for a search in json",
            "@param string $s JSON encoded string of searches",
            "@param        $form_data",
            "@return string the query string for searching"
        ],
        "fieldtexts": []
    },
    "json_search_tosql": {
        "name": "json_search_tosql",
        "params": "$field, $oper, $val",
        "description": [
            "json_search_tosql()",
            "converts a JSON search request to an sql query.",
            "@todo we need here more advanced checking using the type of the field - i.e. integer, string, float",
            "@param string $field field name",
            "@param string $oper search operation",
            "@param string $val search string",
            "@return string the mysql safe search tag"
        ],
        "fieldtexts": []
    },
    "json_form": {
        "name": "json_form",
        "params": "",
        "description": [
            "Class json_form_response",
            "class json_form_response",
            "{",
            "@var int",
            "\tpublic $page = 0;",
            "@var int",
            "\tpublic $total = 0;",
            "@var int",
            "\tpublic $records = 0;",
            "@var array",
            "\tpublic $rows = [];",
            "}",
            "@return bool|string"
        ],
        "fieldtexts": []
    },
    "innertell_search_query": {
        "name": "innertell_search_query",
        "params": "$module",
        "description": [
            "here we assume that any customer passed is already converted to the proper customer id.",
            "\t\t$custid = (int)$GLOBALS['tf']->variables->request['custid'];",
            "\t\/\/$custid = get_custid($custid, $module);",
            "\t} else {",
            "\t\t$custid = get_custid($GLOBALS['tf']->session->account_id, $module);",
            "\t}",
            "\t$custid_module = $module;",
            "\t$response = new json_form_response;",
            "\tswitch ($form) {",
            "\t\tcase 'whos_online2':",
            "\t\t\tforeach ($modules as $module) {",
            "\t\t\t\t$db = get_module_db($module);",
            "\t\t\t\t$db2 = clone $db;",
            "\t\t\t\t$db->query(\"select count(*) as count $query\", __LINE__, __FILE__);",
            "\t\t\t\t$db->next_record(MYSQL_ASSOC);",
            "\t\t\t\t\/\/print_r($db->Record);",
            "\t\t\t\t$module_counts[$module] = $db->Record['count'];",
            "\t\t\t\t$count += $db->Record['count'];",
            "\t\t\t}",
            "\t\t\tif ($count > 0) {",
            "\t\t\t\t$total_pages = ceil($count \/ $limit);",
            "\t\t\t} else {",
            "\t\t\t\t$total_pages = 0;",
            "\t\t\t}",
            "\t\t\tif ($page > $total_pages) {",
            "\t\t\t\t$page = $total_pages;",
            "\t\t\t}",
            "\t\t\t$start = $limit * $page - $limit; \/\/ do not put $limit*($page - 1)",
            "\t\t\tif ($start <= 0) {",
            "\t\t\t\t$start = 0;",
            "\t\t\t}",
            "\t\t\t$response->page = (int)$page;",
            "\t\t\t$response->total = (int)$total_pages;",
            "\t\t\t$response->records = (int)$count;",
            "\t\t\t$module_offset = 0;",
            "\t\t\tforeach ($modules as $module) {",
            "\t\t\t\t\/\/myadmin_log('js', 'info', \"S:$start  M:$module  MO:$module_offset\", __LINE__, __FILE__);",
            "\t\t\t\tif ($start < $module_offset) {",
            "\t\t\t\t\tcontinue;",
            "\t\t\t\t}",
            "\t\t\t\t$module_offset += $module_counts[$module];",
            "\t\t\t\tif ($start > $module_offset) {",
            "\t\t\t\t\tcontinue;",
            "\t\t\t\t}",
            "\t\t\t\t$db = get_module_db($module);",
            "\t\t\t\t$db2 = clone $db;",
            "\t\t\t\t$tquery = \"select * $query \" . ($sidx != '' ? \"ORDER BY $sidx $sord\" : '');",
            "\t\t\t\tif (!isset($GLOBALS['tf']->variables->request['oper']) || !in_array($GLOBALS['tf']->variables->request['oper'], ['csv'])) {",
            "\t\t\t\t\t$tquery .= \" LIMIT $start , $limit\";",
            "\t\t\t\t}",
            "\t\t\t\t$db->query($tquery, __LINE__, __FILE__);",
            "\t\t\t\t$response->rows = [];",
            "\t\t\t\twhile ($db->next_record(MYSQL_NUM)) {",
            "\t\t\t\t\tswitch ($form) {",
            "\t\t\t\t\t\tcase 'repeat_invoices':",
            "\t\t\t\t\t\t\t$service = '';",
            "\t\t\t\t\t\t\t$db2->query(\"select * from $settings[TABLE] where $settings[PREFIX]_invoice=\" . $db->f(0), __LINE__, __FILE__);",
            "\t\t\t\t\t\t\tif ($db2->num_rows() > 0) {",
            "\t\t\t\t\t\t\t\t$db2->next_record();",
            "\t\t\t\t\t\t\t\t$service = '<a href=\"';",
            "\t\t\t\t\t\t\t\t$service .= $GLOBALS['tf']->link('index.php', 'choice=none.view_' . $settings['PREFIX'] . '&amp;id=' . $db2->Record[$settings['PREFIX'] . '_id']);",
            "\t\t\t\t\t\t\t\t$service .= '\">' . $db2->Record[$settings['TITLE_FIELD']] . '<\/a>';",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\tarray_splice($db->Record, 1, 0, $service);",
            "\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\tcase 'invoices':",
            "\t\t\t\t\t\t\t$service = '';",
            "\t\t\t\t\t\t\tarray_splice($db->Record, 1, 0, $service);",
            "\t\t\t\t\t\t\t$options = '';",
            "\t\t\t\t\t\t\tif ($GLOBALS['tf']->ima == 'admin') {",
            "\t\t\t\t\t\t\t\tif ($db->f(8) == 1) {",
            "\t\t\t\t\t\t\t\t\t$options .= '<a class=\"ui-icon ui-button ui-icon-seek-next\" href=\"' . $GLOBALS['tf']->link('index.php', 'choice=none.process_payment&amp;id='.$db->f(0)).'\" title=\"Post Payment Processing\"><\/a>';",
            "\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t$options = '<div style=\"display: hidden;\" id=\"edit' . $db->f(7) . '\"><\/div>' . $options;",
            "\t\t\t\t\t\t\t\t$options .= '<a class=\"ui-icon ui-button ui-icon-pencil\" href=\"javascript:void(0)\" onClick=\"' . \"if (typeof accounts_list_$module == 'undefined') { var accounts_list_$module = null; } var dialog = jQuery('#edit\" .",
            "\t\t\t\t\t\t\t\t\t$db->f(7) . \"'); var dialogOpts = { title: 'Edit Invoice \" . $db->f(7) . \"', modal: true, autoOpen: false, height:310, width: 500, open: function() { dialog.load('\" . $GLOBALS['tf']->link(URLDIR .",
            "\t\t\t\t\t\t\t\t\t'\/ajax.php', 'choice=none.edit_invoice&module=' . $module . 'ssl&id=' . $db->f(7)) . \"');}}; dialog.dialog(dialogOpts); dialog.dialog('open'); \" . '\" title=\"Edit\"><\/a>';",
            "\t\t\t\t\t\t\t\t$options .= '<a class=\"ui-icon ui-button ui-icon-trash\" style=\"\" href=\"' . $GLOBALS['tf']->link('index.php', 'choice=none.delete_invoice&amp;module=' . $module . '&amp;id=' . $db->f(7)) .",
            "\t\t\t\t\t\t\t\t\t'\" title=\"Delete\"><\/a>';",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t$db->Record[] = $options;",
            "\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t}",
            "\t\t\t\t\t$response->rows[] = ['id' => $db->f(0), 'cell' => $db->Record];",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\t\/\/ multi-module sorting",
            "\t\t\tif (sizeof($modules) > 1) {",
            "\t\t\t\/\/myadmin_log('js', 'info', 'Sorting Response', __LINE__, __FILE__);",
            "\t\t\t\/\/ $sidx is the field name",
            "\t\t\t$cols = explode(',', $form_data['columns']);",
            "\t\t\t\/\/myadmin_log('js', 'info', 'Cols: ' . json_encode($cols), __LINE__, __FILE__);",
            "\t\t\t$GLOBALS['json_cols'] = $cols;",
            "\t\t\t$GLOBALS['json_sidx'] = $sidx;",
            "\t\t\tfunction module_cmp($a, $b) {",
            "\t\t\t$sidx = $GLOBALS['json_sidx'];",
            "\t\t\t$cols = $GLOBALS['json_cols'];",
            "\t\t\t\/\/myadmin_log('js', 'info', \"sidx $sidx cols \" . json_encode($cols), __LINE__, __FILE__);",
            "\t\t\t$pos = array_search($sidx, $cols);",
            "\t\t\tif ($pos !== false) {",
            "\t\t\tif ($a['cell'][$pos] == $b['cell'][$pos])",
            "\t\t\t\treturn 0;",
            "\t\t\treturn ($a['cell'][$pos] < $b['cell'][$pos]) ? -1 : 1;",
            "\t\t\t}",
            "\t\t\treturn 0;",
            "\t\t\t}",
            "\t\t\tfunction module_rcmp($a, $b) {",
            "\t\t\t$sidx = $GLOBALS['json_sidx'];",
            "\t\t\t$cols = $GLOBALS['json_cols'];",
            "\t\t\t\/\/myadmin_log('js', 'info', \"sidx $sidx cols \" . json_encode($cols), __LINE__, __FILE__);",
            "\t\t\t$pos = array_search($sidx, $cols);",
            "\t\t\tif ($pos !== false) {",
            "\t\t\tif ($a['cell'][$pos] == $b['cell'][$pos])",
            "\t\t\t\treturn 0;",
            "\t\t\treturn ($a['cell'][$pos] > $b['cell'][$pos]) ? -1 : 1;",
            "\t\t\t}",
            "\t\t\treturn 0;",
            "\t\t\t}",
            "\t\t\tif ($sord == 'desc') {",
            "\t\t\tusort($response->rows, 'module_rcmp');",
            "\t\t\t} else {",
            "\t\t\tusort($response->rows, 'module_cmp');",
            "\t\t\t}",
            "\t\t\t\/\/myadmin_log('js', 'info', json_encode($response->rows), __LINE__, __FILE__);",
            "\t\t\t}",
            "\t\t\treturn json_encode($response);",
            "\t\t\tbreak;",
            "\t\tdefault:",
            "\t\t\tif (file_exists(INCLUDE_ROOT . '\/forms\/'.$form.'.json')) {",
            "\t\t\t\t$form_data = json_decode(file_get_contents(INCLUDE_ROOT . '\/forms\/'.$form.'.json'), true);",
            "\t\t\t\t$idfields = explode(',', $form_data['columns']);",
            "\t\t\t\t$idfield = array_shift($idfields);",
            "\t\t\t\t$idxfield = 0;",
            "\t\t\t\t$tidx = 0;",
            "\t\t\t\tforeach ($idfields as $tidfield) {",
            "\t\t\t\t\t++$tidx;",
            "\t\t\t\t\tif (isset($form_data['cols'][$tidfield]['key']) && $form_data['cols'][$tidfield]['key'] == 'true') {",
            "\t\t\t\t\t\t$idxfield = $tidx;",
            "\t\t\t\t\t\t$idfield = $tidfield;",
            "\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t}",
            "\t\t\t\t}",
            "\t\t\t\tunset($tidfield);",
            "\t\t\t\tunset($idfields);",
            "\t\t\t\tunset($tidx);",
            "\t\t\t\tif ($form_data['module'] == 'helpdesk') {",
            "\t\t\t\t\t$modules = ['helpdesk'];",
            "\t\t\t\t} elseif ($form_data['module'] == 'powerdns') {",
            "\t\t\t\t\t$modules = ['powerdns'];",
            "\t\t\t\t} elseif ($form_data['module'] == 'pdns') {",
            "\t\t\t\t\t$modules = ['pdns'];",
            "\t\t\t\t} elseif ($form_data['module'] == 'admin') {",
            "\t\t\t\t\t$modules = ['admin'];",
            "\t\t\t\t} elseif ($form_data['module'] == 'all') {",
            "\t\t\t\t\t$modules = array_keys($GLOBALS['modules']);",
            "\t\t\t\t} elseif ($form_data['module'] == 'all,innertell') {",
            "\t\t\t\t\t$modules = array_keys($GLOBALS['modules']);",
            "\t\t\t\t\t$modules[] = 'innertell';",
            "\t\t\t\t} elseif (isset($GLOBALS['modules'][$form_data['module']])) {",
            "\t\t\t\t\t$module = $form_data['module'];",
            "\t\t\t\t\t$modules = [$module];",
            "\t\t\t\t\t$module_counts = [];",
            "\t\t\t\t\t$settings = get_module_settings($module);",
            "\t\t\t\t\t$db = get_module_db($module);",
            "\t\t\t\t\t$db2 = clone $db;",
            "\t\t\t\t} elseif (in_array($form_data['module'], ['innertell', 'innertell2'])) {",
            "\t\t\t\t\t$module = 'innertell';",
            "\t\t\t\t\t$modules = [$module];",
            "\t\t\t\t\t$db = get_module_db($module);",
            "\t\t\t\t\t$db2 = clone $db;",
            "\t\t\t\t}",
            "\t\t\t\t$allowed_sorts = explode(',', strtolower($form_data['columns']));",
            "\t\t\t\tif ($sidx != '' && !in_array(strtolower($sidx), $allowed_sorts)) {",
            "\t\t\t\t\tmyadmin_log('js', 'info', \"$form Invalid Sort Field $sidx\", __LINE__, __FILE__);",
            "\t\t\t\t\t\/\/admin_mail(\"Invalid Sort Field $sidx\", \"Possible Hack Attempt?<br>Someone tried using an order by in the jqgrid tables that did not match what we had in the columns.<br>Passed: $sidx<br>Allowed:\".print_r($allowed_sorts, TRUE).\"<br>Form:$form<br>They were not able to use it, but just giving us a heads up.<br>\");",
            "\t\t\t\t\t$sidx = '';",
            "\t\t\t\t}",
            "\t\t\t\t\/\/myadmin_log('js', 'info', 'Form Data' . json_encode($form_data), __LINE__, __FILE__);",
            "\t\t\t\tif (isset($GLOBALS['tf']->variables->request['oper']) && !in_array($GLOBALS['tf']->variables->request['oper'], ['csv']) && verify_csrf_referrer(__LINE__, __FILE__)) {",
            "\t\t\t\t\tif ($GLOBALS['tf']->ima == 'admin') {",
            "\t\t\t\t\t\tswitch ($GLOBALS['tf']->variables->request['oper']) {",
            "\t\t\t\t\t\t\tcase 'del':",
            "\t\t\t\t\t\t\t\t$vars = $_POST;",
            "\t\t\t\t\t\t\t\t$id = $db->real_escape($vars['id']);",
            "\t\t\t\t\t\t\t\t$query = 'delete from ' . $form_data['table'] . \" where `${idfield}`='{$id}'\";",
            "\t\t\t\t\t\t\t\t$db->query(\"$query\", __LINE__, __FILE__);",
            "\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\tcase 'add':",
            "\t\t\t\t\t\t\t\t$vars = $_POST;",
            "\t\t\t\t\t\t\t\tunset($vars['oper']);",
            "\t\t\t\t\t\t\t\tunset($vars['id']);",
            "\t\t\t\t\t\t\t\t$db->query(make_insert_query($form_data['table'], $vars), __LINE__, __FILE__);",
            "\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\tcase 'edit':",
            "\t\t\t\t\t\t\t\t$vars = $_POST;",
            "\t\t\t\t\t\t\t\tunset($vars['oper']);",
            "\t\t\t\t\t\t\t\t$query = 'update ' . $form_data['table'] . ' set ';",
            "\t\t\t\t\t\t\t\t$id = $db->real_escape($vars['id']);",
            "\t\t\t\t\t\t\t\tunset($vars['id']);",
            "\t\t\t\t\t\t\t\t$updates = [];",
            "\t\t\t\t\t\t\t\t$extra = [];",
            "\t\t\t\t\t\t\t\tforeach ($vars as $key => $value) {",
            "\t\t\t\t\t\t\t\t\tif (preg_match('\/^extra_(.*)$\/', $key, $matches)) {",
            "\t\t\t\t\t\t\t\t\t\t$extra[$matches[1]] = $value;",
            "\t\t\t\t\t\t\t\t\t\tcontinue;",
            "\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t$updates[] = $db->real_escape($key) . \"='\" . $db->real_escape($value) . \"'\";",
            "\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\/\/print_r($extra);",
            "\t\t\t\t\t\t\t\t$query .= implode(', ', $updates) . \" where `${idfield}`='{$id}'\";",
            "\t\t\t\t\t\t\t\t\/\/echo \"query:$query<br>\";",
            "\t\t\t\t\t\t\t\t$db->query(\"$query\", __LINE__, __FILE__);",
            "\t\t\t\t\t\t\t\tif (count($extra) > 0) {",
            "\t\t\t\t\t\t\t\t\t$query = 'select * from ' . $form_data['table'] . \" where `${idfield}`='{$id}'\";",
            "\t\t\t\t\t\t\t\t\t$db->query($query, __LINE__, __FILE__);",
            "\t\t\t\t\t\t\t\t\t$db->next_record(MYSQL_ASSOC);",
            "\t\t\t\t\t\t\t\t\tif ($db->Record['extra'] != '') {",
            "\t\t\t\t\t\t\t\t\t\t$extra = array_merge($extra, myadmin_unstringify($db->Record['extra']));",
            "\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t$query = 'update ' . $form_data['table'] . \" set extra='\" . $db->real_escape(myadmin_stringify($extra)) . \"' where `${idfield}`='{$id}'\";",
            "\t\t\t\t\t\t\t\t\t$db->query($query, __LINE__, __FILE__);",
            "\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t}",
            "\t\t\t\t} else {",
            "\t\t\t\t\tif ($GLOBALS['tf']->ima == 'admin' && !isset($GLOBALS['tf']->variables->request['custid'])) {",
            "\t\t\t\t\t\t$query = $form_data['query'];",
            "\t\t\t\t\t\t$countquery = (isset($form_data['countquery']) ? $form_data['countquery'] : '');",
            "\t\t\t\t\t} else {",
            "\t\t\t\t\t\t\/\/\t\t\t\t\t\t\t$query = str_replace('__CUSTID__', $custid, $form_data['querycustid']);",
            "\t\t\t\t\t\t\/\/\t\t\t\t\t\t\t$countquery = str_replace('__CUSTID__', $custid, $form_data['countquerycustid']);",
            "\t\t\t\t\t\t$query = $form_data['querycustid'];",
            "\t\t\t\t\t\t$countquery = $form_data['countquerycustid'];",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif ($countquery == '') {",
            "\t\t\t\t\t\t$countquery = $query;",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (!isset($GLOBALS['tf']->variables->request['filters']) || (isset($GLOBALS['tf']->variables->request['filters']) && $GLOBALS['tf']->variables->request['filters'] != '') || (isset($GLOBALS['tf']->variables->request['_search']) && $GLOBALS['tf']->variables->request['_search'] == 'true')) {",
            "\t\t\t\t\t\t$search = '';",
            "\t\t\t\t\t\tif (isset($GLOBALS['tf']->variables->request['filters']) && $GLOBALS['tf']->variables->request['filters'] != '') {",
            "\t\t\t\t\t\t\t$searchfilter = $GLOBALS['tf']->variables->request_raw['filters'];",
            "\t\t\t\t\t\t\t$search = json_search_where($searchfilter, $form_data);",
            "\t\t\t\t\t\t} elseif (isset($GLOBALS['tf']->variables->request['_search']) && $GLOBALS['tf']->variables->request['_search'] == 'true') {",
            "\t\t\t\t\t\t\t$searchfilter = json_encode(",
            "\t\t\t\t\t\t\t\t\t[",
            "\t\t\t\t\t\t\t\t\t\t'groupOp' => 'AND', 'rules' => [",
            "\t\t\t\t\t\t\t\t\t\t[",
            "\t\t\t\t\t\t\t\t\t\t\t'field' => $GLOBALS['tf']->variables->request['searchField'],",
            "\t\t\t\t\t\t\t\t\t\t\t'op' => $GLOBALS['tf']->variables->request['searchOper'],",
            "\t\t\t\t\t\t\t\t\t\t\t'data' => $GLOBALS['tf']->variables->request['searchString']",
            "\t\t\t\t\t\t\t\t\t\t]",
            "\t\t\t\t\t\t\t\t\t]",
            "\t\t\t\t\t\t\t\t\t]",
            "\t\t\t\t\t\t\t\t);",
            "\t\t\t\t\t\t\t$search = json_search_where($searchfilter, $form_data);",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\tif ($search != '') {",
            "\t\t\t\t\t\t\tif (preg_match('\/(.*) where (.*)( group by ..*)$\/i', $query, $matches)) {",
            "\t\t\t\t\t\t\t\t$query = $matches[1] . ' where (' . $matches[2] . ') and ' . $search . $matches[3];",
            "\t\t\t\t\t\t\t} elseif (preg_match('\/(.*) where (.*)$\/i', $query, $matches)) {",
            "\t\t\t\t\t\t\t\t$query = $matches[1] . ' where (' . $matches[2] . ') and ' . $search;",
            "\t\t\t\t\t\t\t} else {",
            "\t\t\t\t\t\t\t\t$query = $query . ' where ' . $search;",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\tif (preg_match('\/(.*) where (.*)( group by ..*)$\/i', $countquery, $matches)) {",
            "\t\t\t\t\t\t\t\t$countquery = $matches[1] . ' where (' . $matches[2] . ') and ' . $search . $matches[3];",
            "\t\t\t\t\t\t\t} elseif (preg_match('\/(.*) where (.*)$\/i', $countquery, $matches)) {",
            "\t\t\t\t\t\t\t\t$countquery = $matches[1] . ' where (' . $matches[2] . ') and ' . $search;",
            "\t\t\t\t\t\t\t} else {",
            "\t\t\t\t\t\t\t\t$countquery = $countquery . ' where ' . $search;",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t}",
            "\t\t\t\t\t$count = 0;",
            "\t\t\t\t\t$queryfields = (isset($form_data['queryfields']) ? $form_data['queryfields'] : '');",
            "\t\t\t\t\tif ($queryfields == '') {",
            "\t\t\t\t\t\t$queryfields = '*';",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (isset($form_data['treegridmodel']) && $form_data['treegridmodel'] == 'adjacency') {",
            "\t\t\t\t\t\tif ($form == 'innertell_search' && $_REQUEST['level'] != 2) {",
            "\t\t\t\t\t\t\t$response->page = 1;",
            "\t\t\t\t\t\t\t$response->total = 1;",
            "\t\t\t\t\t\t\t$response->records = 6;",
            "\t\t\t\t\t\t\t$response->rows = [];",
            "\t\t\t\t\t\t\t$response->rows[] = [",
            "\t\t\t\t\t\t\t\t'id' => 'backups', cell => [",
            "\t\t\t\t\t\t\t\t\t'backups',",
            "\t\t\t\t\t\t\t\t\t'Backups',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t''",
            "\t\t\t\t\t\t\t\t]",
            "\t\t\t\t\t\t\t];",
            "\t\t\t\t\t\t\t$response->rows[] = [",
            "\t\t\t\t\t\t\t\t'id' => 'licenses', cell => [",
            "\t\t\t\t\t\t\t\t\t'licenses',",
            "\t\t\t\t\t\t\t\t\t'Licenses',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t''",
            "\t\t\t\t\t\t\t\t]",
            "\t\t\t\t\t\t\t];",
            "\t\t\t\t\t\t\t$response->rows[] = [",
            "\t\t\t\t\t\t\t\t'id' => 'ssl', cell => [",
            "\t\t\t\t\t\t\t\t\t'ssl',",
            "\t\t\t\t\t\t\t\t\t'SSL Certificates',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t''",
            "\t\t\t\t\t\t\t\t]",
            "\t\t\t\t\t\t\t];",
            "\t\t\t\t\t\t\t$response->rows[] = [",
            "\t\t\t\t\t\t\t\t'id' => 'domains', cell => [",
            "\t\t\t\t\t\t\t\t\t'domains',",
            "\t\t\t\t\t\t\t\t\t'Domain Names',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t''",
            "\t\t\t\t\t\t\t\t]",
            "\t\t\t\t\t\t\t];",
            "\t\t\t\t\t\t\t$response->rows[] = [",
            "\t\t\t\t\t\t\t\t'id' => 'vps', cell => [",
            "\t\t\t\t\t\t\t\t\t'vps',",
            "\t\t\t\t\t\t\t\t\t'Virtual Private Servers',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t''",
            "\t\t\t\t\t\t\t\t]",
            "\t\t\t\t\t\t\t];",
            "\t\t\t\t\t\t\t$response->rows[] = [",
            "\t\t\t\t\t\t\t\t'id' => 'innertell', cell => [",
            "\t\t\t\t\t\t\t\t\t'innertell',",
            "\t\t\t\t\t\t\t\t\t'Dedicated Servers',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t''",
            "\t\t\t\t\t\t\t\t]",
            "\t\t\t\t\t\t\t];",
            "\t\t\t\t\t\t\t$response->rows[] = [",
            "\t\t\t\t\t\t\t\t'id' => 'innertell2', cell => [",
            "\t\t\t\t\t\t\t\t\t'innertell2',",
            "\t\t\t\t\t\t\t\t\t'Datacenter Locations',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t'',",
            "\t\t\t\t\t\t\t\t\t''",
            "\t\t\t\t\t\t\t\t]",
            "\t\t\t\t\t\t\t];",
            "\t\t\t\t\t\t\treturn json_encode($response);",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\t$tquery = \"select t1.`{$form_data['treegridid']}` from {$form_data['table']} as t1 left join {$form_data['table']} as t2 on t1.{$form_data['treegridid']}=t2.{$form_data['treegridparent']} where t2.{$form_data['treegridid']} is NULL\";",
            "\t\t\t\t\t\t\/\/echo $query;",
            "\t\t\t\t\t\tif (isset($log_queries) && $log_queries == true) {",
            "\t\t\t\t\t\t\tmyadmin_log('js', 'info', $tquery, __LINE__, __FILE__);",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\t$db->query($tquery, __LINE__, __FILE__);",
            "\t\t\t\t\t\t$leafnodes = [];",
            "\t\t\t\t\t\twhile ($db->next_record(MYSQL_NUM)) {",
            "\t\t\t\t\t\t\t$leafnodes[$db->f(0)] = $db->f(0);",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\t$node = (integer)$_REQUEST['nodeid'];",
            "\t\t\t\t\t\t$n_lvl = (integer)$_REQUEST['n_level'];",
            "\t\t\t\t\t\tif ($node > 0) {",
            "\t\t\t\t\t\t\t$wh = '`' . $form_data['treegridparent'] . '`=' . $node;",
            "\t\t\t\t\t\t\t++$n_lvl;",
            "\t\t\t\t\t\t} else {",
            "\t\t\t\t\t\t\t$wh = $form_data['treegridparent'] . ' is null';",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\t$page = 1;",
            "\t\t\t\t\t\t$total_pages = 1;",
            "\t\t\t\t\t\t$count = 1;",
            "\t\t\t\t\t\tif (preg_match('\/(.*) where (.*)$\/i', $query, $matches)) {",
            "\t\t\t\t\t\t\t$tquery = \"select $queryfields $matches[1] where $wh and ($matches[2]) \" . ($sidx != '' ? \"ORDER BY $sidx $sord\" : '');",
            "\t\t\t\t\t\t\tif (isset($log_queries) && $log_queries == true) {",
            "\t\t\t\t\t\t\t\tmyadmin_log('js', 'info', $tquery, __LINE__, __FILE__);",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t$db->query($tquery, __LINE__, __FILE__);",
            "\t\t\t\t\t\t} else {",
            "\t\t\t\t\t\t\t$tquery = \"select $queryfields $query where $wh \" . ($sidx != '' ? \"ORDER BY $sidx $sord\" : '');",
            "\t\t\t\t\t\t\tif (isset($log_queries) && $log_queries == true) {",
            "\t\t\t\t\t\t\t\tmyadmin_log('js', 'info', $tquery, __LINE__, __FILE__);",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t$db->query($tquery, __LINE__, __FILE__);",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\/\/\t\t\t\t\t\t\techo \"$tquery\";",
            "\t\t\t\t\t\t$response->page = $page;",
            "\t\t\t\t\t\t$response->total = $total_pages;",
            "\t\t\t\t\t\t$response->records = $count;",
            "\t\t\t\t\t\t$response->rows = [];",
            "\t\t\t\t\t\twhile ($db->next_record(MYSQL_NUM)) {",
            "\t\t\t\t\t\t\tif ($form_data['treegridmodel'] == 'adjacency') {",
            "\t\t\t\t\t\t\t\t$db->Record[] = $n_lvl;",
            "\t\t\t\t\t\t\t\t$cols = explode(',', $form_data['columns']);",
            "\t\t\t\t\t\t\t\t$found = false;",
            "\t\t\t\t\t\t\t\t$gridid = -1;",
            "\t\t\t\t\t\t\t\t$gridparent = -1;",
            "\t\t\t\t\t\t\t\tforeach ($cols as $idx => $col) {",
            "\t\t\t\t\t\t\t\t\tif ($col == $form_data['treegridid']) {",
            "\t\t\t\t\t\t\t\t\t\t$gridid = $db->Record[$idx];",
            "\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\tif ($col == $form_data['treegridparent']) {",
            "\t\t\t\t\t\t\t\t\t\t$db->Record[] = $db->Record[$idx];",
            "\t\t\t\t\t\t\t\t\t\t$gridparent = $db->Record[$idx];",
            "\t\t\t\t\t\t\t\t\t\t$found = true;",
            "\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\tif ($gridparent <= 1) {",
            "\t\t\t\t\t\t\t\t\t$db->Record[] = null;",
            "\t\t\t\t\t\t\t\t} else {",
            "\t\t\t\t\t\t\t\t\t$db->Record[] = $gridparent;",
            "\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\tif (isset($leafnodes[$gridid])) {",
            "\t\t\t\t\t\t\t\t\t$db->Record[] = true;",
            "\t\t\t\t\t\t\t\t} else {",
            "\t\t\t\t\t\t\t\t\t$db->Record[] = false;",
            "\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t$db->Record[] = false;",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t$response->rows[] = ['id' => isset($db->Record[$idxfield]) ? $db->Record[$idxfield] : $db->f(0), 'cell' => $db->Record];",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t} elseif (isset($form_data['datasource_type']) && $form_data['datasource_type'] == 'function') {",
            "\t\t\t\t\t\tfunction_requirements($form_data['query']);",
            "\t\t\t\t\t\tif (function_exists($form_data['query'])) {",
            "\t\t\t\t\t\t\t$fresponse = call_user_func($form_data['query']);",
            "\t\t\t\t\t\t} else {",
            "\t\t\t\t\t\t\t$fresponse = [];",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\t$response->page = 1;",
            "\t\t\t\t\t\t$response->total = 1;",
            "\t\t\t\t\t\t$response->records = (string)count($fresponse);",
            "\t\t\t\t\t\t$response->rows = $fresponse;",
            "\t\t\t\t\t} elseif (isset($form_data['datasource_type']) && $form_data['datasource_type'] == 'array') {",
            "\t\t\t\t\t\t$aresponse = $$form_data['query'];",
            "\t\t\t\t\t\t$response->page = 1;",
            "\t\t\t\t\t\t$response->total = 1;",
            "\t\t\t\t\t\t$response->records = (string)count($aresponse);",
            "\t\t\t\t\t\t$response->rows = $aresponse;",
            "\t\t\t\t\t} else {",
            "\t\t\t\t\t\tif ($form == 'innertell_search' && (!isset($_REQUEST['level']) || $_REQUEST['level'] != 2)) {",
            "\t\t\t\t\t\t\t$response->page = 1;",
            "\t\t\t\t\t\t\t$response->total = 1;",
            "\t\t\t\t\t\t\t$response->records = 6;",
            "\t\t\t\t\t\t\t$response->rows = [];",
            "\t\t\t\t\t\t\t$response->rows[] = ['id' => 'backups', 'cell' => ['backups', 'Backups', '', '', '', '']];",
            "\t\t\t\t\t\t\t$response->rows[] = ['id' => 'licenses', 'cell' => ['licenses', 'Licenses', '', '', '', '']];",
            "\t\t\t\t\t\t\t$response->rows[] = ['id' => 'ssl', 'cell' => ['ssl', 'SSL Certificates', '', '', '', '']];",
            "\t\t\t\t\t\t\t$response->rows[] = ['id' => 'domains', 'cell' => ['domains', 'Domain Names', '', '', '', '']];",
            "\t\t\t\t\t\t\t$response->rows[] = ['id' => 'vps', 'cell' => ['vps', 'Virtual Private Servers', '', '', '', '']];",
            "\t\t\t\t\t\t\t$response->rows[] = ['id' => 'innertell', 'cell' => ['innertell', 'Dedicated Servers', '', '', '', '']];",
            "\t\t\t\t\t\t\t$response->rows[] = ['id' => 'innertell2', 'cell' => ['innertell2', 'Datacenter Locations', '', '', '', '']];",
            "\t\t\t\t\t\t\treturn json_encode($response);",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t\t$search = (isset($_REQUEST['search']) ? $_REQUEST['search'] : '');",
            "@param $module",
            "@return array"
        ],
        "fieldtexts": []
    },
    "render_form": {
        "name": "render_form",
        "params": "$form, $config = false",
        "description": [
            "JavaScript Related Stuff",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category JS",
            "render_form()",
            "@param string $form",
            "@param bool|array $config optional array of settings to pass for the form",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_buy_license2_toolbar_options": {
        "name": "get_buy_license2_toolbar_options",
        "params": "",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses"
        ],
        "fieldtexts": []
    },
    "get_buy_license2_services_data": {
        "name": "get_buy_license2_services_data",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_buy_license2_html": {
        "name": "get_buy_license2_html",
        "params": "$post, $service_type, $type, $location, $ip, $ip_owners, $services_data, $toolbar_options, $custid = false, $domains = '', $cpu = '', $os = '', $edition = ''",
        "description": [
            "@param $post",
            "@param $service_type",
            "@param $type",
            "@param $location",
            "@param $ip",
            "@param $ip_owners",
            "@param $services_data",
            "@param $toolbar_options",
            "@param bool $custid",
            "@param string $domains",
            "@param string $cpu",
            "@param string $os",
            "@param string $edition",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_buy_license2_html_row": {
        "name": "get_buy_license2_html_row",
        "params": "$img, $img_data, $cost_text",
        "description": [
            "@param $img",
            "@param $img_data",
            "@param $cost_text",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_buy_license2_html_footer": {
        "name": "get_buy_license2_html_footer",
        "params": "$toolbars, $ip, $coupon",
        "description": [
            "@param $toolbars",
            "@param $ip",
            "@param $coupon",
            "@return string"
        ],
        "fieldtexts": []
    },
    "buy_license2": {
        "name": "buy_license2",
        "params": "$inline = false",
        "description": [
            "@param bool $inline",
            "@return array|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_buy_license_toolbar_options": {
        "name": "get_buy_license_toolbar_options",
        "params": "",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses"
        ],
        "fieldtexts": []
    },
    "get_buy_license_services_data": {
        "name": "get_buy_license_services_data",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_buy_license_html": {
        "name": "get_buy_license_html",
        "params": "$post, $service_type, $type, $location, $ip, $ip_owners, $services_data, $toolbar_options, $custid = false, $domains = '', $cpu = '', $os = '', $edition = ''",
        "description": [
            "@param $post",
            "@param $service_type",
            "@param $type",
            "@param $location",
            "@param $ip",
            "@param $ip_owners",
            "@param $services_data",
            "@param $toolbar_options",
            "@param bool $custid",
            "@param string $domains",
            "@param string $cpu",
            "@param string $os",
            "@param string $edition",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_buy_license_html_row": {
        "name": "get_buy_license_html_row",
        "params": "$img, $img_data, $cost_text",
        "description": [
            "@param $img",
            "@param $img_data",
            "@param $cost_text",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_buy_license_html_footer": {
        "name": "get_buy_license_html_footer",
        "params": "$toolbars, $ip, $coupon",
        "description": [
            "@param $toolbars",
            "@param $ip",
            "@param $coupon",
            "@return string"
        ],
        "fieldtexts": []
    },
    "buy_license": {
        "name": "buy_license",
        "params": "$inline = false",
        "description": [
            "@param bool $inline",
            "@return array|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "slices_select": {
        "name": "slices_select",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "change_license_ip": {
        "name": "change_license_ip",
        "params": "",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "changes the ip address a licenses is registered with",
            "@return bool whether or not it was successful",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "deactivate_license_by_ip": {
        "name": "deactivate_license_by_ip",
        "params": "$ip = false, $category = false",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "deactivate_license_by_ip()",
            "@param bool|string $ip ip address to deactivate",
            "@param bool $category",
            "@return bool whether it was successful or not"
        ],
        "fieldtexts": []
    },
    "get_license_types": {
        "name": "get_license_types",
        "params": "$hide_empty = false",
        "description": [
            "Licenses Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "register_event('get_service_types', 'get_license_types', 'licenses');",
            "register_event('parse_service_extra', 'parse_license_extra', 'licenses');",
            "register_event('verify_activated_services', 'verify_activated_licenses', 'licenses');",
            "get_license_types()",
            "@param bool $hide_empty whether to hide the gaps in service ids",
            "@return array"
        ],
        "fieldtexts": []
    },
    "select_license_type": {
        "name": "select_license_type",
        "params": "$default = 0, $name = 'license'",
        "description": [
            "select_license_type()",
            "@param integer $default",
            "@param string  $name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "parse_license_extra": {
        "name": "parse_license_extra",
        "params": "$license_extra",
        "description": [
            "parse_license_extra()",
            "@param mixed $license_extra",
            "@return array"
        ],
        "fieldtexts": []
    },
    "activate_license": {
        "name": "activate_license",
        "params": "$id",
        "description": [
            "@param $id",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_licenses_internal_to_external_map": {
        "name": "get_licenses_internal_to_external_map",
        "params": "",
        "description": [
            "get a mapping of internal cpanel licenses ids to external ids",
            "@return array returns an array of  Internal ID => External ID"
        ],
        "fieldtexts": []
    },
    "license_change_ip": {
        "name": "license_change_ip",
        "params": "$id, $newip",
        "description": [
            "changes the ip address a licenses is registered with",
            "@param int $id the ID of the License to change",
            "@param string $newip the new IP address to use for the license.",
            "@return array array with status and status_text , status is error if there was an error w\/ a description of it in status_text"
        ],
        "fieldtexts": []
    },
    "verify_activated_licenses": {
        "name": "verify_activated_licenses",
        "params": "$repeatInvoiceId",
        "description": [
            "@param integer $repeatInvoiceId",
            "@return void"
        ],
        "fieldtexts": []
    },
    "unbilled_licenses": {
        "name": "unbilled_licenses",
        "params": "",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "unbilled_licenses()",
            "it basically connects to the various vendors to pull lists of all the licenses",
            "we have from them and then compares them to our various billing systems and",
            "databases to try and match them all up  and determine if they are all being",
            "paid for and report details and offer solutions for the one that are not",
            "@return bool|void",
            "@throws \\Detain\\Cloudlinux\\XmlRpcException",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_licenses_list": {
        "name": "view_licenses_list",
        "params": "",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "view_licenses_list()",
            "@return void",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_license": {
        "name": "view_license",
        "params": "$id = false",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "@param integer|bool $id",
            "@return void",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_licenses": {
        "name": "view_licenses",
        "params": "",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "view_licenses()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "update_session_log": {
        "name": "update_session_log",
        "params": "$function",
        "description": [
            "Internal Unexposed Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Logging",
            "Adds a session log entry after factoring in all the things that should\/should not be included",
            "in the log file.",
            "@param string $function the name of the function your creating an entry for will be stored as the history_type",
            "@return void"
        ],
        "fieldtexts": []
    },
    "referrer_log": {
        "name": "referrer_log",
        "params": "$accountId = false",
        "description": [
            "logs the referrer into our system and then unsets it.",
            "@param bool|false|int $accountId optional parameter specifying the account id this log entry is for.  if not specified or false will use the session account id",
            "@return void"
        ],
        "fieldtexts": []
    },
    "myadmin_log": {
        "name": "myadmin_log",
        "params": "$section, $level, $text, $line = '', $file = '', $tf = true, $calltrace = false",
        "description": [
            "adds to the billingd.log file in the logs directory, this is the basic logging mechanism",
            "@param string         $section   the name of the section to go with these logs",
            "@param string         $level     the log level, can be info(default), debug, notice, warning, error, critical, alert, emergency",
            "@param string         $text      text to log",
            "@param string|integer $line      line number that it was called from",
            "@param string         $file      filename it was called from",
            "@param bool           $tf",
            "@param bool           $calltrace defaults to false, whether ot enalbe logging of oa call trace",
            "@return void",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "request_log": {
        "name": "request_log",
        "params": "$module, $custid = false, $function, $category, $action, $request, $result",
        "description": [
            "@param string $module",
            "@param bool|int $custid",
            "@param string $function",
            "@param string $category",
            "@param string $action",
            "@param mixed $request",
            "@param mixed $result"
        ],
        "fieldtexts": []
    },
    "get_autocomplete_array": {
        "name": "get_autocomplete_array",
        "params": "$limit = false, $json = false",
        "description": [
            "get_autocomplete_array()",
            "@param bool $limit",
            "@param bool $json",
            "@return array|string"
        ],
        "fieldtexts": []
    },
    "get_autocomplete": {
        "name": "get_autocomplete",
        "params": "$name, $value = '', $size = 20, $style = '', $label = ''",
        "description": [
            "get_autocomplete()",
            "@param mixed   $name",
            "@param string  $value",
            "@param integer $size",
            "@param string  $style",
            "@param string  $label",
            "@return string"
        ],
        "fieldtexts": []
    },
    "debugging": {
        "name": "debugging",
        "params": "$line, $file",
        "description": [
            "debugging()",
            "@param mixed $line",
            "@param mixed $file",
            "@return void"
        ],
        "fieldtexts": []
    },
    "debug": {
        "name": "debug",
        "params": "$var",
        "description": [
            "Debugs a String",
            "@param mixed $var variable to debug."
        ],
        "fieldtexts": []
    },
    "_debug_array": {
        "name": "_debug_array",
        "params": "$array, $return = false",
        "description": [
            "This will dump an array contents",
            "_debug_array()",
            "@param array $array",
            "@param bool $return",
            "@return string"
        ],
        "fieldtexts": []
    },
    "_debug_text": {
        "name": "_debug_text",
        "params": "$text",
        "description": [
            "_debug_text()",
            "@param string $text",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_send_errorlog": {
        "name": "_send_errorlog",
        "params": "$text",
        "description": [
            "_send_errorlog()",
            "@param mixed $text",
            "@return void"
        ],
        "fieldtexts": []
    },
    "dialog": {
        "name": "dialog",
        "params": "$title, $text, $return = false, $options = ''",
        "description": [
            "creates a dialog popup box using the {@link http:\/\/jqueryui.com\/demos\/dialog\/ jquery dialog}",
            "@param string $title the title put in the title window of the dialog",
            "@param string $text the text to be in the dialog",
            "@param bool $return defaults to false.   if false will send output via add_output, if true will return the result as a string",
            "@param string $options optional options string to pass to jquery dialog()",
            "@return string"
        ],
        "fieldtexts": []
    },
    "add_output": {
        "name": "add_output",
        "params": "$value",
        "description": [
            "add_output()",
            "@param string $value",
            "@return void"
        ],
        "fieldtexts": []
    },
    "generateCallTrace": {
        "name": "generateCallTrace",
        "params": "$return_array = false",
        "description": [
            "genreates a call trace",
            "@param bool $return_array defaults to false, if true returns an array , otherwise a string",
            "@return string|array string or array of call trace data"
        ],
        "fieldtexts": []
    },
    "logout": {
        "name": "logout",
        "params": "",
        "description": [
            "Logout Function",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Sessions",
            "logs you out of the system and kills the session",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_vat_countries": {
        "name": "get_vat_countries",
        "params": "",
        "description": [
            "Internal Unexposed Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Lookups",
            "gets an array of the countries which use the Vat\/Registration fields, the information was",
            "used from http:\/\/ec.europa.eu\/taxation_customs\/vies\/",
            "Vat No \/ Registration No"
        ],
        "fieldtexts": []
    },
    "get_frequency_name": {
        "name": "get_frequency_name",
        "params": "$frequency",
        "description": [
            "converts a billing interval\/frequency to a text name using special terms where possible",
            "@param int $frequency repeat_invoices_frequency",
            "@return string label like Yearly or 34 Months"
        ],
        "fieldtexts": []
    },
    "get_ima": {
        "name": "get_ima",
        "params": "",
        "description": [
            "Gets the search ima",
            "@return int"
        ],
        "fieldtexts": []
    },
    "days_in_month": {
        "name": "days_in_month",
        "params": "$month = 0",
        "description": [
            "gets the number of days in each month, or a specific month",
            "@param int $month the month (starting at 1) to get the # of days for, or pass 0 or leave blank for all months",
            "@return int|array returns either the # of days in the given month, or an array of days in each month"
        ],
        "fieldtexts": []
    },
    "get_table_id_field": {
        "name": "get_table_id_field",
        "params": "$table",
        "description": [
            "returns the PRIMARY KEY \/ ID field for the given table",
            "@param string $table the name of the table",
            "@return string the field name"
        ],
        "fieldtexts": []
    },
    "get_bad_session_prefixes": {
        "name": "get_bad_session_prefixes",
        "params": "",
        "description": [
            "returns an array of prefixs for fields that might possibly come up during session",
            "logging and if any fo the fields start with any of these prefixs they shoudl be",
            "skipped over when logging.",
            "@return array returns an array of prefix names"
        ],
        "fieldtexts": []
    },
    "get_bad_session_fields": {
        "name": "get_bad_session_fields",
        "params": "",
        "description": [
            "returns an array of field names that might possibly come up druing session logging",
            "and if they do come up they should not be logged",
            "@return array returns an array of field names"
        ],
        "fieldtexts": []
    },
    "check_referrer_log": {
        "name": "check_referrer_log",
        "params": "$custid",
        "description": [
            "Checks if there is a referrer entry entry for the given  customer id and returns it if ther is",
            "@param int $custid the customer id",
            "@return false|array false if there was no entry or an associative array"
        ],
        "fieldtexts": []
    },
    "get_next_pin_number": {
        "name": "get_next_pin_number",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_insert_query_fields_values": {
        "name": "get_insert_query_fields_values",
        "params": "$args",
        "description": [
            "converts the arguments to a list of fields and values , for use with the make_insert_query() function",
            "@param mixed $args associated array of arguments in the format of  field => value",
            "@return false|array false if no arguments, or an array with the first element being an array of fields, the next being an array of values."
        ],
        "fieldtexts": []
    },
    "get_internal_ip_owners": {
        "name": "get_internal_ip_owners",
        "params": "",
        "description": [
            "get_internal_ip_owners()",
            "gets the array of internal ip address blocks",
            "@return array array of internal ip address block owners"
        ],
        "fieldtexts": []
    },
    "get_ip_data": {
        "name": "get_ip_data",
        "params": "$ip",
        "description": [
            "@param $ip",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_ip_owner": {
        "name": "get_ip_owner",
        "params": "$ip",
        "description": [
            "@param $ip",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "get_default_curl_agent": {
        "name": "get_default_curl_agent",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "getcurlpage": {
        "name": "getcurlpage",
        "params": "$url, $postfields = '', $options = ''",
        "description": [
            "getcurlpage()",
            "gets a webpage via curl and returns the response.",
            "also it sets a mozilla type agent.",
            "@param string $url        the url of the page you want",
            "@param string $postfields postfields in the format of \"v1=10&v2=20&v3=30\"",
            "@param string $options",
            "@return string the webpage"
        ],
        "fieldtexts": []
    },
    "get_months": {
        "name": "get_months",
        "params": "",
        "description": [
            "get_months()",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_csrf": {
        "name": "get_csrf",
        "params": "$unique_form_name, $onetime = true",
        "description": [
            "Generates a CSRF Token for a form and stores it in the session.",
            "This code was based on code from:",
            "https:\/\/www.owasp.org\/index.php\/PHP_CSRF_Guard",
            "@param string $unique_form_name the name of the form",
            "@param bool $onetime",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_jformer_csrf": {
        "name": "get_jformer_csrf",
        "params": "$name, $onetime = true",
        "description": [
            "CSRF Token Generation and handling for JFormer class",
            "@param string $name a unique name for this particular form",
            "@param bool $onetime (default: true) whether or not this is a one time use csrf token",
            "@return string the csrf token value"
        ],
        "fieldtexts": []
    },
    "get_bformer_csrf": {
        "name": "get_bformer_csrf",
        "params": "$name, $onetime = true",
        "description": [
            "CSRF Token Generation and handling for BFormer class",
            "@param string $name a unique name for this particular form",
            "@param bool $onetime (default: true) whether or not this is a one time use csrf token",
            "@return string the csrf token value"
        ],
        "fieldtexts": []
    },
    "return_url": {
        "name": "return_url",
        "params": "",
        "description": [],
        "fieldtexts": []
    },
    "get_ip": {
        "name": "get_ip",
        "params": "",
        "description": [
            "Gets the websites ip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "display_timestamp": {
        "name": "display_timestamp",
        "params": "$timestamp, $short = false",
        "description": [
            "display_timestamp()",
            "@param mixed $timestamp",
            "@param bool $short true to strip the hours\/minutes\/seconds from output",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_template_filename": {
        "name": "get_template_filename",
        "params": "$template, $group",
        "description": [
            "get_template_filename()",
            "@param mixed $template",
            "@param mixed $group",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_server_from_ip": {
        "name": "get_server_from_ip",
        "params": "$ip, $debug = false",
        "description": [
            "get_server_from_ip($ip) takes an IP address and tries t match it up to the host servers ip",
            "@param string $ip IP Address to lookup",
            "@param bool $debug defaults to false, optoinally set it to true to get a breakdown of its checks  it went through in determning its result so you can see why if needed",
            "@return false|array returns false if no matching server, or if not false then an array of info about the server"
        ],
        "fieldtexts": []
    },
    "get_common_prefix": {
        "name": "get_common_prefix",
        "params": "$array",
        "description": [
            "finds the common prefix in an array of strings.  ie  from invoices_id, invoices_amount  it would return invoices_",
            "@param array $array array of strings",
            "@return string the common prefix among the strings"
        ],
        "fieldtexts": []
    },
    "get_orm_singular_from_table": {
        "name": "get_orm_singular_from_table",
        "params": "$table",
        "description": [
            "converts a table into the orm singular form of it.  ie repeat_invoice from repeat_invoices",
            "@param string $table the table name",
            "@return string the singular form of the table name"
        ],
        "fieldtexts": []
    },
    "get_orm_class_from_table": {
        "name": "get_orm_class_from_table",
        "params": "$table",
        "description": [
            "converts a table into the orm class name.  ie Repeat_Invoice from repeat_invoices",
            "@param string $table the table name",
            "@return string the class for the table"
        ],
        "fieldtexts": []
    },
    "get_first_name": {
        "name": "get_first_name",
        "params": "",
        "description": [
            "Gets the paypal first_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_last_name": {
        "name": "get_last_name",
        "params": "",
        "description": [
            "Gets the paypal last_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_phone_country_code": {
        "name": "get_phone_country_code",
        "params": "$phone, $country",
        "description": [
            "gets the phone country code prefix for a given phone number and country",
            "@param string $phone the phone number",
            "@param string $country the country in 2 or 3 letter notation",
            "@return string the phone country code"
        ],
        "fieldtexts": []
    },
    "get_phone_no_country_code": {
        "name": "get_phone_no_country_code",
        "params": "$phone, $country",
        "description": [
            "gets the phone number without any country code",
            "@param string $phone the phone number",
            "@param string $country the country in 2 or 3 letter notation",
            "@return string the phone number"
        ],
        "fieldtexts": []
    },
    "get_invoices_email": {
        "name": "get_invoices_email",
        "params": "$data",
        "description": [
            "small wrapper toget_invoice_email()",
            "@param mixed $data same as get_invoice_email() params",
            "@return string email address"
        ],
        "fieldtexts": []
    },
    "get_invoice_email": {
        "name": "get_invoice_email",
        "params": "$data",
        "description": [
            "returns the email address to use for invoicing",
            "@param mixed $data",
            "@return string email address to use"
        ],
        "fieldtexts": []
    },
    "get_email_abuse": {
        "name": "get_email_abuse",
        "params": "$data",
        "description": [
            "returns the email address to use for abuse",
            "@param mixed $data",
            "@return string email address to use"
        ],
        "fieldtexts": []
    },
    "get_admins_to_email": {
        "name": "get_admins_to_email",
        "params": "$template",
        "description": [
            "@param $template",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_default_mail_headers": {
        "name": "get_default_mail_headers",
        "params": "$settings = false",
        "description": [
            "@param bool $settings",
            "@return string"
        ],
        "fieldtexts": []
    },
    "multi_mail": {
        "name": "multi_mail",
        "params": "$to, $subject, $email, $headers = false, $template = '', $settings = false",
        "description": [
            "sends out an email to a client and admins who have the $template notification enabled()",
            "@param string $to",
            "@param string $subject",
            "@param string $email",
            "@param false|string $headers",
            "@param string $template",
            "@param bool $settings",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "admin_mail": {
        "name": "admin_mail",
        "params": "$subject, $email, $headers = false, $who = false, $template = '', $settings = false",
        "description": [
            "sends out an an admin notification email to the admins registered to receive this email",
            "@param string $subject email subject",
            "@param string $email contents of the email",
            "@param string $headers email headers",
            "@param false|string $who optional additional person to send the mail to",
            "@param string $template emali name matched u p with the notification settings for admins",
            "@param bool  $settings optional mail hader settings?",
            "@return void"
        ],
        "fieldtexts": []
    },
    "setSettings": {
        "name": "setSettings",
        "params": "$settings",
        "description": [
            "Sets the reports settings",
            "@param mixed $settings the new settings",
            "@return \\MyAdmin\\Orm\\Report"
        ],
        "fieldtexts": []
    },
    "adminMail": {
        "name": "adminMail",
        "params": "$subject, $email, $headers = false, $who = false, $template = '', $settings = false",
        "description": [
            "wrapper function to match the parameters of the old admin_mail function to switch to utilizing the new Mail class easily",
            "@param string $subject",
            "@param string $email",
            "@param string $headers",
            "@param false|string $who",
            "@param string $template",
            "@param mixed $settings"
        ],
        "fieldtexts": []
    },
    "loadAddress": {
        "name": "loadAddress",
        "params": "$email",
        "description": [
            "loads the address array for a given email address which includes the name",
            "@param string $email",
            "@return array array of email name"
        ],
        "fieldtexts": []
    },
    "loadNotifiable": {
        "name": "loadNotifiable",
        "params": "",
        "description": [
            "loads an array of the admins with email notification settings set and caches the output",
            "@return array"
        ],
        "fieldtexts": []
    },
    "getNotifiable": {
        "name": "getNotifiable",
        "params": "$template = ''",
        "description": [
            "gets a list of email addresses to email based on the $template notification setting",
            "@param string $template the template name",
            "@return array an array of notifiable addresses"
        ],
        "fieldtexts": []
    },
    "build_menu_array": {
        "name": "build_menu_array",
        "params": "$sidemenu = false, $searchbox = true, $menu_template = false",
        "description": [
            "Menu Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Menu",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "use MyAdmin\\Menu;",
            "build_menu_array()",
            "builds the menu array",
            "sidemenu differences",
            "true",
            "Home link is added",
            "@param bool $sidemenu whether or not this is the side menu",
            "@param bool $searchbox whether or not to includ the search or dropdown box , defaults to true",
            "@return array the menu structure"
        ],
        "fieldtexts": []
    },
    "main_menu": {
        "name": "main_menu",
        "params": "$sidemenu = false, $searchbox = true",
        "description": [
            "admin docs are generated from",
            "@link scripts\/update_docs.sh",
            "these menus are generated from",
            "@link files\/phpdocumentor_types.php",
            "\tif ($menu_template === false) {",
            "\t\t$menu_template = MENU_THEME;",
            "\t}",
            "\tif ($sidemenu) {",
            "\t\t$prefix = 'sidemenu';",
            "\t} else {",
            "\t\t$prefix = 'menu';",
            "\t}",
            "\t$boxmenu = false;",
            "\t$db = clone $GLOBALS['tf']->db;",
            "\t$icon_size = 18;",
            "\t$menu = new Menu();",
            "\t$menu->set_template($menu_template);",
            "\tif ($sidemenu) {",
            "\t\t$menu->add_link('main', 'choice=none.home', '', 'Home');",
            "\t}",
            "\tif ($GLOBALS['tf']->ima == 'admin') {",
            "\t\t\/\/$GLOBALS['tf']->add_html_head_css_file('\/images\/myadmin-icons\/css\/styles.css');",
            "\t\tfunction_requirements('has_acl');",
            "\t\t\/\/if (DOMAIN == 'my.interserver.net')",
            "\t\t\/\/{",
            "\t\t\/\/\t$menu->add_menu('main', 'products', 'Products And Services');",
            "\t\t\/\/}",
            "\t\tif (has_acl('refund')) {",
            "\t\t\t$menu->add_link('billing', 'choice=none.custom_invoice', '\/images\/myadmin\/purchase-order.png', 'Invoice A Client');",
            "\t\t}",
            "\t\tif (has_acl('client_billing')) {",
            "\t\t\t$menu->add_link('billing', 'choice=none.add_invoice', '\/images\/myadmin\/bill.png', 'Invoice A Client (Advanced)');",
            "\t\t\t$menu->add_link('bill_err', 'choice=none.zero_billing', '\/images\/myadmin\/fee.png', 'Zero Invoice Services');",
            "\t\t\t$menu->add_link('bill_err', 'choice=none.unbilled_websites', '\/images\/myadmin\/fee.png', 'Unbilled Websites');",
            "\t\t\t$menu->add_link('bill_err', 'choice=none.unbilled_websites2', '\/images\/myadmin\/fee.png', 'Unbilled Websites (Async)');",
            "\t\t\t$menu->add_link('bill_err', 'choice=none.find_unbilled_services', '\/images\/myadmin\/fee.png', 'Find Unbilled Services');",
            "\t\t\t$menu->add_link('bill_err', 'choice=none.billing_error2', '\/images\/myadmin\/fee.png', 'Billing Errors');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.affiliate_map', '\/images\/myadmin\/globe.png', 'Affiliate Traffic Map');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.server_cpu_usage', '\/images\/myadmin\/speed.png', 'Server CPU Usage');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.weekly_sales_by_payment_type', '\/images\/myadmin\/profit.png', 'Weekly Sales by Payment Type');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.weekly_sales_by_module', '\/images\/myadmin\/cashflow.png', 'Weekly Sales by Module');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.monthly_sales_by_payment_type', '\/images\/myadmin\/profit.png', 'Monthly Sales by Payment Type');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.monthly_sales_by_module', '\/images\/myadmin\/cashflow.png', 'Monthly Sales by Module');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.client_country_distribution', '\/images\/myadmin\/doughnut-chart.png', 'Client Country Distribution');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.client_country_sales_over_time', '\/images\/myadmin\/procurement.png', 'Client Country Sales per Year');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.sales_by_country', '\/images\/myadmin\/debt.png', 'Sales By Country');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.client_state_distribution', '\/images\/myadmin\/budget.png', 'American Client State Distribution');",
            "\t\t}",
            "\t\tif (has_acl('view_customer')) {",
            "\t\t\t$menu->add_link('customers', 'choice=none.view_sessions', '\/images\/myadmin\/update-user.png', _('View Sessions'));",
            "\t\t}",
            "\t\tif (has_acl('affiliates')) {",
            "\t\t\t$menu->add_link('billing', 'choice=none.affiliates', '\/images\/myadmin\/debt.png', 'Affiliates');",
            "\t\t\t$menu->add_link('billing', 'choice=none.affiliates1', '\/images\/myadmin\/debt.png', 'Affiliates New');",
            "\t\t}",
            "\t\tif (has_acl('system_config')) {",
            "\t\t\t$menu->add_menu('admin', 'network', 'Network', '\/images\/myadmin\/flow-chart.png');",
            "\t\t\t$menu->add_link('network', 'choice=none.vlan_manager', '\/images\/myadmin\/broadcasting.png', 'VLAN Manager');",
            "\t\t\t$menu->add_link('network', 'choice=none.update_switch_ports', '\/images\/myadmin\/genealogy.png', 'Update Switch Ports');",
            "\t\t\t\/\/$menu->add_link('adminimport', 'choice=none.import_billing', '\/images\/myadmin\/downloading-updates.png', 'Import Billing');",
            "\t\t\t\/\/$menu->add_link('adminimport', 'choice=none.import_billing2', '\/images\/myadmin\/download.png', 'Import Billing (new)');",
            "\t\t\t$menu->add_link('admin', 'choice=none.system_log', '\/images\/myadmin\/inspection.png', 'Billing & System Log');",
            "\t\t}",
            "\t\tif (has_acl('client_billing')) {",
            "\t\t\t$menu->add_menu('billing', 'salesmanager', 'Sales Manager', '\/images\/myadmin\/pos-terminal.png');",
            "\t\t\t$menu->add_link('salesmanager', 'choice=none.sales_manager&action=changestep&step=1&subchoice=loadorder', '\/images\/myadmin\/procurement.png', 'Saved Quotes');",
            "\t\t\t$menu->add_link('salesmanager', 'choice=none.sales_manager&action=changestep&step=1&subchoice=neworder', '\/images\/myadmin\/add-property.png', 'New Quote');",
            "\t\t\t$menu->add_link('salesmanager', 'choice=none.sales_manager', '\/images\/myadmin\/edit-property.png', 'Continue Previous Quote');",
            "\t\t\t$menu->add_link('salesmanager', 'choice=none.product_manager', '\/images\/myadmin\/overview.png', 'Product Manager');",
            "\t\t\t$menu->add_link('billing', 'choice=none.view_invoices', '\/images\/myadmin\/general-ledger.png', 'View All Charges\/Payments');",
            "\t\t\t$menu->add_link('billing', 'choice=none.pending_income', '\/images\/myadmin\/data-pending.png', 'Pending Income');",
            "\t\t\t$menu->add_link('billing', 'choice=none.pending_approval', '\/images\/myadmin\/initiate-money-transfer.png', 'Pending Approval Orders');",
            "\t\t\t\/\/$menu->add_link('billing', 'choice=none.find_by_paypalid', '\/images\/myadmin\/paypal.png', 'Find Customers by Paypal ID');",
            "\t\t\t\/\/$menu->add_link('admin', 'choice=none.removable_services', '\/images\/myadmin\/clear-shopping-cart.png', 'Removable Canceled Services');",
            "\t\t\t\/\/$menu->add_link('billing', 'choice=none.find_unbilled_services', '\/images\/myadmin\/fee.png', 'Find Unbilled Services');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.daily_recap', '\/images\/myadmin\/data-pending.png', 'Daily Recap');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.customer_word_trends', '\/images\/myadmin\/user-groups.png', 'Customer First Name Popularity');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.annual_report', '\/images\/myadmin\/ledger.png', 'Annual Sales Report');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.monitoring_stats', '\/images\/myadmin\/system-task.png', 'Monitoring Stats');",
            "\t\t\t$menu->add_link('bill_stats', 'choice=none.billing_stats2', '\/images\/myadmin\/combo-chart.png', 'NEW <i>ECharts<\/i> Billing Statistics *WIP');",
            "\t\t}",
            "\t\tif (has_acl('devel')) {",
            "\t\t\t$menu->add_link('billing_packages', 'choice=none.packages', '\/images\/myadmin\/shopping-basket.png', 'Packages');",
            "\t\t}",
            "\t\tif (has_acl('view_customer')) {",
            "\t\t\t$menu->add_link('customers', 'choice=none.view_customers', '\/images\/myadmin\/user-groups.png', 'View All Customers');",
            "\t\t}",
            "\t\tif (has_acl('client_billing')) {",
            "\t\t\t$menu->add_link('bill_paypal', 'choice=none.paypal_history', '\/images\/myadmin\/paypal.png', 'PayPal History');",
            "\t\t\t$menu->add_link('bill_paypal', 'choice=none.paypal_transactions', '\/images\/myadmin\/general-ledger.png', 'PayPal Transaction List');",
            "\t\t}",
            "\t\tforeach ($GLOBALS['modules'] as $module => $settings) {",
            "\t\t\tif (in_array($module, ['webhosting', 'licenses'])) {",
            "\t\t\t\t$menu->add_menu('main', $module, $settings['MENUNAME']);",
            "\t\t\t} else {",
            "\t\t\t\t$menu->add_menu('main', $module, $settings['MENUNAME'], $settings['IMGNAME']);",
            "\t\t\t}",
            "\t\t\tswitch ($module) {",
            "\t\t\t\tcase 'domains':",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/domain.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('view_service')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.dns_manager', '\/images\/myadmin\/dns.png', 'DNS Manager');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'backups':",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/network-drive.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.removable_services&module='.$module, '\/images\/myadmin\/clear-shopping-cart.png', 'Removable Cancelled Services');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('view_service')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.backup_locations', '\/images\/myadmin\/flow-chart.png', 'Server Map');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('view_customer')) {",
            "\t\t\t\t\t\t$menu->add_link('customers', 'choice=none.communications&amp;module=backups', '\/images\/myadmin\/group-message.png', 'Backup Client Communications');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (DOMAIN != 'my.interserver.net') {",
            "\t\t\t\t\t\tif (has_acl('view_service')) {",
            "\t\t\t\t\t\t\t$menu->add_link($module, 'choice=none.dns_manager', '\/images\/myadmin\/dns.png', 'DNS Manager');",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'webhosting':",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/website.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.removable_services&module='.$module, '\/images\/myadmin\/clear-shopping-cart.png', 'Removable Cancelled Services');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('view_customer')) {",
            "\t\t\t\t\t\t$menu->add_link('customers', 'choice=none.communications&amp;module='.$module, '\/images\/myadmin\/group-message.png', 'Webhosting Client Communications');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('client_billing')) {",
            "\t\t\t\t\t\t$menu->add_link('bill_stats', 'choice=none.server_billing_stats&amp;module='.$module, '\/images\/myadmin\/stocks.png', ''.$settings['TBLNAME'].' Billing Statistics By Server');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('module_config')) {",
            "\t\t\t\t\t\t$menu->add_link('bill_stats', 'choice=none.activation_stats&amp;module='.$module, '\/images\/myadmin\/statistics.png', ''.$settings['TBLNAME'].' Activations Per Day');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.website_locations', '\/images\/myadmin\/flow-chart.png', 'Server Map');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.unbilled_websites', '\/images\/myadmin\/payment-history.png', 'Unbilled Websites');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('system_config')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.import_master&amp;module='.$module, '\/images\/myadmin\/root-server.png', 'Import Webhosting Server');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'quickservers':",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/server.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.removable_services&module='.$module, '\/images\/myadmin\/clear-shopping-cart.png', 'Removable Cancelled Services');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('view_service')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.qs_vnc_map', '\/images\/myadmin\/restore-window.png', $settings['TBLNAME'].' VNC Server Map');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.qs_raid_status', '\/images\/myadmin\/network-attached-storage.png', $settings['TBLNAME'].' Hosts Raid Status');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.qs_locations', '\/images\/myadmin\/flow-chart.png', 'Server Map');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('system_config')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.import_master&amp;module='.$module, '\/images\/myadmin\/root-server.png', 'Import '.$settings['TBLNAME']);",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'vps':",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/root-server.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.removable_services&module='.$module, '\/images\/myadmin\/clear-shopping-cart.png', 'Removable Cancelled Services');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('client_billing')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.vps_pending_list', '\/images\/myadmin\/data-pending.png', 'View Pending VPSs');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.vps_recent_orders', '\/images\/myadmin\/deposit.png', 'View Recent Orders');",
            "\t\t\t\t\t\t$menu->add_link('bill_stats', 'choice=none.server_billing_stats&amp;module='.$module, '\/images\/myadmin\/stocks.png', ''.$settings['TBLNAME'].' Billing Statistics By Server');",
            "\t\t\t\t\t\t$menu->add_link('bill_stats', 'choice=none.activation_stats&amp;module='.$module, '\/images\/myadmin\/neutral-trading.png', ''.$settings['TBLNAME'].' Activations Per Day');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('view_service')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.vps_raid_status', '\/images\/myadmin\/network-attached-storage.png', 'VPS Hosts Raid Status');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.vps_locations', '\/images\/myadmin\/broadcasting.png', 'Server Map');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.vps_map', '\/images\/myadmin\/flow-chart.png', 'VPS Server Map');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.vps_vnc_map', '\/images\/myadmin\/restore-window.png', 'VNC Server Map');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('view_customer')) {",
            "\t\t\t\t\t\t$menu->add_link('customers', 'choice=none.communications&amp;module=vps', '\/images\/myadmin\/group-message.png', 'VPS Client Communications');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('module_config')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.vps_list_free_ips', '\/images\/myadmin\/web-address.png', 'View Available IPs');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('client_billing')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.vps_stats', '\/images\/myadmin\/futures.png', 'VPS Statistics');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.bandwidth_stats', '\/images\/myadmin\/sine.png', 'VPS Master Hourly Bandwidth Statistics');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.vps_bandwidth_table', '\/images\/myadmin\/view-details.png', 'VPS Bandwidth Table');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (DOMAIN != 'my.interserver.net') {",
            "\t\t\t\t\t\tif (has_acl('view_service')) {",
            "\t\t\t\t\t\t\t$menu->add_link($module, 'choice=none.dns_manager', '\/images\/myadmin\/dns.png', 'DNS Manager');",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('system_config')) {",
            "\t\t\t\t\t\t$menu->add_link('vps', 'choice=none.import_master&amp;module='.$module, '\/images\/myadmin\/root-server.png', 'Import VPS Server');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'licenses':",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/certificate.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('module_config')) {",
            "\t\t\t\t\t\t$menu->add_link('bill_err', 'choice=none.unbilled_licenses', '\/images\/myadmin\/payment-history.png', 'Unbilled Licenses');",
            "\t\t\t\t\t\t$menu->add_menu('licenses', 'licensesapi', 'API', '\/images\/myadmin\/api.png');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'servers':",
            "\t\t\t\t\tif (has_acl('view_service')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/stack.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.assets_list', '\/images\/myadmin\/stack.png', 'View All Assets');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.asset_locations', '\/images\/myadmin\/stack.png', 'Asset Locations');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.asset_racks', '\/images\/myadmin\/stack.png', 'Asset Racks');",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.server_coupons', '\/images\/myadmin\/stack.png', 'Server Coupons');",
            "\t\t\t\t\t\t\/\/$menu->add_link('servers', 'choice=none.view_servers_list_new', '\/images\/myadmin\/server.png', 'Newer Pending Server Orders');",
            "\t\t\t\t\t\t$menu->add_link('servers', 'choice=none.pending_server_orders', '\/images\/myadmin\/data-pending.png', 'Pending Orders');",
            "\t\t\t\t\t\t$menu->add_link('servers', 'choice=none.server_inventory', '\/images\/myadmin\/add-database.png', 'Add New Server');",
            "\t\t\t\t\t\t$menu->add_link('servers', 'choice=none.canceled_server_orders', '\/images\/myadmin\/rollback.png', 'Canceled Servers');",
            "\t\t\t\t\t\t$menu->add_link('servers', 'choice=none.suspended_server_orders', '\/images\/myadmin\/expired.png', 'Suspended Servers');",
            "\t\t\t\t\t\t$menu->add_link('servers', 'choice=none.apc_setup', '\/images\/myadmin\/hierarchy.png', 'Pending Orders');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.datacenter', '\/images\/myadmin\/brochure.png', 'Datacenter Map');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'ssl':",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/security-ssl.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tdefault:",
            "\t\t\t\t\tif (has_acl('admins_control')) {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/lib\/webhostinghub-glyphs-icons\/icons\/hosting-16\/Black\/icon-managedhosting.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t}",
            "\t\t\tif (has_acl('module_config')) {",
            "\t\t\t\t$menu->add_link('billing_packages', 'choice=none.services_control&amp;module='.$module, '\/images\/myadmin\/work.png', ''.$settings['TBLNAME'].'  Package Management');",
            "\t\t\t}",
            "\t\t\tif (has_acl('client_billing')) {",
            "\t\t\t\t$menu->add_link($module, 'choice=none.view_renewals&amp;module='.$module, '\/images\/myadmin\/environment.png', 'View Active '.$settings['TBLNAME'].'\/Renewals');",
            "\t\t\t\t$menu->add_link('bill_stats', 'choice=none.billing_stats&amp;module='.$module, '\/images\/myadmin\/investment.png', ''.$settings['TBLNAME'].' Billing Statistics');",
            "\t\t\t\t$menu->add_link('billing_coupons', 'choice=none.coupons&amp;module='.$module, '\/images\/myadmin\/coupon.png', ''.$settings['TBLNAME'].' Coupons');",
            "\t\t\t}",
            "\t\t}",
            "\t\t$menu->add_menu('main', 'admin', 'Administration');",
            "\t\t$menu->add_menu('main', 'billing', 'Billing');",
            "\t\t\/\/$menu->add_menu('admin', 'adminimport', 'Import\/Export', '\/images\/myadmin\/available-updates.png');",
            "\t\t$menu->add_menu('billing', 'bill_err', 'Errors', '\/images\/myadmin\/fee.png');",
            "\t\t$menu->add_menu('billing', 'billing_packages', 'Packages', '\/images\/myadmin\/shopping-basket.png');",
            "\t\t$menu->add_menu('billing', 'customers', 'Customers', '\/images\/myadmin\/user-groups.png');",
            "\t\t$menu->add_menu('billing', 'bill_paypal', 'PayPal', '\/images\/myadmin\/paypal.png');",
            "\t\t$menu->add_menu('billing', 'billing_coupons', 'Coupons', '\/images\/myadmin\/coupon.png');",
            "\t\t$menu->add_menu('billing', 'bill_stats', 'Statistics', '\/images\/myadmin\/presentation.png');",
            "\t\tif (has_acl('view_service')) {",
            "\t\t\t$menu->add_link('admin', 'choice=none.monitoring', '\/images\/myadmin\/system-task.png', 'Server Monitoring');",
            "\t\t}",
            "\t\tif (has_acl('system_config')) {",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.configuration', '\/images\/myadmin\/settings.png', 'System Configuration');",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.plugins', '\/images\/myadmin\/input.png', 'Plugins');",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.crontab', '\/images\/myadmin\/hourglass.png', 'Crontab Management');",
            "\t\t}",
            "\t\tif (has_acl('admins_control')) {",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.admins', '\/images\/myadmin\/checked-user-male.png', 'Admin Roles Assignments');",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.admin_rbac', '\/images\/myadmin\/to-do.png', 'Roles and Permissions');",
            "\t\t}",
            "\t\tif (has_acl('system_config')) {",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.form_manager', '\/images\/myadmin\/form.png', 'Form Manager');",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.form_manager_new', '\/images\/myadmin\/form.png', 'Form Manager (new)');",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.stats', '\/images\/myadmin\/presentation.png', 'Statistics Manager');",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.blocked_signup_domains', '\/images\/myadmin\/firewall.png', 'Blocked Signup Domains');",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.blocked_hostname_keywords', '\/images\/myadmin\/whois.png', 'Blocked Hostname Keywords');",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.blocked_payment_emails', '\/images\/myadmin\/fee.png', 'Blocked Payment Emails');",
            "\t\t\t$menu->add_link('adminconfig', 'choice=none.edit_templates', '\/images\/myadmin\/mockup.png', 'Template Editor');",
            "\t\t\t$menu->add_menu('admin', 'adminconfig', 'Configuration', '\/images\/myadmin\/automation.png');",
            "\t\t}",
            "\t\t$menu->add_link('admin', 'choice=none.account_security', '\/images\/myadmin\/web-shield.png', 'Account Security');",
            "\t\tif (has_acl('devel')) {",
            "\t\t\t$menu->add_menu('admin', 'admindevel', 'Developer Links', '\/images\/myadmin\/link.png');",
            "\t\t\t$menu->add_menu('admindevel', 'admindocs', 'Project Documentation', '\/images\/myadmin\/user-manual.png');",
            "\t\t\t$menu->add_external_link('admindevel', 'https:\/\/my.interserver.net\/button_generator.php', '\/images\/myadmin\/html.png', 'Button Generator');",
            "\t\t\t$menu->add_menu('admindevel', 'admindocsecharts', 'ECharts', '\/lib\/echarts\/asset\/logo.png');",
            "\t\t\t$menu->add_link('admindevel', 'choice=none.ui_elements', '\/images\/myadmin\/form.png', 'UI Elements');",
            "\t\t\t$menu->add_external_link('admindevel', 'https:\/\/creation.interserver.net\/trac\/myadmin', '\/images\/myadmin\/checklist.png', 'Project Trac Page');",
            "\t\t\t$menu->add_external_link('admindevel', 'http:\/\/wiki.interserver.net\/index.php\/Todo_list', '\/images\/myadmin\/todo-list.png', 'WIKI Todo List');",
            "\t\t\t$menu->add_external_link('admindocsecharts', '\/lib\/echarts\/doc\/feature-en.html', '\/images\/myadmin\/approval.png', 'Features');",
            "\t\t\t$menu->add_external_link('admindocsecharts', '\/lib\/echarts\/doc\/doc-en.html', '\/images\/myadmin\/user-manual.png', 'API & Docs');",
            "\t\t\t$menu->add_external_link('admindocsecharts', '\/lib\/echarts\/doc\/example-en.html', '\/lib\/echarts\/asset\/logo.png', 'Examples');",
            "\t\t\t$menu->add_external_link('admindocsecharts', '\/lib\/echarts\/doc\/example\/theme.html#-en', '\/images\/myadmin\/change-theme.png', 'Theme Preview');",
            "\t\t\t$menu->add_external_link('admindocsecharts', '\/lib\/echarts\/doc\/example\/themeDesigner.html#-en', '\/images\/myadmin\/change-theme.png', 'Theme Designer');",
            "\t\t\t$menu->add_external_link('admindocsecharts', '\/lib\/echarts\/doc\/start-en.html', '\/images\/myadmin\/task-completed.png', 'Getting Started');",
            "\t\t\t$menu->add_external_link('admindocs', '\/\/devel.interserver.net\/admin\/reports\/coverage\/', '\/images\/myadmin\/user-manual.png', 'Code Coverage');",
            "\t\t\t$menu->add_external_link('admindocs', '\/admin\/docs\/PDFdefaultConverter\/documentation.pdf', '\/images\/myadmin\/user-manual.png', 'PDF Manual');",
            "\t\t\t$menu->add_external_link('admindocs', '\/admin\/docs\/HTMLframesConverter\/earthli', '\/images\/myadmin\/user-manual.png', 'HTML Frames Manual (earthli)');",
            "\t\t\t$menu->add_external_link('admindocs', '\/admin\/docs\/HTMLSmartyConverter\/PHP', '\/images\/myadmin\/user-manual.png', 'HTML Manual (PHP Style)');",
            "\t\t\t$menu->add_external_link('admindocs', '\/admin\/docs\/HTMLframesConverter\/phpedit', '\/images\/myadmin\/user-manual.png', 'HTML frames phpedit');",
            "\t\t\t$menu->add_external_link('admindocs', '\/admin\/docs\/HTMLframesConverter\/DOM\/earthli', '\/images\/myadmin\/user-manual.png', 'HTML frames DOM\/earthli');",
            "\t\t\t$menu->add_external_link('admindocs', '\/admin\/docs\/HTMLSmartyConverter\/HandS', '\/images\/myadmin\/user-manual.png', 'HTML Smarty HandS');",
            "\t\t}",
            "\t\t$menu->add_link('admin', 'choice=none.datacenter_access', '\/images\/myadmin\/find-user-male.png', 'Datacenter Access');",
            "\t\t$menu->add_link('admin', 'choice=none.fpurge', '\/images\/myadmin\/environment.png', 'Purge CloudFlare Cache');",
            "\t\t$menu->add_link('admin', 'choice=none.escalation', '\/images\/myadmin\/assistant.png', 'Escalation');",
            "\t\t$menu->add_link('admin', 'choice=none.holidays', '\/images\/myadmin\/event.png', 'Holidays');",
            "\t\t$menu->add_link('admin', 'choice=none.import_billing', '\/images\/myadmin\/downloading-updates.png', 'Import Billing');",
            "\t\tif (!in_array(DOMAIN, ['misha.interserver.net', 'mymisha.interserver.net'])) {",
            "\t\t\t$menu->add_link('main', 'choice=none.logout', '', 'Logout');",
            "\t\t}",
            "\t\tif ($searchbox == true) {",
            "\t\t\tif (MENU_ORIENTATION == 'horizontal' && $sidemenu == true) {",
            "\t\t\t\t\/\/ $menu->add_html('main', get_autocomplete('search', $GLOBALS['tf']->session->appsession('service'), 10, 'border: 1px solid #C8C8C8; width: 300px;box-sizing: border-box; height:30px; border-bottom-left-radius: 4px; border-top-left-radius: 4px; margin:20px 0 20px px; display: table-cell;line-height: normal;', '<button class=\"btn btn-default\" style=\"background-color: buttonface; border-radius: 0px 5px 5px 0px; font-size: 24px; color: black !important; border: #c8c8c8 1px solid; display: block; margin-top: 20px; padding: 2px;\" type=\"submit\"><span class=\"fa fa-search\"><\/span><\/button>'));",
            "\t\t\t} else {",
            "\t\t\t\t$menu->add_html('main', get_autocomplete('search', $GLOBALS['tf']->session->appsession('service'), 10, 'border: 1px solid #C8C8C8; width: 100%;box-sizing: border-box; border-bottom-left-radius: 4px; border-top-left-radius: 4px; display: table-cell;line-height: normal;', '<button class=\"\" style=\"background-color: buttonface; border-radius: 0px 5px 5px 0px; font-size: 22px; color: black !important; border: #c8c8c8 1px solid; margin-top: 0px; padding: 2px; top: 3px;position: relative; display: table-cell;\" type=\"submit\"><span class=\"fa fa-search\"><\/span><\/button>'));",
            "\t\t\t}",
            "\t\t}",
            "\t} else { \/\/ Ima Not Admin (Client Assumed)",
            "\t\t$menu->add_link('billing', 'choice=none.view_balance', '\/images\/myadmin\/bill.png', 'View Balance');",
            "\t\t$menu->add_link('billing', 'choice=none.view_invoices', '\/images\/myadmin\/general-ledger.png', 'View Invoices');",
            "\t\t$menu->add_link('billing', 'choice=none.affiliate', '\/images\/myadmin\/debt.png', 'Affiliate System');",
            "\t\t$menu->add_link('billingreports', 'choice=none.invoices_report', '\/images\/myadmin\/ledger.png', 'Invoice Report');",
            "\t\t$menu->add_link('billingreports', 'choice=none.view_charges', '\/images\/myadmin\/general-ledger.png', 'View Charges');",
            "\t\t$menu->add_link('billingreports', 'choice=view_charges', '\/images\/myadmin\/general-ledger.png', 'View Charges as PDF', 'pdf.php');",
            "\t\t$menu->add_link('billingreports', 'choice=none.view_payments', '\/images\/myadmin\/ledger.png', 'View Payments');",
            "\t\t$menu->add_link('billingreports', 'choice=view_payments', '\/images\/myadmin\/ledger.png', 'View Payments as PDF', 'pdf.php');",
            "\t\t$menu->add_link('billingreports', 'choice=none.view_payments&amp;limitdays=30', '\/images\/myadmin\/ledger.png', 'View Payments (Last 30 Days)');",
            "\t\t$menu->add_link('billingreports', 'choice=view_payments&amp;limitdays=30', '\/images\/myadmin\/ledger.png', 'View Payments (Last 30 Days) as PDF', 'pdf.php');",
            "\t\t$menu->add_link('billingreports', 'choice=view_payments&amp;limityear='.date('Y'), '\/images\/myadmin\/ledger.png', 'View Payments (This Year) as PDF', 'pdf.php');",
            "\t\tforeach ($GLOBALS['modules'] as $module => $settings) {",
            "\t\t\tif (!in_array($module, ['vps', 'webhosting', 'servers'])) {",
            "\t\t\t\t$menu->add_menu('main', $module, $settings['MENUNAME'], $settings['IMGNAME']);",
            "\t\t\t} elseif (in_array($module, ['servers'])) {",
            "\t\t\t\t$menu->add_menu('main', 'servers', 'Servers', 'menus\/servers.png');",
            "\t\t\t}",
            "\t\t\tswitch ($module) {",
            "\t\t\t\tcase 'domains':",
            "\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/domain.png', 'View '.$settings['TBLNAME']);",
            "\t\t\t\t\t$menu->add_link($module, 'choice=none.dns_manager', '\/images\/myadmin\/dns.png', 'DNS Manager');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'ssl':",
            "\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/security-ssl.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'backups':",
            "\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/network-drive.png', 'View '.$settings['TBLNAME']);",
            "\t\t\t\t\tif (DOMAIN != 'my.interserver.net') {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.dns_manager', '\/images\/myadmin\/dns.png', 'DNS Manager');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'webhosting':",
            "\t\t\t\t\t\/\/$menu->add_link('main', 'choice=none.view_websites_list', '\/images\/myadmin\/website.png', 'Webhosting');",
            "\t\t\t\t\t$menu->add_link('main', 'choice=none.view_websites_list', '', 'Webhosting');",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'servers':",
            "\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/stack.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'quickservers':",
            "\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/server.png', 'View All '.$settings['TBLNAME']);",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'vps':",
            "\t\t\t\t\t\/\/$menu->add_link('main', 'choice=none.view_vps_list', '\/images\/myadmin\/root-server.png', 'VPS');",
            "\t\t\t\t\t$menu->add_link('main', 'choice=none.view_vps_list', '', 'VPS');",
            "\t\t\t\t\tif (DOMAIN != 'my.interserver.net') {",
            "\t\t\t\t\t\t$menu->add_link($module, 'choice=none.dns_manager', '\/images\/myadmin\/dns.png', 'DNS Manager');",
            "\t\t\t\t\t}",
            "\t\t\t\t\tbreak;",
            "\t\t\t\tcase 'licenses':",
            "\t\t\t\t\t$menu->add_link($module, 'choice=none.view_'.$settings['TABLE'].'_list', '\/images\/myadmin\/certificate.png', 'View '.$settings['TBLNAME']);",
            "\t\t\t\t\tbreak;",
            "\t\t\t}",
            "\t\t\tif (!in_array($module, ['vps', 'domains', 'webhosting', 'servers'])) {",
            "\t\t\t\t$menu->add_link($module, 'choice=none.cancel_service&amp;module='.$module, '\/images\/myadmin\/delete.png', 'Cancel '.$settings['TBLNAME']);",
            "\t\t\t\t$menu->add_link($module, 'choice=none.uncancel_service&amp;module='.$module, '\/images\/myadmin\/reset.png', 'Re-Activate '.$settings['TBLNAME']);",
            "\t\t\t}",
            "\t\t}",
            "\t\t$menu->add_menu('main', 'billing', 'Billing');",
            "\t\t$menu->add_link('billing', 'choice=none.update_info', '\/images\/myadmin\/contact.png', 'Update Personal Information');",
            "\t\t$menu->add_link('billing', 'choice=none.account_security', '\/images\/myadmin\/web-shield.png', 'Account Security');",
            "\t\t$menu->add_link('billing', 'choice=none.manage_payment_types', '\/images\/myadmin\/card-payment.png', 'Manage Payment Types');",
            "\t\t\/\/$menu->add_link('billing', 'choice=none.manage_cc', '\/lib\/webhostinghub-glyphs-icons\/icons\/business-32\/Black\/icon-wallet.png', 'Manage Credit Cards (old)');",
            "\t\t$menu->add_link('billing', 'choice=none.change_username', '\/images\/myadmin\/exchange.png', 'Change Username\/Login\/Email');",
            "$menu->add_menu('main', 'monitoring', 'Monitoring');",
            "\t\t$menu->add_link('monitoring', 'choice=none.monitoring', '\/lib\/webhostinghub-glyphs-icons\/icons\/computer&mobile-16\/Black\/icon-monitor.png', 'Server Monitoring');*\/",
            "\t\t$menu->add_link('billing', 'choice=none.prepay_menu', '\/images\/myadmin\/merchant-account.png', 'Pre-Paid Funds \/ Credit');",
            "\t\t$menu->add_menu('billing', 'billingreports', 'Reports', '\/images\/myadmin\/investment.png');",
            "\t\t\/\/$menu->add_link('billing', 'choice=none.billing_date', '\/images\/myadmin\/event.png', 'Set Billing Date');",
            "\t\tif (USE_HELPDESK == true) {",
            "\t\t\t$menu->add_link('main', 'choice=none.tickets_list', '', 'Support');",
            "$menu->add_menu('main', 'support', 'Support');",
            "\t\t\t$menu->add_link('support', 'choice=none.contact', '\/lib\/webhostinghub-glyphs-icons\/icons\/hosting-16\/Black\/icon-support.png', 'Open A Support Ticket');",
            "\t\t\t$menu->add_link('support', 'choice=none.list_tickets&view=all', '\/lib\/webhostinghub-glyphs-icons\/icons\/hosting-16\/Black\/icon-socialnetwork.png', 'List Tickets');",
            "\t\t\t$menu->add_external_link('support', 'http:\/\/forum.interserver.net\/forum\/', '\/lib\/webhostinghub-glyphs-icons\/icons\/communication-16\/Black\/icon-forumsalt.png', 'Community Forums');*\/",
            "\t\t}",
            "\t\t\/\/if ($searchbox == true)",
            "\t\t\/\/$menu->add_html('main', service_select($sidemenu + 1));",
            "\t\t$menu->add_link('main', 'choice=none.logout', '', 'Logout');",
            "\t}",
            "\t$event = new GenericEvent($menu);",
            "\t$GLOBALS['tf']->dispatcher->dispatch('ui.menu', $event);",
            "\treturn $menu->render_header();",
            "}",
            "main_menu()",
            "builds a menu",
            "sidemenu differences",
            "false",
            "vertical menu is built",
            "menu is wrapped in a movable window",
            "adds extra tickers and widgets to the output",
            "true",
            "menu is horizontal or vertical based on MENU_ORIENTATION",
            "menu is stationary",
            "@param bool $sidemenu  whether or not this is the side menu",
            "@param bool $searchbox whether or not to includ the search or dropdown box , defaults to true",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "new_menu_render": {
        "name": "new_menu_render",
        "params": "$menus, $current = 'main'",
        "description": [
            "@param        $menus",
            "@param string $current",
            "@return string",
            "@internal param bool $searchbox whether or not to includ the search or dropdown box , defaults to true"
        ],
        "fieldtexts": []
    },
    "render_header": {
        "name": "render_header",
        "params": "",
        "description": [
            "generates the menu array in the expected format and returns it",
            "@return array the menu array"
        ],
        "fieldtexts": []
    },
    "add_html": {
        "name": "add_html",
        "params": "$category, $html",
        "description": [
            "adds HTML into the menu",
            "@param string $category the menu\/category to add to",
            "@param string $html the HTML to add into the menu"
        ],
        "fieldtexts": []
    },
    "add_link": {
        "name": "add_link",
        "params": "$category, $params, $image, $text, $target = false",
        "description": [
            "adds a internal link to the menu",
            "@param string            $category the menu\/category to add to",
            "@param string            $params   the parameters for the link,  like  choice=none.blah&module=blah",
            "@param string            $image    link image",
            "@param string            $text     text for the link",
            "@param bool|false|string $target   optional page target, if false or unspecified it defaults to the normal page target (usually index.php)"
        ],
        "fieldtexts": []
    },
    "add_external_link": {
        "name": "add_external_link",
        "params": "$category, $url, $image, $text",
        "description": [
            "adds external link to the menu",
            "@param string $category the menu\/category to add to",
            "@param string $url the url of the menu link",
            "@param string $image link image",
            "@param string $text text for the link"
        ],
        "fieldtexts": []
    },
    "add_menu": {
        "name": "add_menu",
        "params": "$parent, $category, $text, $image = ''",
        "description": [
            "adds a new submenu to the menu",
            "@param string $parent the parent menu\/category to add to",
            "@param string $category the menu\/category to add",
            "@param string $text text for the menu",
            "@param string $image link image"
        ],
        "fieldtexts": []
    },
    "get_menu": {
        "name": "get_menu",
        "params": "",
        "description": [
            "gets the current menu"
        ],
        "fieldtexts": []
    },
    "make_menu_link": {
        "name": "make_menu_link",
        "params": "$params = '', $image = '', $text = '', $target = false",
        "description": [
            "creates a menu link",
            "@param string $params the parameters for the link,  like  choice=none.blah&module=blah",
            "@param string $image link image",
            "@param string $text text for the link",
            "@param bool $target false(default) to use the default target location, or specify a url here",
            "@return string the generated html for the link"
        ],
        "fieldtexts": []
    },
    "__mixin_get_property": {
        "name": "__mixin_get_property",
        "params": "$property",
        "description": [
            "@param $property",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "__mixin_set_property": {
        "name": "__mixin_set_property",
        "params": "$property, $value",
        "description": [
            "@param $property",
            "@param $value",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "__mixin_call": {
        "name": "__mixin_call",
        "params": "$method, $value",
        "description": [
            "@param $method",
            "@param $value",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "__mixin_isset": {
        "name": "__mixin_isset",
        "params": "$property",
        "description": [
            "@param $property",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "AddMixin": {
        "name": "AddMixin",
        "params": "$mixin",
        "description": [
            "@param $mixin"
        ],
        "fieldtexts": []
    },
    "__isset": {
        "name": "__isset",
        "params": "$property",
        "description": [
            "@param $property",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "_construct": {
        "name": "_construct",
        "params": "",
        "description": [
            "My Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category My",
            "ok, this class is basically going to be my first attempt at merging the other dbs into a single",
            "entity, so while im still forced to deal with all these different dbs, maybe i can use",
            "this to start merging things into one larger collection and have the class handle the mapping",
            "of everything to the proper site\/db so i dont have to worry about it.",
            "ok first im going to try to load all the services into a single array that maps them to",
            "the various sites\/databases.  in order to pull this off im going to seriously need to start",
            "getting heavy with the O.O.P..",
            "My",
            "@package MyAdmin",
            "@author cpaneldirect",
            "@copyright 2018",
            "@access public",
            "class My",
            "{",
            "\tpublic $serviceTypes = [];",
            "\tpublic $serviceCategories = [];",
            "\tpublic $services = [];",
            "@return void"
        ],
        "fieldtexts": []
    },
    "getId": {
        "name": "getId",
        "params": "",
        "description": [
            "Gets the whitelist id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setId": {
        "name": "setId",
        "params": "$id",
        "description": [
            "sets the service id",
            "@param int $id",
            "@return \\MyAdmin\\Services\\ServiceQueue"
        ],
        "fieldtexts": []
    },
    "get_id": {
        "name": "get_id",
        "params": "",
        "description": [
            "Gets the whitelist id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_id": {
        "name": "set_id",
        "params": "$id",
        "description": [
            "Sets the whitelist id",
            "@param int $id the new id",
            "@return \\MyAdmin\\Orm\\Whitelist"
        ],
        "fieldtexts": []
    },
    "getHeaders": {
        "name": "getHeaders",
        "params": "",
        "description": [
            "Gets the abuse_data headers",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setHeaders": {
        "name": "setHeaders",
        "params": "$headers",
        "description": [
            "Sets the abuse_data headers",
            "@param mixed $headers the new headers",
            "@return \\MyAdmin\\Orm\\Abuse_Data"
        ],
        "fieldtexts": []
    },
    "get_headers": {
        "name": "get_headers",
        "params": "",
        "description": [
            "Gets the abuse_data headers",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_headers": {
        "name": "set_headers",
        "params": "$headers",
        "description": [
            "Sets the abuse_data headers",
            "@param mixed $headers the new headers",
            "@return \\MyAdmin\\Orm\\Abuse_Data"
        ],
        "fieldtexts": []
    },
    "getResponse": {
        "name": "getResponse",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResponse": {
        "name": "setResponse",
        "params": "$response",
        "description": [
            "Sets the abuse_data response",
            "@param mixed $response the new response",
            "@return \\MyAdmin\\Orm\\Abuse_Data"
        ],
        "fieldtexts": []
    },
    "get_response": {
        "name": "get_response",
        "params": "",
        "description": [
            "Gets the abuse_data response",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_response": {
        "name": "set_response",
        "params": "$response",
        "description": [
            "Sets the abuse_data response",
            "@param mixed $response the new response",
            "@return \\MyAdmin\\Orm\\Abuse_Data"
        ],
        "fieldtexts": []
    },
    "getPlainmsg": {
        "name": "getPlainmsg",
        "params": "",
        "description": [
            "Gets the abuse_data plainmsg",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setPlainmsg": {
        "name": "setPlainmsg",
        "params": "$plainmsg",
        "description": [
            "Sets the abuse_data plainmsg",
            "@param mixed $plainmsg the new plainmsg",
            "@return \\MyAdmin\\Orm\\Abuse_Data"
        ],
        "fieldtexts": []
    },
    "get_plainmsg": {
        "name": "get_plainmsg",
        "params": "",
        "description": [
            "Gets the abuse_data plainmsg",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_plainmsg": {
        "name": "set_plainmsg",
        "params": "$plainmsg",
        "description": [
            "Sets the abuse_data plainmsg",
            "@param mixed $plainmsg the new plainmsg",
            "@return \\MyAdmin\\Orm\\Abuse_Data"
        ],
        "fieldtexts": []
    },
    "getHtmlmsg": {
        "name": "getHtmlmsg",
        "params": "",
        "description": [
            "Gets the abuse_data htmlmsg",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setHtmlmsg": {
        "name": "setHtmlmsg",
        "params": "$htmlmsg",
        "description": [
            "Sets the abuse_data htmlmsg",
            "@param mixed $htmlmsg the new htmlmsg",
            "@return \\MyAdmin\\Orm\\Abuse_Data"
        ],
        "fieldtexts": []
    },
    "get_htmlmsg": {
        "name": "get_htmlmsg",
        "params": "",
        "description": [
            "Gets the abuse_data htmlmsg",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_htmlmsg": {
        "name": "set_htmlmsg",
        "params": "$htmlmsg",
        "description": [
            "Sets the abuse_data htmlmsg",
            "@param mixed $htmlmsg the new htmlmsg",
            "@return \\MyAdmin\\Orm\\Abuse_Data"
        ],
        "fieldtexts": []
    },
    "getIp": {
        "name": "getIp",
        "params": "",
        "description": [
            "Gets the websites ip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIp": {
        "name": "setIp",
        "params": "$ip",
        "description": [
            "Sets the websites ip",
            "@param string $ip the new ip",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "set_ip": {
        "name": "set_ip",
        "params": "$ip",
        "description": [
            "Sets the websites ip",
            "@param string $ip the new ip",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getType": {
        "name": "getType",
        "params": "",
        "description": [
            "Gets the websites type",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setType": {
        "name": "setType",
        "params": "$type",
        "description": [
            "Sets the websites type",
            "@param int $type the new type",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "get_type": {
        "name": "get_type",
        "params": "",
        "description": [
            "Gets the websites type",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_type": {
        "name": "set_type",
        "params": "$type",
        "description": [
            "Sets the websites type",
            "@param int $type the new type",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getAmount": {
        "name": "getAmount",
        "params": "",
        "description": [
            "Gets the server_coupons amount",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setAmount": {
        "name": "setAmount",
        "params": "$amount",
        "description": [
            "Sets the server_coupons amount",
            "@param float $amount the new amount",
            "@return \\MyAdmin\\Orm\\Server_Coupon"
        ],
        "fieldtexts": []
    },
    "get_amount": {
        "name": "get_amount",
        "params": "",
        "description": [
            "Gets the server_coupons amount",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_amount": {
        "name": "set_amount",
        "params": "$amount",
        "description": [
            "Sets the server_coupons amount",
            "@param float $amount the new amount",
            "@return \\MyAdmin\\Orm\\Server_Coupon"
        ],
        "fieldtexts": []
    },
    "getTime": {
        "name": "getTime",
        "params": "",
        "description": [
            "Gets the templates time",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTime": {
        "name": "setTime",
        "params": "$time",
        "description": [
            "Sets the templates time",
            "@param string $time the new time",
            "@return \\MyAdmin\\Orm\\Template"
        ],
        "fieldtexts": []
    },
    "get_time": {
        "name": "get_time",
        "params": "",
        "description": [
            "Gets the templates time",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_time": {
        "name": "set_time",
        "params": "$time",
        "description": [
            "Sets the templates time",
            "@param string $time the new time",
            "@return \\MyAdmin\\Orm\\Template"
        ],
        "fieldtexts": []
    },
    "getStatus": {
        "name": "getStatus",
        "params": "",
        "description": [
            "Gets the websites status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setStatus": {
        "name": "setStatus",
        "params": "$status",
        "description": [
            "Sets the websites status",
            "@param string $status the new status",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "get_status": {
        "name": "get_status",
        "params": "",
        "description": [
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_status": {
        "name": "set_status",
        "params": "$status",
        "description": [
            "Sets the websites status",
            "@param string $status the new status",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getLid": {
        "name": "getLid",
        "params": "",
        "description": [
            "Gets the paypal lid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLid": {
        "name": "setLid",
        "params": "$lid",
        "description": [
            "Sets the paypal lid",
            "@param string $lid the new lid",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_lid": {
        "name": "get_lid",
        "params": "",
        "description": [
            "Gets the paypal lid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_lid": {
        "name": "set_lid",
        "params": "$lid",
        "description": [
            "Sets the paypal lid",
            "@param string $lid the new lid",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getSid": {
        "name": "getSid",
        "params": "",
        "description": [
            "Gets the user_log sid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSid": {
        "name": "setSid",
        "params": "$sid",
        "description": [
            "Sets the user_log sid",
            "@param string $sid the new sid",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "get_sid": {
        "name": "get_sid",
        "params": "",
        "description": [
            "Gets the user_log sid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_sid": {
        "name": "set_sid",
        "params": "$sid",
        "description": [
            "Sets the user_log sid",
            "@param string $sid the new sid",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "getOwner": {
        "name": "getOwner",
        "params": "",
        "description": [
            "Gets the user_log owner",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setOwner": {
        "name": "setOwner",
        "params": "$owner",
        "description": [
            "Sets the user_log owner",
            "@param int $owner the new owner",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "get_owner": {
        "name": "get_owner",
        "params": "",
        "description": [
            "Gets the user_log owner",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_owner": {
        "name": "set_owner",
        "params": "$owner",
        "description": [
            "Sets the user_log owner",
            "@param int $owner the new owner",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "getLogin": {
        "name": "getLogin",
        "params": "",
        "description": [
            "Gets the sessions login",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setLogin": {
        "name": "setLogin",
        "params": "$login",
        "description": [
            "Sets the sessions login",
            "@param int $login the new login",
            "@return \\MyAdmin\\Orm\\Session"
        ],
        "fieldtexts": []
    },
    "get_login": {
        "name": "get_login",
        "params": "",
        "description": [
            "Gets the sessions login",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_login": {
        "name": "set_login",
        "params": "$login",
        "description": [
            "Sets the sessions login",
            "@param int $login the new login",
            "@return \\MyAdmin\\Orm\\Session"
        ],
        "fieldtexts": []
    },
    "getLogout": {
        "name": "getLogout",
        "params": "",
        "description": [
            "Gets the access_log logout",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLogout": {
        "name": "setLogout",
        "params": "$logout",
        "description": [
            "Sets the access_log logout",
            "@param string $logout the new logout",
            "@return \\MyAdmin\\Orm\\Access_Log"
        ],
        "fieldtexts": []
    },
    "get_logout": {
        "name": "get_logout",
        "params": "",
        "description": [
            "Gets the access_log logout",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_logout": {
        "name": "set_logout",
        "params": "$logout",
        "description": [
            "Sets the access_log logout",
            "@param string $logout the new logout",
            "@return \\MyAdmin\\Orm\\Access_Log"
        ],
        "fieldtexts": []
    },
    "getIma": {
        "name": "getIma",
        "params": "",
        "description": [
            "Gets the search ima",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setIma": {
        "name": "setIma",
        "params": "$ima",
        "description": [
            "Sets the search ima",
            "@param int $ima the new ima",
            "@return \\MyAdmin\\Orm\\Search"
        ],
        "fieldtexts": []
    },
    "set_ima": {
        "name": "set_ima",
        "params": "$ima",
        "description": [
            "Sets the search ima",
            "@param int $ima the new ima",
            "@return \\MyAdmin\\Orm\\Search"
        ],
        "fieldtexts": []
    },
    "getPasswd": {
        "name": "getPasswd",
        "params": "",
        "description": [
            "Gets the accounts passwd",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPasswd": {
        "name": "setPasswd",
        "params": "$passwd",
        "description": [
            "Sets the accounts passwd",
            "@param string $passwd the new passwd",
            "@return \\MyAdmin\\Orm\\Account"
        ],
        "fieldtexts": []
    },
    "get_passwd": {
        "name": "get_passwd",
        "params": "",
        "description": [
            "Gets the accounts passwd",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_passwd": {
        "name": "set_passwd",
        "params": "$passwd",
        "description": [
            "Sets the accounts passwd",
            "@param string $passwd the new passwd",
            "@return \\MyAdmin\\Orm\\Account"
        ],
        "fieldtexts": []
    },
    "getGroup": {
        "name": "getGroup",
        "params": "",
        "description": [
            "Gets the repeat_invoices group",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setGroup": {
        "name": "setGroup",
        "params": "$group",
        "description": [
            "Sets the repeat_invoices group",
            "@param int $group the new group",
            "@return \\MyAdmin\\Orm\\Repeat_Invoice"
        ],
        "fieldtexts": []
    },
    "set_group": {
        "name": "set_group",
        "params": "$group",
        "description": [
            "Sets the repeat_invoices group",
            "@param int $group the new group",
            "@return \\MyAdmin\\Orm\\Repeat_Invoice"
        ],
        "fieldtexts": []
    },
    "getName": {
        "name": "getName",
        "params": "",
        "description": [
            "Gets the website_masters name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setName": {
        "name": "setName",
        "params": "$name",
        "description": [
            "Sets the website_masters name",
            "@param string $name the new name",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "get_name": {
        "name": "get_name",
        "params": "",
        "description": [
            "Gets the website_masters name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_name": {
        "name": "set_name",
        "params": "$name",
        "description": [
            "Sets the website_masters name",
            "@param string $name the new name",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "getAddress": {
        "name": "getAddress",
        "params": "",
        "description": [
            "Gets the ssl_certs address",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddress": {
        "name": "setAddress",
        "params": "$address",
        "description": [
            "Sets the ssl_certs address",
            "@param string $address the new address",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_address": {
        "name": "get_address",
        "params": "",
        "description": [
            "Gets the ssl_certs address",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address": {
        "name": "set_address",
        "params": "$address",
        "description": [
            "Sets the ssl_certs address",
            "@param string $address the new address",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getCity": {
        "name": "getCity",
        "params": "",
        "description": [
            "Gets the ssl_certs city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCity": {
        "name": "setCity",
        "params": "$city",
        "description": [
            "Sets the ssl_certs city",
            "@param string $city the new city",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_city": {
        "name": "get_city",
        "params": "",
        "description": [
            "Gets the ssl_certs city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_city": {
        "name": "set_city",
        "params": "$city",
        "description": [
            "Sets the ssl_certs city",
            "@param string $city the new city",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getState": {
        "name": "getState",
        "params": "",
        "description": [
            "Gets the ssl_certs state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setState": {
        "name": "setState",
        "params": "$state",
        "description": [
            "Sets the ssl_certs state",
            "@param string $state the new state",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_state": {
        "name": "get_state",
        "params": "",
        "description": [
            "Gets the ssl_certs state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_state": {
        "name": "set_state",
        "params": "$state",
        "description": [
            "Sets the ssl_certs state",
            "@param string $state the new state",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getZip": {
        "name": "getZip",
        "params": "",
        "description": [
            "Gets the ssl_certs zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setZip": {
        "name": "setZip",
        "params": "$zip",
        "description": [
            "Sets the ssl_certs zip",
            "@param string $zip the new zip",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_zip": {
        "name": "get_zip",
        "params": "",
        "description": [
            "Gets the ssl_certs zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_zip": {
        "name": "set_zip",
        "params": "$zip",
        "description": [
            "Sets the ssl_certs zip",
            "@param string $zip the new zip",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getCountry": {
        "name": "getCountry",
        "params": "",
        "description": [
            "Gets the tld_info country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCountry": {
        "name": "setCountry",
        "params": "$country",
        "description": [
            "Sets the tld_info country",
            "@param string $country the new country",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_country": {
        "name": "get_country",
        "params": "",
        "description": [
            "Gets the tld_info country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_country": {
        "name": "set_country",
        "params": "$country",
        "description": [
            "Sets the tld_info country",
            "@param string $country the new country",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getPhone": {
        "name": "getPhone",
        "params": "",
        "description": [
            "Gets the ssl_certs phone",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPhone": {
        "name": "setPhone",
        "params": "$phone",
        "description": [
            "Sets the ssl_certs phone",
            "@param string $phone the new phone",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_phone": {
        "name": "get_phone",
        "params": "",
        "description": [
            "Gets the ssl_certs phone",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_phone": {
        "name": "set_phone",
        "params": "$phone",
        "description": [
            "Sets the ssl_certs phone",
            "@param string $phone the new phone",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getFraudrecordScore": {
        "name": "getFraudrecordScore",
        "params": "",
        "description": [
            "Gets the accounts fraudrecord_score",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setFraudrecordScore": {
        "name": "setFraudrecordScore",
        "params": "$fraudrecord_score",
        "description": [
            "Sets the accounts fraudrecord_score",
            "@param int $fraudrecord_score the new fraudrecord_score",
            "@return \\MyAdmin\\Orm\\Account"
        ],
        "fieldtexts": []
    },
    "get_fraudrecord_score": {
        "name": "get_fraudrecord_score",
        "params": "",
        "description": [
            "Gets the accounts fraudrecord_score",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_fraudrecord_score": {
        "name": "set_fraudrecord_score",
        "params": "$fraudrecord_score",
        "description": [
            "Sets the accounts fraudrecord_score",
            "@param int $fraudrecord_score the new fraudrecord_score",
            "@return \\MyAdmin\\Orm\\Account"
        ],
        "fieldtexts": []
    },
    "getMaxmindRiskscore": {
        "name": "getMaxmindRiskscore",
        "params": "",
        "description": [
            "Gets the accounts maxmind_riskscore",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setMaxmindRiskscore": {
        "name": "setMaxmindRiskscore",
        "params": "$maxmind_riskscore",
        "description": [
            "Sets the accounts maxmind_riskscore",
            "@param float $maxmind_riskscore the new maxmind_riskscore",
            "@return \\MyAdmin\\Orm\\Account"
        ],
        "fieldtexts": []
    },
    "get_maxmind_riskscore": {
        "name": "get_maxmind_riskscore",
        "params": "",
        "description": [
            "Gets the accounts maxmind_riskscore",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_maxmind_riskscore": {
        "name": "set_maxmind_riskscore",
        "params": "$maxmind_riskscore",
        "description": [
            "Sets the accounts maxmind_riskscore",
            "@param float $maxmind_riskscore the new maxmind_riskscore",
            "@return \\MyAdmin\\Orm\\Account"
        ],
        "fieldtexts": []
    },
    "getPaymentMethod": {
        "name": "getPaymentMethod",
        "params": "",
        "description": [
            "Gets the accounts payment_method",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPaymentMethod": {
        "name": "setPaymentMethod",
        "params": "$payment_method",
        "description": [
            "Sets the accounts payment_method",
            "@param string $payment_method the new payment_method",
            "@return \\MyAdmin\\Orm\\Account"
        ],
        "fieldtexts": []
    },
    "get_payment_method": {
        "name": "get_payment_method",
        "params": "",
        "description": [
            "Gets the accounts payment_method",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payment_method": {
        "name": "set_payment_method",
        "params": "$payment_method",
        "description": [
            "Sets the accounts payment_method",
            "@param string $payment_method the new payment_method",
            "@return \\MyAdmin\\Orm\\Account"
        ],
        "fieldtexts": []
    },
    "getPin": {
        "name": "getPin",
        "params": "",
        "description": [
            "Gets the phone pin",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPin": {
        "name": "setPin",
        "params": "$pin",
        "description": [
            "Sets the phone pin",
            "@param int $pin the new pin",
            "@return \\MyAdmin\\Orm\\Phone"
        ],
        "fieldtexts": []
    },
    "get_pin": {
        "name": "get_pin",
        "params": "",
        "description": [
            "Gets the phone pin",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_pin": {
        "name": "set_pin",
        "params": "$pin",
        "description": [
            "Sets the phone pin",
            "@param int $pin the new pin",
            "@return \\MyAdmin\\Orm\\Phone"
        ],
        "fieldtexts": []
    },
    "getDisableCc": {
        "name": "getDisableCc",
        "params": "",
        "description": [
            "Gets the accounts disable_cc",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDisableCc": {
        "name": "setDisableCc",
        "params": "$disable_cc",
        "description": [
            "Sets the accounts disable_cc",
            "@param int $disable_cc the new disable_cc",
            "@return \\MyAdmin\\Orm\\Account"
        ],
        "fieldtexts": []
    },
    "get_disable_cc": {
        "name": "get_disable_cc",
        "params": "",
        "description": [
            "Gets the accounts disable_cc",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_disable_cc": {
        "name": "set_disable_cc",
        "params": "$disable_cc",
        "description": [
            "Sets the accounts disable_cc",
            "@param int $disable_cc the new disable_cc",
            "@return \\MyAdmin\\Orm\\Account"
        ],
        "fieldtexts": []
    },
    "getSecId": {
        "name": "getSecId",
        "params": "",
        "description": [
            "Gets the account_security sec_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSecId": {
        "name": "setSecId",
        "params": "$sec_id",
        "description": [
            "Sets the account_security sec_id",
            "@param int $sec_id the new sec_id",
            "@return \\MyAdmin\\Orm\\Account_Security"
        ],
        "fieldtexts": []
    },
    "get_sec_id": {
        "name": "get_sec_id",
        "params": "",
        "description": [
            "Gets the account_security sec_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_sec_id": {
        "name": "set_sec_id",
        "params": "$sec_id",
        "description": [
            "Sets the account_security sec_id",
            "@param int $sec_id the new sec_id",
            "@return \\MyAdmin\\Orm\\Account_Security"
        ],
        "fieldtexts": []
    },
    "getSecType": {
        "name": "getSecType",
        "params": "",
        "description": [
            "Gets the account_security sec_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSecType": {
        "name": "setSecType",
        "params": "$sec_type",
        "description": [
            "Sets the account_security sec_type",
            "@param string $sec_type the new sec_type",
            "@return \\MyAdmin\\Orm\\Account_Security"
        ],
        "fieldtexts": []
    },
    "get_sec_type": {
        "name": "get_sec_type",
        "params": "",
        "description": [
            "Gets the account_security sec_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_sec_type": {
        "name": "set_sec_type",
        "params": "$sec_type",
        "description": [
            "Sets the account_security sec_type",
            "@param string $sec_type the new sec_type",
            "@return \\MyAdmin\\Orm\\Account_Security"
        ],
        "fieldtexts": []
    },
    "getSecLabel": {
        "name": "getSecLabel",
        "params": "",
        "description": [
            "Gets the account_security sec_label",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSecLabel": {
        "name": "setSecLabel",
        "params": "$sec_label",
        "description": [
            "Sets the account_security sec_label",
            "@param string $sec_label the new sec_label",
            "@return \\MyAdmin\\Orm\\Account_Security"
        ],
        "fieldtexts": []
    },
    "get_sec_label": {
        "name": "get_sec_label",
        "params": "",
        "description": [
            "Gets the account_security sec_label",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_sec_label": {
        "name": "set_sec_label",
        "params": "$sec_label",
        "description": [
            "Sets the account_security sec_label",
            "@param string $sec_label the new sec_label",
            "@return \\MyAdmin\\Orm\\Account_Security"
        ],
        "fieldtexts": []
    },
    "getSecData": {
        "name": "getSecData",
        "params": "",
        "description": [
            "Gets the account_security sec_data",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setSecData": {
        "name": "setSecData",
        "params": "$sec_data",
        "description": [
            "Sets the account_security sec_data",
            "@param mixed $sec_data the new sec_data",
            "@return \\MyAdmin\\Orm\\Account_Security"
        ],
        "fieldtexts": []
    },
    "get_sec_data": {
        "name": "get_sec_data",
        "params": "",
        "description": [
            "Gets the account_security sec_data",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_sec_data": {
        "name": "set_sec_data",
        "params": "$sec_data",
        "description": [
            "Sets the account_security sec_data",
            "@param mixed $sec_data the new sec_data",
            "@return \\MyAdmin\\Orm\\Account_Security"
        ],
        "fieldtexts": []
    },
    "getKey": {
        "name": "getKey",
        "params": "",
        "description": [
            "Gets the website_masters key",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setKey": {
        "name": "setKey",
        "params": "$key",
        "description": [
            "Sets the website_masters key",
            "@param mixed $key the new key",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "get_key": {
        "name": "get_key",
        "params": "",
        "description": [
            "Gets the website_masters key",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_key": {
        "name": "set_key",
        "params": "$key",
        "description": [
            "Sets the website_masters key",
            "@param mixed $key the new key",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "getValue": {
        "name": "getValue",
        "params": "",
        "description": [
            "Gets the settings value",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setValue": {
        "name": "setValue",
        "params": "$value",
        "description": [
            "Sets the settings value",
            "@param mixed $value the new value",
            "@return \\MyAdmin\\Orm\\Setting"
        ],
        "fieldtexts": []
    },
    "get_value": {
        "name": "get_value",
        "params": "",
        "description": [
            "Gets the settings value",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_value": {
        "name": "set_value",
        "params": "$value",
        "description": [
            "Sets the settings value",
            "@param mixed $value the new value",
            "@return \\MyAdmin\\Orm\\Setting"
        ],
        "fieldtexts": []
    },
    "setText": {
        "name": "setText",
        "params": "$text",
        "description": [
            "Sets the templates text",
            "@param mixed $text the new text",
            "@return \\MyAdmin\\Orm\\Template"
        ],
        "fieldtexts": []
    },
    "getRolepermId": {
        "name": "getRolepermId",
        "params": "",
        "description": [
            "Gets the acl_roleperms roleperm_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setRolepermId": {
        "name": "setRolepermId",
        "params": "$roleperm_id",
        "description": [
            "Sets the acl_roleperms roleperm_id",
            "@param int $roleperm_id the new roleperm_id",
            "@return \\MyAdmin\\Orm\\Acl_Roleperm"
        ],
        "fieldtexts": []
    },
    "get_roleperm_id": {
        "name": "get_roleperm_id",
        "params": "",
        "description": [
            "Gets the acl_roleperms roleperm_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_roleperm_id": {
        "name": "set_roleperm_id",
        "params": "$roleperm_id",
        "description": [
            "Sets the acl_roleperms roleperm_id",
            "@param int $roleperm_id the new roleperm_id",
            "@return \\MyAdmin\\Orm\\Acl_Roleperm"
        ],
        "fieldtexts": []
    },
    "getRoleId": {
        "name": "getRoleId",
        "params": "",
        "description": [
            "Gets the acl_roleperms role_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setRoleId": {
        "name": "setRoleId",
        "params": "$role_id",
        "description": [
            "Sets the acl_roleperms role_id",
            "@param int $role_id the new role_id",
            "@return \\MyAdmin\\Orm\\Acl_Roleperm"
        ],
        "fieldtexts": []
    },
    "get_role_id": {
        "name": "get_role_id",
        "params": "",
        "description": [
            "Gets the acl_roleperms role_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_role_id": {
        "name": "set_role_id",
        "params": "$role_id",
        "description": [
            "Sets the acl_roleperms role_id",
            "@param int $role_id the new role_id",
            "@return \\MyAdmin\\Orm\\Acl_Roleperm"
        ],
        "fieldtexts": []
    },
    "getPermId": {
        "name": "getPermId",
        "params": "",
        "description": [
            "Gets the acl_roleperms perm_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPermId": {
        "name": "setPermId",
        "params": "$perm_id",
        "description": [
            "Sets the acl_roleperms perm_id",
            "@param int $perm_id the new perm_id",
            "@return \\MyAdmin\\Orm\\Acl_Roleperm"
        ],
        "fieldtexts": []
    },
    "get_perm_id": {
        "name": "get_perm_id",
        "params": "",
        "description": [
            "Gets the acl_roleperms perm_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_perm_id": {
        "name": "set_perm_id",
        "params": "$perm_id",
        "description": [
            "Sets the acl_roleperms perm_id",
            "@param int $perm_id the new perm_id",
            "@return \\MyAdmin\\Orm\\Acl_Roleperm"
        ],
        "fieldtexts": []
    },
    "getParent": {
        "name": "getParent",
        "params": "",
        "description": [
            "Gets the salesmanager_items parent",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setParent": {
        "name": "setParent",
        "params": "$parent",
        "description": [
            "Sets the salesmanager_items parent",
            "@param float $parent the new parent",
            "@return \\MyAdmin\\Orm\\Salesmanager_Item"
        ],
        "fieldtexts": []
    },
    "get_parent": {
        "name": "get_parent",
        "params": "",
        "description": [
            "Gets the salesmanager_items parent",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_parent": {
        "name": "set_parent",
        "params": "$parent",
        "description": [
            "Sets the salesmanager_items parent",
            "@param float $parent the new parent",
            "@return \\MyAdmin\\Orm\\Salesmanager_Item"
        ],
        "fieldtexts": []
    },
    "getTag": {
        "name": "getTag",
        "params": "",
        "description": [
            "Gets the service_categories tag",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTag": {
        "name": "setTag",
        "params": "$tag",
        "description": [
            "Sets the service_categories tag",
            "@param string $tag the new tag",
            "@return \\MyAdmin\\Orm\\Service_Category"
        ],
        "fieldtexts": []
    },
    "get_tag": {
        "name": "get_tag",
        "params": "",
        "description": [
            "Gets the service_categories tag",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_tag": {
        "name": "set_tag",
        "params": "$tag",
        "description": [
            "Sets the service_categories tag",
            "@param string $tag the new tag",
            "@return \\MyAdmin\\Orm\\Service_Category"
        ],
        "fieldtexts": []
    },
    "getCustid": {
        "name": "getCustid",
        "params": "",
        "description": [
            "Gets the websites custid",
            "@return int"
        ],
        "fieldtexts": []
    },
    "getPayment": {
        "name": "getPayment",
        "params": "",
        "description": [
            "Gets the affiliates payment",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPayment": {
        "name": "setPayment",
        "params": "$payment",
        "description": [
            "Sets the affiliates payment",
            "@param string $payment the new payment",
            "@return \\MyAdmin\\Orm\\Affiliate"
        ],
        "fieldtexts": []
    },
    "get_payment": {
        "name": "get_payment",
        "params": "",
        "description": [
            "Gets the affiliates payment",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payment": {
        "name": "set_payment",
        "params": "$payment",
        "description": [
            "Sets the affiliates payment",
            "@param string $payment the new payment",
            "@return \\MyAdmin\\Orm\\Affiliate"
        ],
        "fieldtexts": []
    },
    "getDatePaid": {
        "name": "getDatePaid",
        "params": "",
        "description": [
            "Gets the affiliates date_paid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDatePaid": {
        "name": "setDatePaid",
        "params": "$date_paid",
        "description": [
            "Sets the affiliates date_paid",
            "@param string $date_paid the new date_paid",
            "@return \\MyAdmin\\Orm\\Affiliate"
        ],
        "fieldtexts": []
    },
    "get_date_paid": {
        "name": "get_date_paid",
        "params": "",
        "description": [
            "Gets the affiliates date_paid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_date_paid": {
        "name": "set_date_paid",
        "params": "$date_paid",
        "description": [
            "Sets the affiliates date_paid",
            "@param string $date_paid the new date_paid",
            "@return \\MyAdmin\\Orm\\Affiliate"
        ],
        "fieldtexts": []
    },
    "getUrl": {
        "name": "getUrl",
        "params": "",
        "description": [
            "Gets the referrer_log url",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setUrl": {
        "name": "setUrl",
        "params": "$url",
        "description": [
            "Sets the referrer_log url",
            "@param mixed $url the new url",
            "@return \\MyAdmin\\Orm\\Referrer_Log"
        ],
        "fieldtexts": []
    },
    "get_url": {
        "name": "get_url",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_url": {
        "name": "set_url",
        "params": "$url",
        "description": [
            "Sets the referrer_log url",
            "@param mixed $url the new url",
            "@return \\MyAdmin\\Orm\\Referrer_Log"
        ],
        "fieldtexts": []
    },
    "getCreatedOn": {
        "name": "getCreatedOn",
        "params": "",
        "description": [
            "Gets the login_logs created_on",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCreatedOn": {
        "name": "setCreatedOn",
        "params": "$created_on",
        "description": [
            "Sets the login_logs created_on",
            "@param string $created_on the new created_on",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "get_created_on": {
        "name": "get_created_on",
        "params": "",
        "description": [
            "Gets the login_logs created_on",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_created_on": {
        "name": "set_created_on",
        "params": "$created_on",
        "description": [
            "Sets the login_logs created_on",
            "@param string $created_on the new created_on",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "getAffiliate": {
        "name": "getAffiliate",
        "params": "",
        "description": [
            "Gets the affiliate_traffic affiliate",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAffiliate": {
        "name": "setAffiliate",
        "params": "$affiliate",
        "description": [
            "Sets the affiliate_traffic affiliate",
            "@param string $affiliate the new affiliate",
            "@return \\MyAdmin\\Orm\\Affiliate_Traffic"
        ],
        "fieldtexts": []
    },
    "get_affiliate": {
        "name": "get_affiliate",
        "params": "",
        "description": [
            "Gets the affiliate_traffic affiliate",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_affiliate": {
        "name": "set_affiliate",
        "params": "$affiliate",
        "description": [
            "Sets the affiliate_traffic affiliate",
            "@param string $affiliate the new affiliate",
            "@return \\MyAdmin\\Orm\\Affiliate_Traffic"
        ],
        "fieldtexts": []
    },
    "getReferrer": {
        "name": "getReferrer",
        "params": "",
        "description": [
            "Gets the affiliate_traffic referrer",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setReferrer": {
        "name": "setReferrer",
        "params": "$referrer",
        "description": [
            "Sets the affiliate_traffic referrer",
            "@param string $referrer the new referrer",
            "@return \\MyAdmin\\Orm\\Affiliate_Traffic"
        ],
        "fieldtexts": []
    },
    "get_referrer": {
        "name": "get_referrer",
        "params": "",
        "description": [
            "Gets the affiliate_traffic referrer",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_referrer": {
        "name": "set_referrer",
        "params": "$referrer",
        "description": [
            "Sets the affiliate_traffic referrer",
            "@param string $referrer the new referrer",
            "@return \\MyAdmin\\Orm\\Affiliate_Traffic"
        ],
        "fieldtexts": []
    },
    "getTimestamp": {
        "name": "getTimestamp",
        "params": "",
        "description": [
            "Gets the user_log timestamp",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTimestamp": {
        "name": "setTimestamp",
        "params": "$timestamp",
        "description": [
            "Sets the user_log timestamp",
            "@param string $timestamp the new timestamp",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "get_timestamp": {
        "name": "get_timestamp",
        "params": "",
        "description": [
            "Gets the user_log timestamp",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_timestamp": {
        "name": "set_timestamp",
        "params": "$timestamp",
        "description": [
            "Sets the user_log timestamp",
            "@param string $timestamp the new timestamp",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "getPorts": {
        "name": "getPorts",
        "params": "",
        "description": [
            "Gets the vlans ports",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPorts": {
        "name": "setPorts",
        "params": "$ports",
        "description": [
            "Sets the vlans ports",
            "@param string $ports the new ports",
            "@return \\MyAdmin\\Orm\\Vlan"
        ],
        "fieldtexts": []
    },
    "get_ports": {
        "name": "get_ports",
        "params": "$ip",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers",
            "create table apcs (",
            "\t\t`id` int(22) not null auto_increment,",
            "\t\t`name` varchar(50) not null default '',",
            "\t\t`ip` varchar(16) not null default '',",
            "\t\t`ports` int(8) not null default 0,",
            "\t\tprimary key `id` (`id`)",
            ");",
            "@param $ip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ports": {
        "name": "set_ports",
        "params": "$ports",
        "description": [
            "Sets the vlans ports",
            "@param string $ports the new ports",
            "@return \\MyAdmin\\Orm\\Vlan"
        ],
        "fieldtexts": []
    },
    "getLocation": {
        "name": "getLocation",
        "params": "",
        "description": [
            "Gets the vps location",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setLocation": {
        "name": "setLocation",
        "params": "$location",
        "description": [
            "Sets the vps location",
            "@param int $location the new location",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "get_location": {
        "name": "get_location",
        "params": "",
        "description": [
            "Gets the vps location",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_location": {
        "name": "set_location",
        "params": "$location",
        "description": [
            "Sets the vps location",
            "@param int $location the new location",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "getData": {
        "name": "getData",
        "params": "",
        "description": [
            "Gets the trials data",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setData": {
        "name": "setData",
        "params": "$data",
        "description": [
            "Sets the trials data",
            "@param mixed $data the new data",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "get_data": {
        "name": "get_data",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "set_data": {
        "name": "set_data",
        "params": "$data",
        "description": [
            "Sets the trials data",
            "@param mixed $data the new data",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "getDla": {
        "name": "getDla",
        "params": "",
        "description": [
            "Gets the sessions dla",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDla": {
        "name": "setDla",
        "params": "$dla",
        "description": [
            "Sets the sessions dla",
            "@param int $dla the new dla",
            "@return \\MyAdmin\\Orm\\Session"
        ],
        "fieldtexts": []
    },
    "get_dla": {
        "name": "get_dla",
        "params": "",
        "description": [
            "Gets the sessions dla",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dla": {
        "name": "set_dla",
        "params": "$dla",
        "description": [
            "Sets the sessions dla",
            "@param int $dla the new dla",
            "@return \\MyAdmin\\Orm\\Session"
        ],
        "fieldtexts": []
    },
    "getCoords": {
        "name": "getCoords",
        "params": "",
        "description": [
            "Gets the asset_locations coords",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setCoords": {
        "name": "setCoords",
        "params": "$coords",
        "description": [
            "Sets the asset_locations coords",
            "@param mixed $coords the new coords",
            "@return \\MyAdmin\\Orm\\Asset_Location"
        ],
        "fieldtexts": []
    },
    "get_coords": {
        "name": "get_coords",
        "params": "",
        "description": [
            "Gets the asset_locations coords",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_coords": {
        "name": "set_coords",
        "params": "$coords",
        "description": [
            "Sets the asset_locations coords",
            "@param mixed $coords the new coords",
            "@return \\MyAdmin\\Orm\\Asset_Location"
        ],
        "fieldtexts": []
    },
    "getDescription": {
        "name": "getDescription",
        "params": "",
        "description": [
            "Gets the server_coupons description",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDescription": {
        "name": "setDescription",
        "params": "$description",
        "description": [
            "Sets the server_coupons description",
            "@param string $description the new description",
            "@return \\MyAdmin\\Orm\\Server_Coupon"
        ],
        "fieldtexts": []
    },
    "get_description": {
        "name": "get_description",
        "params": "",
        "description": [
            "Gets the server_coupons description",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_description": {
        "name": "set_description",
        "params": "$description",
        "description": [
            "Sets the server_coupons description",
            "@param string $description the new description",
            "@return \\MyAdmin\\Orm\\Server_Coupon"
        ],
        "fieldtexts": []
    },
    "getOrderId": {
        "name": "getOrderId",
        "params": "",
        "description": [
            "Gets the ssl_certs order_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setOrderId": {
        "name": "setOrderId",
        "params": "$order_id",
        "description": [
            "Sets the ssl_certs order_id",
            "@param string $order_id the new order_id",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_order_id": {
        "name": "get_order_id",
        "params": "",
        "description": [
            "Gets the ssl_certs order_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_order_id": {
        "name": "set_order_id",
        "params": "$order_id",
        "description": [
            "Sets the ssl_certs order_id",
            "@param string $order_id the new order_id",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getDatacenter": {
        "name": "getDatacenter",
        "params": "",
        "description": [
            "Gets the assets datacenter",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDatacenter": {
        "name": "setDatacenter",
        "params": "$datacenter",
        "description": [
            "Sets the assets datacenter",
            "@param int $datacenter the new datacenter",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_datacenter": {
        "name": "get_datacenter",
        "params": "",
        "description": [
            "Gets the assets datacenter",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_datacenter": {
        "name": "set_datacenter",
        "params": "$datacenter",
        "description": [
            "Sets the assets datacenter",
            "@param int $datacenter the new datacenter",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getTypeId": {
        "name": "getTypeId",
        "params": "",
        "description": [
            "Gets the comments type_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setTypeId": {
        "name": "setTypeId",
        "params": "$type_id",
        "description": [
            "Sets the comments type_id",
            "@param int $type_id the new type_id",
            "@return \\MyAdmin\\Orm\\Comment"
        ],
        "fieldtexts": []
    },
    "get_type_id": {
        "name": "get_type_id",
        "params": "",
        "description": [
            "Gets the comments type_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_type_id": {
        "name": "set_type_id",
        "params": "$type_id",
        "description": [
            "Sets the comments type_id",
            "@param int $type_id the new type_id",
            "@return \\MyAdmin\\Orm\\Comment"
        ],
        "fieldtexts": []
    },
    "getAssetTag": {
        "name": "getAssetTag",
        "params": "",
        "description": [
            "Gets the assets asset_tag",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAssetTag": {
        "name": "setAssetTag",
        "params": "$asset_tag",
        "description": [
            "Sets the assets asset_tag",
            "@param string $asset_tag the new asset_tag",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_asset_tag": {
        "name": "get_asset_tag",
        "params": "",
        "description": [
            "Gets the assets asset_tag",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_asset_tag": {
        "name": "set_asset_tag",
        "params": "$asset_tag",
        "description": [
            "Sets the assets asset_tag",
            "@param string $asset_tag the new asset_tag",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getRack": {
        "name": "getRack",
        "params": "",
        "description": [
            "Gets the assets rack",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setRack": {
        "name": "setRack",
        "params": "$rack",
        "description": [
            "Sets the assets rack",
            "@param int $rack the new rack",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_rack": {
        "name": "get_rack",
        "params": "",
        "description": [
            "Gets the assets rack",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_rack": {
        "name": "set_rack",
        "params": "$rack",
        "description": [
            "Sets the assets rack",
            "@param int $rack the new rack",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getRow": {
        "name": "getRow",
        "params": "",
        "description": [
            "Gets the assets row",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRow": {
        "name": "setRow",
        "params": "$row",
        "description": [
            "Sets the assets row",
            "@param string $row the new row",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_row": {
        "name": "get_row",
        "params": "",
        "description": [
            "Gets the assets row",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_row": {
        "name": "set_row",
        "params": "$row",
        "description": [
            "Sets the assets row",
            "@param string $row the new row",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getCol": {
        "name": "getCol",
        "params": "",
        "description": [
            "Gets the assets col",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCol": {
        "name": "setCol",
        "params": "$col",
        "description": [
            "Sets the assets col",
            "@param string $col the new col",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_col": {
        "name": "get_col",
        "params": "",
        "description": [
            "Gets the assets col",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_col": {
        "name": "set_col",
        "params": "$col",
        "description": [
            "Sets the assets col",
            "@param string $col the new col",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getUnitStart": {
        "name": "getUnitStart",
        "params": "",
        "description": [
            "Gets the assets unit_start",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setUnitStart": {
        "name": "setUnitStart",
        "params": "$unit_start",
        "description": [
            "Sets the assets unit_start",
            "@param string $unit_start the new unit_start",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_unit_start": {
        "name": "get_unit_start",
        "params": "",
        "description": [
            "Gets the assets unit_start",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_unit_start": {
        "name": "set_unit_start",
        "params": "$unit_start",
        "description": [
            "Sets the assets unit_start",
            "@param string $unit_start the new unit_start",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getUnitEnd": {
        "name": "getUnitEnd",
        "params": "",
        "description": [
            "Gets the assets unit_end",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setUnitEnd": {
        "name": "setUnitEnd",
        "params": "$unit_end",
        "description": [
            "Sets the assets unit_end",
            "@param string $unit_end the new unit_end",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_unit_end": {
        "name": "get_unit_end",
        "params": "",
        "description": [
            "Gets the assets unit_end",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_unit_end": {
        "name": "set_unit_end",
        "params": "$unit_end",
        "description": [
            "Sets the assets unit_end",
            "@param string $unit_end the new unit_end",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getUnitSub": {
        "name": "getUnitSub",
        "params": "",
        "description": [
            "Gets the assets unit_sub",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setUnitSub": {
        "name": "setUnitSub",
        "params": "$unit_sub",
        "description": [
            "Sets the assets unit_sub",
            "@param int $unit_sub the new unit_sub",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_unit_sub": {
        "name": "get_unit_sub",
        "params": "",
        "description": [
            "Gets the assets unit_sub",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_unit_sub": {
        "name": "set_unit_sub",
        "params": "$unit_sub",
        "description": [
            "Sets the assets unit_sub",
            "@param int $unit_sub the new unit_sub",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getIpmiMac": {
        "name": "getIpmiMac",
        "params": "",
        "description": [
            "Gets the assets ipmi_mac",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpmiMac": {
        "name": "setIpmiMac",
        "params": "$ipmi_mac",
        "description": [
            "Sets the assets ipmi_mac",
            "@param string $ipmi_mac the new ipmi_mac",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_ipmi_mac": {
        "name": "get_ipmi_mac",
        "params": "",
        "description": [
            "Gets the assets ipmi_mac",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ipmi_mac": {
        "name": "set_ipmi_mac",
        "params": "$ipmi_mac",
        "description": [
            "Sets the assets ipmi_mac",
            "@param string $ipmi_mac the new ipmi_mac",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getIpmiIp": {
        "name": "getIpmiIp",
        "params": "",
        "description": [
            "Gets the assets ipmi_ip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpmiIp": {
        "name": "setIpmiIp",
        "params": "$ipmi_ip",
        "description": [
            "Sets the assets ipmi_ip",
            "@param string $ipmi_ip the new ipmi_ip",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_ipmi_ip": {
        "name": "get_ipmi_ip",
        "params": "",
        "description": [
            "Gets the assets ipmi_ip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ipmi_ip": {
        "name": "set_ipmi_ip",
        "params": "$ipmi_ip",
        "description": [
            "Sets the assets ipmi_ip",
            "@param string $ipmi_ip the new ipmi_ip",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getHostname": {
        "name": "getHostname",
        "params": "",
        "description": [
            "Gets the websites hostname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setHostname": {
        "name": "setHostname",
        "params": "$hostname",
        "description": [
            "@param string $hostname"
        ],
        "fieldtexts": []
    },
    "set_hostname": {
        "name": "set_hostname",
        "params": "$hostname",
        "description": [
            "Sets the websites hostname",
            "@param string $hostname the new hostname",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getCompany": {
        "name": "getCompany",
        "params": "",
        "description": [
            "Gets the ssl_certs company",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCompany": {
        "name": "setCompany",
        "params": "$company",
        "description": [
            "Sets the ssl_certs company",
            "@param string $company the new company",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_company": {
        "name": "get_company",
        "params": "",
        "description": [
            "Gets the ssl_certs company",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_company": {
        "name": "set_company",
        "params": "$company",
        "description": [
            "Sets the ssl_certs company",
            "@param string $company the new company",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getComments": {
        "name": "getComments",
        "params": "",
        "description": [
            "Gets the salesmanager comments",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setComments": {
        "name": "setComments",
        "params": "$comments",
        "description": [
            "Sets the salesmanager comments",
            "@param string $comments the new comments",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "get_comments": {
        "name": "get_comments",
        "params": "",
        "description": [
            "Gets the salesmanager comments",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_comments": {
        "name": "set_comments",
        "params": "$comments",
        "description": [
            "Sets the salesmanager comments",
            "@param string $comments the new comments",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "getMake": {
        "name": "getMake",
        "params": "",
        "description": [
            "Gets the assets make",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMake": {
        "name": "setMake",
        "params": "$make",
        "description": [
            "Sets the assets make",
            "@param string $make the new make",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_make": {
        "name": "get_make",
        "params": "",
        "description": [
            "Gets the assets make",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_make": {
        "name": "set_make",
        "params": "$make",
        "description": [
            "Sets the assets make",
            "@param string $make the new make",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getModel": {
        "name": "getModel",
        "params": "",
        "description": [
            "Gets the assets model",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setModel": {
        "name": "setModel",
        "params": "$model",
        "description": [
            "Sets the assets model",
            "@param string $model the new model",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_model": {
        "name": "get_model",
        "params": "",
        "description": [
            "Gets the assets model",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_model": {
        "name": "set_model",
        "params": "$model",
        "description": [
            "Sets the assets model",
            "@param string $model the new model",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getPrimaryIpv4": {
        "name": "getPrimaryIpv4",
        "params": "",
        "description": [
            "Gets the assets primary_ipv4",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPrimaryIpv4": {
        "name": "setPrimaryIpv4",
        "params": "$primary_ipv4",
        "description": [
            "Sets the assets primary_ipv4",
            "@param string $primary_ipv4 the new primary_ipv4",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_primary_ipv4": {
        "name": "get_primary_ipv4",
        "params": "",
        "description": [
            "Gets the assets primary_ipv4",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_primary_ipv4": {
        "name": "set_primary_ipv4",
        "params": "$primary_ipv4",
        "description": [
            "Sets the assets primary_ipv4",
            "@param string $primary_ipv4 the new primary_ipv4",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getPrimaryIpv6": {
        "name": "getPrimaryIpv6",
        "params": "",
        "description": [
            "Gets the assets primary_ipv6",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPrimaryIpv6": {
        "name": "setPrimaryIpv6",
        "params": "$primary_ipv6",
        "description": [
            "Sets the assets primary_ipv6",
            "@param string $primary_ipv6 the new primary_ipv6",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_primary_ipv6": {
        "name": "get_primary_ipv6",
        "params": "",
        "description": [
            "Gets the assets primary_ipv6",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_primary_ipv6": {
        "name": "set_primary_ipv6",
        "params": "$primary_ipv6",
        "description": [
            "Sets the assets primary_ipv6",
            "@param string $primary_ipv6 the new primary_ipv6",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getCustomerId": {
        "name": "getCustomerId",
        "params": "",
        "description": [
            "Gets the assets customer_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCustomerId": {
        "name": "setCustomerId",
        "params": "$customer_id",
        "description": [
            "Sets the assets customer_id",
            "@param string $customer_id the new customer_id",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_customer_id": {
        "name": "get_customer_id",
        "params": "",
        "description": [
            "Gets the assets customer_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_customer_id": {
        "name": "set_customer_id",
        "params": "$customer_id",
        "description": [
            "Sets the assets customer_id",
            "@param string $customer_id the new customer_id",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getExternalId": {
        "name": "getExternalId",
        "params": "",
        "description": [
            "Gets the assets external_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setExternalId": {
        "name": "setExternalId",
        "params": "$external_id",
        "description": [
            "Sets the assets external_id",
            "@param string $external_id the new external_id",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_external_id": {
        "name": "get_external_id",
        "params": "",
        "description": [
            "Gets the assets external_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_external_id": {
        "name": "set_external_id",
        "params": "$external_id",
        "description": [
            "Sets the assets external_id",
            "@param string $external_id the new external_id",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getBillingStatus": {
        "name": "getBillingStatus",
        "params": "",
        "description": [
            "Gets the assets billing_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setBillingStatus": {
        "name": "setBillingStatus",
        "params": "$billing_status",
        "description": [
            "Sets the assets billing_status",
            "@param string $billing_status the new billing_status",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_billing_status": {
        "name": "get_billing_status",
        "params": "",
        "description": [
            "Gets the assets billing_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_billing_status": {
        "name": "set_billing_status",
        "params": "$billing_status",
        "description": [
            "Sets the assets billing_status",
            "@param string $billing_status the new billing_status",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getOverdue": {
        "name": "getOverdue",
        "params": "",
        "description": [
            "Gets the assets overdue",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setOverdue": {
        "name": "setOverdue",
        "params": "$overdue",
        "description": [
            "Sets the assets overdue",
            "@param int $overdue the new overdue",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_overdue": {
        "name": "get_overdue",
        "params": "",
        "description": [
            "Gets the assets overdue",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_overdue": {
        "name": "set_overdue",
        "params": "$overdue",
        "description": [
            "Sets the assets overdue",
            "@param int $overdue the new overdue",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getCreateTimestamp": {
        "name": "getCreateTimestamp",
        "params": "",
        "description": [
            "Gets the assets create_timestamp",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCreateTimestamp": {
        "name": "setCreateTimestamp",
        "params": "$create_timestamp",
        "description": [
            "Sets the assets create_timestamp",
            "@param string $create_timestamp the new create_timestamp",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_create_timestamp": {
        "name": "get_create_timestamp",
        "params": "",
        "description": [
            "Gets the assets create_timestamp",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_create_timestamp": {
        "name": "set_create_timestamp",
        "params": "$create_timestamp",
        "description": [
            "Sets the assets create_timestamp",
            "@param string $create_timestamp the new create_timestamp",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getUpdateTimestamp": {
        "name": "getUpdateTimestamp",
        "params": "",
        "description": [
            "Gets the assets update_timestamp",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setUpdateTimestamp": {
        "name": "setUpdateTimestamp",
        "params": "$update_timestamp",
        "description": [
            "Sets the assets update_timestamp",
            "@param string $update_timestamp the new update_timestamp",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "get_update_timestamp": {
        "name": "get_update_timestamp",
        "params": "",
        "description": [
            "Gets the assets update_timestamp",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_update_timestamp": {
        "name": "set_update_timestamp",
        "params": "$update_timestamp",
        "description": [
            "Sets the assets update_timestamp",
            "@param string $update_timestamp the new update_timestamp",
            "@return \\MyAdmin\\Orm\\Asset"
        ],
        "fieldtexts": []
    },
    "getSize": {
        "name": "getSize",
        "params": "",
        "description": [
            "Gets the dedicated_memory size",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSize": {
        "name": "setSize",
        "params": "$size",
        "description": [
            "Sets the dedicated_memory size",
            "@param int $size the new size",
            "@return \\MyAdmin\\Orm\\Dedicated_Memory"
        ],
        "fieldtexts": []
    },
    "get_size": {
        "name": "get_size",
        "params": "",
        "description": [
            "Gets the dedicated_memory size",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_size": {
        "name": "set_size",
        "params": "$size",
        "description": [
            "Sets the dedicated_memory size",
            "@param int $size the new size",
            "@return \\MyAdmin\\Orm\\Dedicated_Memory"
        ],
        "fieldtexts": []
    },
    "getX": {
        "name": "getX",
        "params": "",
        "description": [
            "Gets the asset_racks x",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setX": {
        "name": "setX",
        "params": "$x",
        "description": [
            "Sets the asset_racks x",
            "@param int $x the new x",
            "@return \\MyAdmin\\Orm\\Asset_Rack"
        ],
        "fieldtexts": []
    },
    "get_x": {
        "name": "get_x",
        "params": "",
        "description": [
            "Gets the asset_racks x",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_x": {
        "name": "set_x",
        "params": "$x",
        "description": [
            "Sets the asset_racks x",
            "@param int $x the new x",
            "@return \\MyAdmin\\Orm\\Asset_Rack"
        ],
        "fieldtexts": []
    },
    "getY": {
        "name": "getY",
        "params": "",
        "description": [
            "Gets the asset_racks y",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setY": {
        "name": "setY",
        "params": "$y",
        "description": [
            "Sets the asset_racks y",
            "@param int $y the new y",
            "@return \\MyAdmin\\Orm\\Asset_Rack"
        ],
        "fieldtexts": []
    },
    "get_y": {
        "name": "get_y",
        "params": "",
        "description": [
            "Gets the asset_racks y",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_y": {
        "name": "set_y",
        "params": "$y",
        "description": [
            "Sets the asset_racks y",
            "@param int $y the new y",
            "@return \\MyAdmin\\Orm\\Asset_Rack"
        ],
        "fieldtexts": []
    },
    "getHdsize": {
        "name": "getHdsize",
        "params": "",
        "description": [
            "Gets the website_masters hdsize",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setHdsize": {
        "name": "setHdsize",
        "params": "$hdsize",
        "description": [
            "Sets the website_masters hdsize",
            "@param float $hdsize the new hdsize",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "get_hdsize": {
        "name": "get_hdsize",
        "params": "",
        "description": [
            "Gets the website_masters hdsize",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_hdsize": {
        "name": "set_hdsize",
        "params": "$hdsize",
        "description": [
            "Sets the website_masters hdsize",
            "@param float $hdsize the new hdsize",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "getHdfree": {
        "name": "getHdfree",
        "params": "",
        "description": [
            "Gets the website_masters hdfree",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setHdfree": {
        "name": "setHdfree",
        "params": "$hdfree",
        "description": [
            "Sets the website_masters hdfree",
            "@param float $hdfree the new hdfree",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "get_hdfree": {
        "name": "get_hdfree",
        "params": "",
        "description": [
            "Gets the website_masters hdfree",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_hdfree": {
        "name": "set_hdfree",
        "params": "$hdfree",
        "description": [
            "Sets the website_masters hdfree",
            "@param float $hdfree the new hdfree",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "getLastUpdate": {
        "name": "getLastUpdate",
        "params": "",
        "description": [
            "Gets the website_masters last_update",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLastUpdate": {
        "name": "setLastUpdate",
        "params": "$last_update",
        "description": [
            "Sets the website_masters last_update",
            "@param string $last_update the new last_update",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "get_last_update": {
        "name": "get_last_update",
        "params": "",
        "description": [
            "Gets the website_masters last_update",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_last_update": {
        "name": "set_last_update",
        "params": "$last_update",
        "description": [
            "Sets the website_masters last_update",
            "@param string $last_update the new last_update",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "getAvailable": {
        "name": "getAvailable",
        "params": "",
        "description": [
            "Gets the website_masters available",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setAvailable": {
        "name": "setAvailable",
        "params": "$available",
        "description": [
            "Sets the website_masters available",
            "@param int $available the new available",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "get_available": {
        "name": "get_available",
        "params": "",
        "description": [
            "Gets the website_masters available",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_available": {
        "name": "set_available",
        "params": "$available",
        "description": [
            "Sets the website_masters available",
            "@param int $available the new available",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "getIowait": {
        "name": "getIowait",
        "params": "",
        "description": [
            "Gets the vps_masters iowait",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setIowait": {
        "name": "setIowait",
        "params": "$iowait",
        "description": [
            "Sets the vps_masters iowait",
            "@param float $iowait the new iowait",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_iowait": {
        "name": "get_iowait",
        "params": "",
        "description": [
            "Gets the vps_masters iowait",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_iowait": {
        "name": "set_iowait",
        "params": "$iowait",
        "description": [
            "Sets the vps_masters iowait",
            "@param float $iowait the new iowait",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getServer": {
        "name": "getServer",
        "params": "",
        "description": [
            "Gets the websites server",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setServer": {
        "name": "setServer",
        "params": "$server",
        "description": [
            "Sets the websites server",
            "@param int $server the new server",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "get_server": {
        "name": "get_server",
        "params": "$server",
        "description": [
            "tf::get_server()",
            "@param mixed $server",
            "@return bool|array"
        ],
        "fieldtexts": []
    },
    "set_server": {
        "name": "set_server",
        "params": "$server",
        "description": [
            "Sets the websites server",
            "@param int $server the new server",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getUsername": {
        "name": "getUsername",
        "params": "",
        "description": [
            "Gets the websites username",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setUsername": {
        "name": "setUsername",
        "params": "$username",
        "description": [
            "@param string $username"
        ],
        "fieldtexts": []
    },
    "get_username": {
        "name": "get_username",
        "params": "",
        "description": [
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_username": {
        "name": "set_username",
        "params": "$username",
        "description": [
            "Sets the websites username",
            "@param string $username the new username",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getFrequency": {
        "name": "getFrequency",
        "params": "",
        "description": [
            "Gets the websites frequency",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setFrequency": {
        "name": "setFrequency",
        "params": "$frequency",
        "description": [
            "Sets the websites frequency",
            "@param int $frequency the new frequency",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "get_frequency": {
        "name": "get_frequency",
        "params": "",
        "description": [
            "Gets the websites frequency",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_frequency": {
        "name": "set_frequency",
        "params": "$frequency",
        "description": [
            "Sets the websites frequency",
            "@param int $frequency the new frequency",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getOrderDate": {
        "name": "getOrderDate",
        "params": "",
        "description": [
            "Gets the websites order_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setOrderDate": {
        "name": "setOrderDate",
        "params": "$order_date",
        "description": [
            "Sets the websites order_date",
            "@param string $order_date the new order_date",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "get_order_date": {
        "name": "get_order_date",
        "params": "",
        "description": [
            "Gets the websites order_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_order_date": {
        "name": "set_order_date",
        "params": "$order_date",
        "description": [
            "Sets the websites order_date",
            "@param string $order_date the new order_date",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getQuota": {
        "name": "getQuota",
        "params": "",
        "description": [
            "Gets the backups quota",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setQuota": {
        "name": "setQuota",
        "params": "$quota",
        "description": [
            "Sets the backups quota",
            "@param int $quota the new quota",
            "@return \\MyAdmin\\Orm\\Backup"
        ],
        "fieldtexts": []
    },
    "get_quota": {
        "name": "get_quota",
        "params": "",
        "description": [
            "Gets the backups quota",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_quota": {
        "name": "set_quota",
        "params": "$quota",
        "description": [
            "Sets the backups quota",
            "@param int $quota the new quota",
            "@return \\MyAdmin\\Orm\\Backup"
        ],
        "fieldtexts": []
    },
    "getInvoice": {
        "name": "getInvoice",
        "params": "",
        "description": [
            "Gets the websites invoice",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setInvoice": {
        "name": "setInvoice",
        "params": "$invoice",
        "description": [
            "Sets the websites invoice",
            "@param int $invoice the new invoice",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "set_invoice": {
        "name": "set_invoice",
        "params": "$invoice",
        "description": [
            "Sets the websites invoice",
            "@param int $invoice the new invoice",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getCoupon": {
        "name": "getCoupon",
        "params": "",
        "description": [
            "Gets the websites coupon",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setCoupon": {
        "name": "setCoupon",
        "params": "$coupon",
        "description": [
            "Sets the websites coupon",
            "@param int $coupon the new coupon",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "get_coupon": {
        "name": "get_coupon",
        "params": "",
        "description": [
            "Gets the websites coupon",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_coupon": {
        "name": "set_coupon",
        "params": "$coupon",
        "description": [
            "Sets the websites coupon",
            "@param int $coupon the new coupon",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getExtra": {
        "name": "getExtra",
        "params": "",
        "description": [
            "Gets the websites extra",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setExtra": {
        "name": "setExtra",
        "params": "$extra",
        "description": [
            "Sets the websites extra",
            "@param mixed $extra the new extra",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "get_extra": {
        "name": "get_extra",
        "params": "$extra",
        "description": [
            "@param $extra",
            "@return array|object"
        ],
        "fieldtexts": []
    },
    "set_extra": {
        "name": "set_extra",
        "params": "$extra",
        "description": [
            "Sets the websites extra",
            "@param mixed $extra the new extra",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getServerStatus": {
        "name": "getServerStatus",
        "params": "",
        "description": [
            "Gets the websites server_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setServerStatus": {
        "name": "setServerStatus",
        "params": "$id, $status",
        "description": [
            "updates a server status",
            "@param int $id",
            "@param string $status"
        ],
        "fieldtexts": []
    },
    "get_server_status": {
        "name": "get_server_status",
        "params": "",
        "description": [
            "Gets the websites server_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_server_status": {
        "name": "set_server_status",
        "params": "$server_status",
        "description": [
            "Sets the websites server_status",
            "@param string $server_status the new server_status",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "use_module": {
        "name": "use_module",
        "params": "$module",
        "description": [
            "sets the module being used if any and loads its settings",
            "@param string $module the module to use",
            "@return Orm"
        ],
        "fieldtexts": []
    },
    "valid_field": {
        "name": "valid_field",
        "params": "$field",
        "description": [
            "checks if the field is val\\",
            "@param string $field the name of the field",
            "@return bool whether or not the field is valid"
        ],
        "fieldtexts": []
    },
    "sanitize": {
        "name": "sanitize",
        "params": "$field, $value",
        "description": [
            "sanitizes the given field value",
            "@param string $field",
            "@param mixed $value",
            "@return mixed the sanitized value"
        ],
        "fieldtexts": []
    },
    "find": {
        "name": "find",
        "params": "$params, $order_params = null, $limit = -1, $offset = -1",
        "description": [
            "finds table entries matching the given parameters",
            "@param array $params search terms",
            "@param null  $order_params",
            "@param int   $limit  optional limit, or -1 (default) for no limit",
            "@param int   $offset optional limit offset, or -1 (default) for no offset",
            "@return array array of ids matching the parameters",
            "@internal param array|null $order array of orders parameters"
        ],
        "fieldtexts": []
    },
    "calc_primary_field": {
        "name": "calc_primary_field",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "clear": {
        "name": "clear",
        "params": "",
        "description": [
            "unloads any loaded row so you are free to use it to insert a new one",
            "@return Orm;"
        ],
        "fieldtexts": []
    },
    "load_real": {
        "name": "load_real",
        "params": "$id",
        "description": [
            "loads an table by id",
            "@param int $id the id of the table to load",
            "@return Orm"
        ],
        "fieldtexts": []
    },
    "get_raw_row": {
        "name": "get_raw_row",
        "params": "",
        "description": [
            "returns the db row array",
            "@return array the db->Record row"
        ],
        "fieldtexts": []
    },
    "get_save_query": {
        "name": "get_save_query",
        "params": "",
        "description": [
            "generates the sql query to save or update the data",
            "@return string the sql query"
        ],
        "fieldtexts": []
    },
    "stmt_save": {
        "name": "stmt_save",
        "params": "",
        "description": [
            "saves (insert or update depending) the current data to db using a prepared statement",
            "@return Orm"
        ],
        "fieldtexts": []
    },
    "save": {
        "name": "save",
        "params": "",
        "description": [
            "commits\/stores any changes to the Invoice to the database",
            "@return Orm"
        ],
        "fieldtexts": []
    },
    "get_table": {
        "name": "get_table",
        "params": "",
        "description": [
            "TFTable::get_table()",
            "Gets the current table and renders it either to HTML or to TEXT depending",
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "load_related": {
        "name": "load_related",
        "params": "$related_class, $local_field, $remote_field = false",
        "description": [
            "loads the main service (package) if any for this service",
            "@param Base_ORM          $related_class instance of the related table class",
            "@param string            $local_field   the field name pointing to a remote table\/field",
            "@param bool|false|string $remote_field  the field name of the remote field to match with, or false to use the same field name as local field",
            "@return \\MyAdmin\\Orm\\Base\\Product"
        ],
        "fieldtexts": []
    },
    "is_billed": {
        "name": "is_billed",
        "params": "",
        "description": [
            "returns whether or not the VPS Service is current billed."
        ],
        "fieldtexts": []
    },
    "getRequestType": {
        "name": "getRequestType",
        "params": "",
        "description": [
            "Gets the cc_log request_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestType": {
        "name": "setRequestType",
        "params": "$request_type",
        "description": [
            "Sets the cc_log request_type",
            "@param string $request_type the new request_type",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_type": {
        "name": "get_request_type",
        "params": "",
        "description": [
            "Gets the cc_log request_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_type": {
        "name": "set_request_type",
        "params": "$request_type",
        "description": [
            "Sets the cc_log request_type",
            "@param string $request_type the new request_type",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestVersion": {
        "name": "getRequestVersion",
        "params": "",
        "description": [
            "Gets the cc_log request_version",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setRequestVersion": {
        "name": "setRequestVersion",
        "params": "$request_version",
        "description": [
            "Sets the cc_log request_version",
            "@param float $request_version the new request_version",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_version": {
        "name": "get_request_version",
        "params": "",
        "description": [
            "Gets the cc_log request_version",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_request_version": {
        "name": "set_request_version",
        "params": "$request_version",
        "description": [
            "Sets the cc_log request_version",
            "@param float $request_version the new request_version",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestEmail": {
        "name": "getRequestEmail",
        "params": "",
        "description": [
            "Gets the cc_log request_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestEmail": {
        "name": "setRequestEmail",
        "params": "$request_email",
        "description": [
            "Sets the cc_log request_email",
            "@param string $request_email the new request_email",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_email": {
        "name": "get_request_email",
        "params": "",
        "description": [
            "Gets the cc_log request_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_email": {
        "name": "set_request_email",
        "params": "$request_email",
        "description": [
            "Sets the cc_log request_email",
            "@param string $request_email the new request_email",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestCardNum": {
        "name": "getRequestCardNum",
        "params": "",
        "description": [
            "Gets the cc_log request_card_num",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestCardNum": {
        "name": "setRequestCardNum",
        "params": "$request_card_num",
        "description": [
            "Sets the cc_log request_card_num",
            "@param string $request_card_num the new request_card_num",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_card_num": {
        "name": "get_request_card_num",
        "params": "",
        "description": [
            "Gets the cc_log request_card_num",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_card_num": {
        "name": "set_request_card_num",
        "params": "$request_card_num",
        "description": [
            "Sets the cc_log request_card_num",
            "@param string $request_card_num the new request_card_num",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestExpDate": {
        "name": "getRequestExpDate",
        "params": "",
        "description": [
            "Gets the cc_log request_exp_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestExpDate": {
        "name": "setRequestExpDate",
        "params": "$request_exp_date",
        "description": [
            "Sets the cc_log request_exp_date",
            "@param string $request_exp_date the new request_exp_date",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_exp_date": {
        "name": "get_request_exp_date",
        "params": "",
        "description": [
            "Gets the cc_log request_exp_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_exp_date": {
        "name": "set_request_exp_date",
        "params": "$request_exp_date",
        "description": [
            "Sets the cc_log request_exp_date",
            "@param string $request_exp_date the new request_exp_date",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestCardCode": {
        "name": "getRequestCardCode",
        "params": "",
        "description": [
            "Gets the cc_log request_card_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestCardCode": {
        "name": "setRequestCardCode",
        "params": "$request_card_code",
        "description": [
            "Sets the cc_log request_card_code",
            "@param string $request_card_code the new request_card_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_card_code": {
        "name": "get_request_card_code",
        "params": "",
        "description": [
            "Gets the cc_log request_card_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_card_code": {
        "name": "set_request_card_code",
        "params": "$request_card_code",
        "description": [
            "Sets the cc_log request_card_code",
            "@param string $request_card_code the new request_card_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestInvoiceNum": {
        "name": "getRequestInvoiceNum",
        "params": "",
        "description": [
            "Gets the cc_log request_invoice_num",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestInvoiceNum": {
        "name": "setRequestInvoiceNum",
        "params": "$request_invoice_num",
        "description": [
            "Sets the cc_log request_invoice_num",
            "@param string $request_invoice_num the new request_invoice_num",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_invoice_num": {
        "name": "get_request_invoice_num",
        "params": "",
        "description": [
            "Gets the cc_log request_invoice_num",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_invoice_num": {
        "name": "set_request_invoice_num",
        "params": "$request_invoice_num",
        "description": [
            "Sets the cc_log request_invoice_num",
            "@param string $request_invoice_num the new request_invoice_num",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestDescription": {
        "name": "getRequestDescription",
        "params": "",
        "description": [
            "Gets the cc_log request_description",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestDescription": {
        "name": "setRequestDescription",
        "params": "$request_description",
        "description": [
            "Sets the cc_log request_description",
            "@param string $request_description the new request_description",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_description": {
        "name": "get_request_description",
        "params": "",
        "description": [
            "Gets the cc_log request_description",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_description": {
        "name": "set_request_description",
        "params": "$request_description",
        "description": [
            "Sets the cc_log request_description",
            "@param string $request_description the new request_description",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestAmount": {
        "name": "getRequestAmount",
        "params": "",
        "description": [
            "Gets the cc_log request_amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestAmount": {
        "name": "setRequestAmount",
        "params": "$request_amount",
        "description": [
            "Sets the cc_log request_amount",
            "@param string $request_amount the new request_amount",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_amount": {
        "name": "get_request_amount",
        "params": "",
        "description": [
            "Gets the cc_log request_amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_amount": {
        "name": "set_request_amount",
        "params": "$request_amount",
        "description": [
            "Sets the cc_log request_amount",
            "@param string $request_amount the new request_amount",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestCustId": {
        "name": "getRequestCustId",
        "params": "",
        "description": [
            "Gets the cc_log request_cust_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestCustId": {
        "name": "setRequestCustId",
        "params": "$request_cust_id",
        "description": [
            "Sets the cc_log request_cust_id",
            "@param string $request_cust_id the new request_cust_id",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_cust_id": {
        "name": "get_request_cust_id",
        "params": "",
        "description": [
            "Gets the cc_log request_cust_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_cust_id": {
        "name": "set_request_cust_id",
        "params": "$request_cust_id",
        "description": [
            "Sets the cc_log request_cust_id",
            "@param string $request_cust_id the new request_cust_id",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestFirstName": {
        "name": "getRequestFirstName",
        "params": "",
        "description": [
            "Gets the cc_log request_first_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestFirstName": {
        "name": "setRequestFirstName",
        "params": "$request_first_name",
        "description": [
            "Sets the cc_log request_first_name",
            "@param string $request_first_name the new request_first_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_first_name": {
        "name": "get_request_first_name",
        "params": "",
        "description": [
            "Gets the cc_log request_first_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_first_name": {
        "name": "set_request_first_name",
        "params": "$request_first_name",
        "description": [
            "Sets the cc_log request_first_name",
            "@param string $request_first_name the new request_first_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestLastName": {
        "name": "getRequestLastName",
        "params": "",
        "description": [
            "Gets the cc_log request_last_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestLastName": {
        "name": "setRequestLastName",
        "params": "$request_last_name",
        "description": [
            "Sets the cc_log request_last_name",
            "@param string $request_last_name the new request_last_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_last_name": {
        "name": "get_request_last_name",
        "params": "",
        "description": [
            "Gets the cc_log request_last_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_last_name": {
        "name": "set_request_last_name",
        "params": "$request_last_name",
        "description": [
            "Sets the cc_log request_last_name",
            "@param string $request_last_name the new request_last_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestCompany": {
        "name": "getRequestCompany",
        "params": "",
        "description": [
            "Gets the cc_log request_company",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestCompany": {
        "name": "setRequestCompany",
        "params": "$request_company",
        "description": [
            "Sets the cc_log request_company",
            "@param string $request_company the new request_company",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_company": {
        "name": "get_request_company",
        "params": "",
        "description": [
            "Gets the cc_log request_company",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_company": {
        "name": "set_request_company",
        "params": "$request_company",
        "description": [
            "Sets the cc_log request_company",
            "@param string $request_company the new request_company",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestAddress": {
        "name": "getRequestAddress",
        "params": "",
        "description": [
            "Gets the cc_log request_address",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestAddress": {
        "name": "setRequestAddress",
        "params": "$request_address",
        "description": [
            "Sets the cc_log request_address",
            "@param string $request_address the new request_address",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_address": {
        "name": "get_request_address",
        "params": "",
        "description": [
            "Gets the cc_log request_address",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_address": {
        "name": "set_request_address",
        "params": "$request_address",
        "description": [
            "Sets the cc_log request_address",
            "@param string $request_address the new request_address",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestCity": {
        "name": "getRequestCity",
        "params": "",
        "description": [
            "Gets the cc_log request_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestCity": {
        "name": "setRequestCity",
        "params": "$request_city",
        "description": [
            "Sets the cc_log request_city",
            "@param string $request_city the new request_city",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_city": {
        "name": "get_request_city",
        "params": "",
        "description": [
            "Gets the cc_log request_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_city": {
        "name": "set_request_city",
        "params": "$request_city",
        "description": [
            "Sets the cc_log request_city",
            "@param string $request_city the new request_city",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestState": {
        "name": "getRequestState",
        "params": "",
        "description": [
            "Gets the cc_log request_state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestState": {
        "name": "setRequestState",
        "params": "$request_state",
        "description": [
            "Sets the cc_log request_state",
            "@param string $request_state the new request_state",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_state": {
        "name": "get_request_state",
        "params": "",
        "description": [
            "Gets the cc_log request_state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_state": {
        "name": "set_request_state",
        "params": "$request_state",
        "description": [
            "Sets the cc_log request_state",
            "@param string $request_state the new request_state",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestZip": {
        "name": "getRequestZip",
        "params": "",
        "description": [
            "Gets the cc_log request_zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestZip": {
        "name": "setRequestZip",
        "params": "$request_zip",
        "description": [
            "Sets the cc_log request_zip",
            "@param string $request_zip the new request_zip",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_zip": {
        "name": "get_request_zip",
        "params": "",
        "description": [
            "Gets the cc_log request_zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_zip": {
        "name": "set_request_zip",
        "params": "$request_zip",
        "description": [
            "Sets the cc_log request_zip",
            "@param string $request_zip the new request_zip",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestCountry": {
        "name": "getRequestCountry",
        "params": "",
        "description": [
            "Gets the cc_log request_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestCountry": {
        "name": "setRequestCountry",
        "params": "$request_country",
        "description": [
            "Sets the cc_log request_country",
            "@param string $request_country the new request_country",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_country": {
        "name": "get_request_country",
        "params": "",
        "description": [
            "Gets the cc_log request_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_country": {
        "name": "set_request_country",
        "params": "$request_country",
        "description": [
            "Sets the cc_log request_country",
            "@param string $request_country the new request_country",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getRequestPhone": {
        "name": "getRequestPhone",
        "params": "",
        "description": [
            "Gets the cc_log request_phone",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRequestPhone": {
        "name": "setRequestPhone",
        "params": "$request_phone",
        "description": [
            "Sets the cc_log request_phone",
            "@param string $request_phone the new request_phone",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_request_phone": {
        "name": "get_request_phone",
        "params": "",
        "description": [
            "Gets the cc_log request_phone",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_request_phone": {
        "name": "set_request_phone",
        "params": "$request_phone",
        "description": [
            "Sets the cc_log request_phone",
            "@param string $request_phone the new request_phone",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultCode": {
        "name": "getResultCode",
        "params": "",
        "description": [
            "Gets the cc_log result_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultCode": {
        "name": "setResultCode",
        "params": "$result_code",
        "description": [
            "Sets the cc_log result_code",
            "@param string $result_code the new result_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_code": {
        "name": "get_result_code",
        "params": "",
        "description": [
            "Gets the cc_log result_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_code": {
        "name": "set_result_code",
        "params": "$result_code",
        "description": [
            "Sets the cc_log result_code",
            "@param string $result_code the new result_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultSubcode": {
        "name": "getResultSubcode",
        "params": "",
        "description": [
            "Gets the cc_log result_subcode",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setResultSubcode": {
        "name": "setResultSubcode",
        "params": "$result_subcode",
        "description": [
            "Sets the cc_log result_subcode",
            "@param int $result_subcode the new result_subcode",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_subcode": {
        "name": "get_result_subcode",
        "params": "",
        "description": [
            "Gets the cc_log result_subcode",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_result_subcode": {
        "name": "set_result_subcode",
        "params": "$result_subcode",
        "description": [
            "Sets the cc_log result_subcode",
            "@param int $result_subcode the new result_subcode",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultReasonCode": {
        "name": "getResultReasonCode",
        "params": "",
        "description": [
            "Gets the cc_log result_reason_code",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setResultReasonCode": {
        "name": "setResultReasonCode",
        "params": "$result_reason_code",
        "description": [
            "Sets the cc_log result_reason_code",
            "@param int $result_reason_code the new result_reason_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_reason_code": {
        "name": "get_result_reason_code",
        "params": "",
        "description": [
            "Gets the cc_log result_reason_code",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_result_reason_code": {
        "name": "set_result_reason_code",
        "params": "$result_reason_code",
        "description": [
            "Sets the cc_log result_reason_code",
            "@param int $result_reason_code the new result_reason_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultReasonText": {
        "name": "getResultReasonText",
        "params": "",
        "description": [
            "Gets the cc_log result_reason_text",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultReasonText": {
        "name": "setResultReasonText",
        "params": "$result_reason_text",
        "description": [
            "Sets the cc_log result_reason_text",
            "@param string $result_reason_text the new result_reason_text",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_reason_text": {
        "name": "get_result_reason_text",
        "params": "",
        "description": [
            "Gets the cc_log result_reason_text",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_reason_text": {
        "name": "set_result_reason_text",
        "params": "$result_reason_text",
        "description": [
            "Sets the cc_log result_reason_text",
            "@param string $result_reason_text the new result_reason_text",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultAuthCode": {
        "name": "getResultAuthCode",
        "params": "",
        "description": [
            "Gets the cc_log result_auth_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultAuthCode": {
        "name": "setResultAuthCode",
        "params": "$result_auth_code",
        "description": [
            "Sets the cc_log result_auth_code",
            "@param string $result_auth_code the new result_auth_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_auth_code": {
        "name": "get_result_auth_code",
        "params": "",
        "description": [
            "Gets the cc_log result_auth_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_auth_code": {
        "name": "set_result_auth_code",
        "params": "$result_auth_code",
        "description": [
            "Sets the cc_log result_auth_code",
            "@param string $result_auth_code the new result_auth_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultAvsCode": {
        "name": "getResultAvsCode",
        "params": "",
        "description": [
            "Gets the cc_log result_avs_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultAvsCode": {
        "name": "setResultAvsCode",
        "params": "$result_avs_code",
        "description": [
            "Sets the cc_log result_avs_code",
            "@param string $result_avs_code the new result_avs_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_avs_code": {
        "name": "get_result_avs_code",
        "params": "",
        "description": [
            "Gets the cc_log result_avs_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_avs_code": {
        "name": "set_result_avs_code",
        "params": "$result_avs_code",
        "description": [
            "Sets the cc_log result_avs_code",
            "@param string $result_avs_code the new result_avs_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultTransId": {
        "name": "getResultTransId",
        "params": "",
        "description": [
            "Gets the cc_log result_trans_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultTransId": {
        "name": "setResultTransId",
        "params": "$result_trans_id",
        "description": [
            "Sets the cc_log result_trans_id",
            "@param string $result_trans_id the new result_trans_id",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_trans_id": {
        "name": "get_result_trans_id",
        "params": "",
        "description": [
            "Gets the cc_log result_trans_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_trans_id": {
        "name": "set_result_trans_id",
        "params": "$result_trans_id",
        "description": [
            "Sets the cc_log result_trans_id",
            "@param string $result_trans_id the new result_trans_id",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultInvoiceNum": {
        "name": "getResultInvoiceNum",
        "params": "",
        "description": [
            "Gets the cc_log result_invoice_num",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultInvoiceNum": {
        "name": "setResultInvoiceNum",
        "params": "$result_invoice_num",
        "description": [
            "Sets the cc_log result_invoice_num",
            "@param string $result_invoice_num the new result_invoice_num",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_invoice_num": {
        "name": "get_result_invoice_num",
        "params": "",
        "description": [
            "Gets the cc_log result_invoice_num",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_invoice_num": {
        "name": "set_result_invoice_num",
        "params": "$result_invoice_num",
        "description": [
            "Sets the cc_log result_invoice_num",
            "@param string $result_invoice_num the new result_invoice_num",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultDescription": {
        "name": "getResultDescription",
        "params": "",
        "description": [
            "Gets the cc_log result_description",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultDescription": {
        "name": "setResultDescription",
        "params": "$result_description",
        "description": [
            "Sets the cc_log result_description",
            "@param string $result_description the new result_description",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_description": {
        "name": "get_result_description",
        "params": "",
        "description": [
            "Gets the cc_log result_description",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_description": {
        "name": "set_result_description",
        "params": "$result_description",
        "description": [
            "Sets the cc_log result_description",
            "@param string $result_description the new result_description",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultAmount": {
        "name": "getResultAmount",
        "params": "",
        "description": [
            "Gets the cc_log result_amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultAmount": {
        "name": "setResultAmount",
        "params": "$result_amount",
        "description": [
            "Sets the cc_log result_amount",
            "@param string $result_amount the new result_amount",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_amount": {
        "name": "get_result_amount",
        "params": "",
        "description": [
            "Gets the cc_log result_amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_amount": {
        "name": "set_result_amount",
        "params": "$result_amount",
        "description": [
            "Sets the cc_log result_amount",
            "@param string $result_amount the new result_amount",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultMethod": {
        "name": "getResultMethod",
        "params": "",
        "description": [
            "Gets the cc_log result_method",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultMethod": {
        "name": "setResultMethod",
        "params": "$result_method",
        "description": [
            "Sets the cc_log result_method",
            "@param string $result_method the new result_method",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_method": {
        "name": "get_result_method",
        "params": "",
        "description": [
            "Gets the cc_log result_method",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_method": {
        "name": "set_result_method",
        "params": "$result_method",
        "description": [
            "Sets the cc_log result_method",
            "@param string $result_method the new result_method",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultCustomerId": {
        "name": "getResultCustomerId",
        "params": "",
        "description": [
            "Gets the cc_log result_customer_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultCustomerId": {
        "name": "setResultCustomerId",
        "params": "$result_customer_id",
        "description": [
            "Sets the cc_log result_customer_id",
            "@param string $result_customer_id the new result_customer_id",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_customer_id": {
        "name": "get_result_customer_id",
        "params": "",
        "description": [
            "Gets the cc_log result_customer_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_customer_id": {
        "name": "set_result_customer_id",
        "params": "$result_customer_id",
        "description": [
            "Sets the cc_log result_customer_id",
            "@param string $result_customer_id the new result_customer_id",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultTransType": {
        "name": "getResultTransType",
        "params": "",
        "description": [
            "Gets the cc_log result_trans_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultTransType": {
        "name": "setResultTransType",
        "params": "$result_trans_type",
        "description": [
            "Sets the cc_log result_trans_type",
            "@param string $result_trans_type the new result_trans_type",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_trans_type": {
        "name": "get_result_trans_type",
        "params": "",
        "description": [
            "Gets the cc_log result_trans_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_trans_type": {
        "name": "set_result_trans_type",
        "params": "$result_trans_type",
        "description": [
            "Sets the cc_log result_trans_type",
            "@param string $result_trans_type the new result_trans_type",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultFirstName": {
        "name": "getResultFirstName",
        "params": "",
        "description": [
            "Gets the cc_log result_first_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultFirstName": {
        "name": "setResultFirstName",
        "params": "$result_first_name",
        "description": [
            "Sets the cc_log result_first_name",
            "@param string $result_first_name the new result_first_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_first_name": {
        "name": "get_result_first_name",
        "params": "",
        "description": [
            "Gets the cc_log result_first_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_first_name": {
        "name": "set_result_first_name",
        "params": "$result_first_name",
        "description": [
            "Sets the cc_log result_first_name",
            "@param string $result_first_name the new result_first_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultLastName": {
        "name": "getResultLastName",
        "params": "",
        "description": [
            "Gets the cc_log result_last_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultLastName": {
        "name": "setResultLastName",
        "params": "$result_last_name",
        "description": [
            "Sets the cc_log result_last_name",
            "@param string $result_last_name the new result_last_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_last_name": {
        "name": "get_result_last_name",
        "params": "",
        "description": [
            "Gets the cc_log result_last_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_last_name": {
        "name": "set_result_last_name",
        "params": "$result_last_name",
        "description": [
            "Sets the cc_log result_last_name",
            "@param string $result_last_name the new result_last_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultCompany": {
        "name": "getResultCompany",
        "params": "",
        "description": [
            "Gets the cc_log result_company",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultCompany": {
        "name": "setResultCompany",
        "params": "$result_company",
        "description": [
            "Sets the cc_log result_company",
            "@param string $result_company the new result_company",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_company": {
        "name": "get_result_company",
        "params": "",
        "description": [
            "Gets the cc_log result_company",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_company": {
        "name": "set_result_company",
        "params": "$result_company",
        "description": [
            "Sets the cc_log result_company",
            "@param string $result_company the new result_company",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultAddress": {
        "name": "getResultAddress",
        "params": "",
        "description": [
            "Gets the cc_log result_address",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultAddress": {
        "name": "setResultAddress",
        "params": "$result_address",
        "description": [
            "Sets the cc_log result_address",
            "@param string $result_address the new result_address",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_address": {
        "name": "get_result_address",
        "params": "",
        "description": [
            "Gets the cc_log result_address",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_address": {
        "name": "set_result_address",
        "params": "$result_address",
        "description": [
            "Sets the cc_log result_address",
            "@param string $result_address the new result_address",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultCity": {
        "name": "getResultCity",
        "params": "",
        "description": [
            "Gets the cc_log result_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultCity": {
        "name": "setResultCity",
        "params": "$result_city",
        "description": [
            "Sets the cc_log result_city",
            "@param string $result_city the new result_city",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_city": {
        "name": "get_result_city",
        "params": "",
        "description": [
            "Gets the cc_log result_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_city": {
        "name": "set_result_city",
        "params": "$result_city",
        "description": [
            "Sets the cc_log result_city",
            "@param string $result_city the new result_city",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultState": {
        "name": "getResultState",
        "params": "",
        "description": [
            "Gets the cc_log result_state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultState": {
        "name": "setResultState",
        "params": "$result_state",
        "description": [
            "Sets the cc_log result_state",
            "@param string $result_state the new result_state",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_state": {
        "name": "get_result_state",
        "params": "",
        "description": [
            "Gets the cc_log result_state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_state": {
        "name": "set_result_state",
        "params": "$result_state",
        "description": [
            "Sets the cc_log result_state",
            "@param string $result_state the new result_state",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultZip": {
        "name": "getResultZip",
        "params": "",
        "description": [
            "Gets the cc_log result_zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultZip": {
        "name": "setResultZip",
        "params": "$result_zip",
        "description": [
            "Sets the cc_log result_zip",
            "@param string $result_zip the new result_zip",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_zip": {
        "name": "get_result_zip",
        "params": "",
        "description": [
            "Gets the cc_log result_zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_zip": {
        "name": "set_result_zip",
        "params": "$result_zip",
        "description": [
            "Sets the cc_log result_zip",
            "@param string $result_zip the new result_zip",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultCountry": {
        "name": "getResultCountry",
        "params": "",
        "description": [
            "Gets the cc_log result_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultCountry": {
        "name": "setResultCountry",
        "params": "$result_country",
        "description": [
            "Sets the cc_log result_country",
            "@param string $result_country the new result_country",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_country": {
        "name": "get_result_country",
        "params": "",
        "description": [
            "Gets the cc_log result_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_country": {
        "name": "set_result_country",
        "params": "$result_country",
        "description": [
            "Sets the cc_log result_country",
            "@param string $result_country the new result_country",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultPhone": {
        "name": "getResultPhone",
        "params": "",
        "description": [
            "Gets the cc_log result_phone",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultPhone": {
        "name": "setResultPhone",
        "params": "$result_phone",
        "description": [
            "Sets the cc_log result_phone",
            "@param string $result_phone the new result_phone",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_phone": {
        "name": "get_result_phone",
        "params": "",
        "description": [
            "Gets the cc_log result_phone",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_phone": {
        "name": "set_result_phone",
        "params": "$result_phone",
        "description": [
            "Sets the cc_log result_phone",
            "@param string $result_phone the new result_phone",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultFax": {
        "name": "getResultFax",
        "params": "",
        "description": [
            "Gets the cc_log result_fax",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultFax": {
        "name": "setResultFax",
        "params": "$result_fax",
        "description": [
            "Sets the cc_log result_fax",
            "@param string $result_fax the new result_fax",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_fax": {
        "name": "get_result_fax",
        "params": "",
        "description": [
            "Gets the cc_log result_fax",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_fax": {
        "name": "set_result_fax",
        "params": "$result_fax",
        "description": [
            "Sets the cc_log result_fax",
            "@param string $result_fax the new result_fax",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultEmail": {
        "name": "getResultEmail",
        "params": "",
        "description": [
            "Gets the cc_log result_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultEmail": {
        "name": "setResultEmail",
        "params": "$result_email",
        "description": [
            "Sets the cc_log result_email",
            "@param string $result_email the new result_email",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_email": {
        "name": "get_result_email",
        "params": "",
        "description": [
            "Gets the cc_log result_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_email": {
        "name": "set_result_email",
        "params": "$result_email",
        "description": [
            "Sets the cc_log result_email",
            "@param string $result_email the new result_email",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultShiptoLastName": {
        "name": "getResultShiptoLastName",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_last_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultShiptoLastName": {
        "name": "setResultShiptoLastName",
        "params": "$result_shipto_last_name",
        "description": [
            "Sets the cc_log result_shipto_last_name",
            "@param string $result_shipto_last_name the new result_shipto_last_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_shipto_last_name": {
        "name": "get_result_shipto_last_name",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_last_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_shipto_last_name": {
        "name": "set_result_shipto_last_name",
        "params": "$result_shipto_last_name",
        "description": [
            "Sets the cc_log result_shipto_last_name",
            "@param string $result_shipto_last_name the new result_shipto_last_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultShiptoFirstName": {
        "name": "getResultShiptoFirstName",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_first_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultShiptoFirstName": {
        "name": "setResultShiptoFirstName",
        "params": "$result_shipto_first_name",
        "description": [
            "Sets the cc_log result_shipto_first_name",
            "@param string $result_shipto_first_name the new result_shipto_first_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_shipto_first_name": {
        "name": "get_result_shipto_first_name",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_first_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_shipto_first_name": {
        "name": "set_result_shipto_first_name",
        "params": "$result_shipto_first_name",
        "description": [
            "Sets the cc_log result_shipto_first_name",
            "@param string $result_shipto_first_name the new result_shipto_first_name",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultShiptoCompany": {
        "name": "getResultShiptoCompany",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_company",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultShiptoCompany": {
        "name": "setResultShiptoCompany",
        "params": "$result_shipto_company",
        "description": [
            "Sets the cc_log result_shipto_company",
            "@param string $result_shipto_company the new result_shipto_company",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_shipto_company": {
        "name": "get_result_shipto_company",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_company",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_shipto_company": {
        "name": "set_result_shipto_company",
        "params": "$result_shipto_company",
        "description": [
            "Sets the cc_log result_shipto_company",
            "@param string $result_shipto_company the new result_shipto_company",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultShiptoAddress": {
        "name": "getResultShiptoAddress",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_address",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultShiptoAddress": {
        "name": "setResultShiptoAddress",
        "params": "$result_shipto_address",
        "description": [
            "Sets the cc_log result_shipto_address",
            "@param string $result_shipto_address the new result_shipto_address",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_shipto_address": {
        "name": "get_result_shipto_address",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_address",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_shipto_address": {
        "name": "set_result_shipto_address",
        "params": "$result_shipto_address",
        "description": [
            "Sets the cc_log result_shipto_address",
            "@param string $result_shipto_address the new result_shipto_address",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultShiptoCity": {
        "name": "getResultShiptoCity",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultShiptoCity": {
        "name": "setResultShiptoCity",
        "params": "$result_shipto_city",
        "description": [
            "Sets the cc_log result_shipto_city",
            "@param string $result_shipto_city the new result_shipto_city",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_shipto_city": {
        "name": "get_result_shipto_city",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_shipto_city": {
        "name": "set_result_shipto_city",
        "params": "$result_shipto_city",
        "description": [
            "Sets the cc_log result_shipto_city",
            "@param string $result_shipto_city the new result_shipto_city",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultShiptoState": {
        "name": "getResultShiptoState",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultShiptoState": {
        "name": "setResultShiptoState",
        "params": "$result_shipto_state",
        "description": [
            "Sets the cc_log result_shipto_state",
            "@param string $result_shipto_state the new result_shipto_state",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_shipto_state": {
        "name": "get_result_shipto_state",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_shipto_state": {
        "name": "set_result_shipto_state",
        "params": "$result_shipto_state",
        "description": [
            "Sets the cc_log result_shipto_state",
            "@param string $result_shipto_state the new result_shipto_state",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultShiptoZip": {
        "name": "getResultShiptoZip",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultShiptoZip": {
        "name": "setResultShiptoZip",
        "params": "$result_shipto_zip",
        "description": [
            "Sets the cc_log result_shipto_zip",
            "@param string $result_shipto_zip the new result_shipto_zip",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_shipto_zip": {
        "name": "get_result_shipto_zip",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_shipto_zip": {
        "name": "set_result_shipto_zip",
        "params": "$result_shipto_zip",
        "description": [
            "Sets the cc_log result_shipto_zip",
            "@param string $result_shipto_zip the new result_shipto_zip",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultShiptoCountry": {
        "name": "getResultShiptoCountry",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultShiptoCountry": {
        "name": "setResultShiptoCountry",
        "params": "$result_shipto_country",
        "description": [
            "Sets the cc_log result_shipto_country",
            "@param string $result_shipto_country the new result_shipto_country",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_shipto_country": {
        "name": "get_result_shipto_country",
        "params": "",
        "description": [
            "Gets the cc_log result_shipto_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_shipto_country": {
        "name": "set_result_shipto_country",
        "params": "$result_shipto_country",
        "description": [
            "Sets the cc_log result_shipto_country",
            "@param string $result_shipto_country the new result_shipto_country",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultTax": {
        "name": "getResultTax",
        "params": "",
        "description": [
            "Gets the cc_log result_tax",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultTax": {
        "name": "setResultTax",
        "params": "$result_tax",
        "description": [
            "Sets the cc_log result_tax",
            "@param string $result_tax the new result_tax",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_tax": {
        "name": "get_result_tax",
        "params": "",
        "description": [
            "Gets the cc_log result_tax",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_tax": {
        "name": "set_result_tax",
        "params": "$result_tax",
        "description": [
            "Sets the cc_log result_tax",
            "@param string $result_tax the new result_tax",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultDuty": {
        "name": "getResultDuty",
        "params": "",
        "description": [
            "Gets the cc_log result_duty",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultDuty": {
        "name": "setResultDuty",
        "params": "$result_duty",
        "description": [
            "Sets the cc_log result_duty",
            "@param string $result_duty the new result_duty",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_duty": {
        "name": "get_result_duty",
        "params": "",
        "description": [
            "Gets the cc_log result_duty",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_duty": {
        "name": "set_result_duty",
        "params": "$result_duty",
        "description": [
            "Sets the cc_log result_duty",
            "@param string $result_duty the new result_duty",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultFreight": {
        "name": "getResultFreight",
        "params": "",
        "description": [
            "Gets the cc_log result_freight",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultFreight": {
        "name": "setResultFreight",
        "params": "$result_freight",
        "description": [
            "Sets the cc_log result_freight",
            "@param string $result_freight the new result_freight",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_freight": {
        "name": "get_result_freight",
        "params": "",
        "description": [
            "Gets the cc_log result_freight",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_freight": {
        "name": "set_result_freight",
        "params": "$result_freight",
        "description": [
            "Sets the cc_log result_freight",
            "@param string $result_freight the new result_freight",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultTaxExempt": {
        "name": "getResultTaxExempt",
        "params": "",
        "description": [
            "Gets the cc_log result_tax_exempt",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultTaxExempt": {
        "name": "setResultTaxExempt",
        "params": "$result_tax_exempt",
        "description": [
            "Sets the cc_log result_tax_exempt",
            "@param string $result_tax_exempt the new result_tax_exempt",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_tax_exempt": {
        "name": "get_result_tax_exempt",
        "params": "",
        "description": [
            "Gets the cc_log result_tax_exempt",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_tax_exempt": {
        "name": "set_result_tax_exempt",
        "params": "$result_tax_exempt",
        "description": [
            "Sets the cc_log result_tax_exempt",
            "@param string $result_tax_exempt the new result_tax_exempt",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultPurchaseOrderNum": {
        "name": "getResultPurchaseOrderNum",
        "params": "",
        "description": [
            "Gets the cc_log result_purchase_order_num",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultPurchaseOrderNum": {
        "name": "setResultPurchaseOrderNum",
        "params": "$result_purchase_order_num",
        "description": [
            "Sets the cc_log result_purchase_order_num",
            "@param string $result_purchase_order_num the new result_purchase_order_num",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_purchase_order_num": {
        "name": "get_result_purchase_order_num",
        "params": "",
        "description": [
            "Gets the cc_log result_purchase_order_num",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_purchase_order_num": {
        "name": "set_result_purchase_order_num",
        "params": "$result_purchase_order_num",
        "description": [
            "Sets the cc_log result_purchase_order_num",
            "@param string $result_purchase_order_num the new result_purchase_order_num",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultMd5": {
        "name": "getResultMd5",
        "params": "",
        "description": [
            "Gets the cc_log result_md5",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultMd5": {
        "name": "setResultMd5",
        "params": "$result_md5",
        "description": [
            "Sets the cc_log result_md5",
            "@param string $result_md5 the new result_md5",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_md5": {
        "name": "get_result_md5",
        "params": "",
        "description": [
            "Gets the cc_log result_md5",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_md5": {
        "name": "set_result_md5",
        "params": "$result_md5",
        "description": [
            "Sets the cc_log result_md5",
            "@param string $result_md5 the new result_md5",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultCardCode": {
        "name": "getResultCardCode",
        "params": "",
        "description": [
            "Gets the cc_log result_card_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultCardCode": {
        "name": "setResultCardCode",
        "params": "$result_card_code",
        "description": [
            "Sets the cc_log result_card_code",
            "@param string $result_card_code the new result_card_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_card_code": {
        "name": "get_result_card_code",
        "params": "",
        "description": [
            "Gets the cc_log result_card_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_card_code": {
        "name": "set_result_card_code",
        "params": "$result_card_code",
        "description": [
            "Sets the cc_log result_card_code",
            "@param string $result_card_code the new result_card_code",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultCardVerification": {
        "name": "getResultCardVerification",
        "params": "",
        "description": [
            "Gets the cc_log result_card_verification",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultCardVerification": {
        "name": "setResultCardVerification",
        "params": "$result_card_verification",
        "description": [
            "Sets the cc_log result_card_verification",
            "@param string $result_card_verification the new result_card_verification",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_card_verification": {
        "name": "get_result_card_verification",
        "params": "",
        "description": [
            "Gets the cc_log result_card_verification",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_card_verification": {
        "name": "set_result_card_verification",
        "params": "$result_card_verification",
        "description": [
            "Sets the cc_log result_card_verification",
            "@param string $result_card_verification the new result_card_verification",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultAccountNum": {
        "name": "getResultAccountNum",
        "params": "",
        "description": [
            "Gets the cc_log result_account_num",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultAccountNum": {
        "name": "setResultAccountNum",
        "params": "$result_account_num",
        "description": [
            "Sets the cc_log result_account_num",
            "@param string $result_account_num the new result_account_num",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_account_num": {
        "name": "get_result_account_num",
        "params": "",
        "description": [
            "Gets the cc_log result_account_num",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_account_num": {
        "name": "set_result_account_num",
        "params": "$result_account_num",
        "description": [
            "Sets the cc_log result_account_num",
            "@param string $result_account_num the new result_account_num",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getResultCardType": {
        "name": "getResultCardType",
        "params": "",
        "description": [
            "Gets the cc_log result_card_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResultCardType": {
        "name": "setResultCardType",
        "params": "$result_card_type",
        "description": [
            "Sets the cc_log result_card_type",
            "@param string $result_card_type the new result_card_type",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "get_result_card_type": {
        "name": "get_result_card_type",
        "params": "",
        "description": [
            "Gets the cc_log result_card_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_result_card_type": {
        "name": "set_result_card_type",
        "params": "$result_card_type",
        "description": [
            "Sets the cc_log result_card_type",
            "@param string $result_card_type the new result_card_type",
            "@return \\MyAdmin\\Orm\\Cc_Log"
        ],
        "fieldtexts": []
    },
    "getOrderID": {
        "name": "getOrderID",
        "params": "",
        "description": [
            "Gets the cj Order_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setOrderID": {
        "name": "setOrderID",
        "params": "$Order_ID",
        "description": [
            "Sets the cj Order_ID",
            "@param string $Order_ID the new Order_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Order_ID": {
        "name": "get_Order_ID",
        "params": "",
        "description": [
            "Gets the cj Order_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Order_ID": {
        "name": "set_Order_ID",
        "params": "$Order_ID",
        "description": [
            "Sets the cj Order_ID",
            "@param string $Order_ID the new Order_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getID": {
        "name": "getID",
        "params": "",
        "description": [
            "Gets the cj ID",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setID": {
        "name": "setID",
        "params": "$ID",
        "description": [
            "Sets the cj ID",
            "@param int $ID the new ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_ID": {
        "name": "get_ID",
        "params": "",
        "description": [
            "Gets the cj ID",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ID": {
        "name": "set_ID",
        "params": "$ID",
        "description": [
            "Sets the cj ID",
            "@param int $ID the new ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getPostingDate": {
        "name": "getPostingDate",
        "params": "",
        "description": [
            "Gets the cj Posting_Date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPostingDate": {
        "name": "setPostingDate",
        "params": "$Posting_Date",
        "description": [
            "Sets the cj Posting_Date",
            "@param string $Posting_Date the new Posting_Date",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Posting_Date": {
        "name": "get_Posting_Date",
        "params": "",
        "description": [
            "Gets the cj Posting_Date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Posting_Date": {
        "name": "set_Posting_Date",
        "params": "$Posting_Date",
        "description": [
            "Sets the cj Posting_Date",
            "@param string $Posting_Date the new Posting_Date",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getEventDateXXX": {
        "name": "getEventDateXXX",
        "params": "",
        "description": [
            "Gets the cj Event_DateXXX",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEventDateXXX": {
        "name": "setEventDateXXX",
        "params": "$Event_DateXXX",
        "description": [
            "Sets the cj Event_DateXXX",
            "@param string $Event_DateXXX the new Event_DateXXX",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Event_DateXXX": {
        "name": "get_Event_DateXXX",
        "params": "",
        "description": [
            "Gets the cj Event_DateXXX",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Event_DateXXX": {
        "name": "set_Event_DateXXX",
        "params": "$Event_DateXXX",
        "description": [
            "Sets the cj Event_DateXXX",
            "@param string $Event_DateXXX the new Event_DateXXX",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getActionName": {
        "name": "getActionName",
        "params": "",
        "description": [
            "Gets the cj Action_Name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setActionName": {
        "name": "setActionName",
        "params": "$Action_Name",
        "description": [
            "Sets the cj Action_Name",
            "@param string $Action_Name the new Action_Name",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Action_Name": {
        "name": "get_Action_Name",
        "params": "",
        "description": [
            "Gets the cj Action_Name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Action_Name": {
        "name": "set_Action_Name",
        "params": "$Action_Name",
        "description": [
            "Sets the cj Action_Name",
            "@param string $Action_Name the new Action_Name",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Type": {
        "name": "get_Type",
        "params": "",
        "description": [
            "Gets the cj Type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Type": {
        "name": "set_Type",
        "params": "$Type",
        "description": [
            "Sets the cj Type",
            "@param string $Type the new Type",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getAllAccountingTransactionHeaderCorrelationBasis": {
        "name": "getAllAccountingTransactionHeaderCorrelationBasis",
        "params": "",
        "description": [
            "Gets the cj all_accounting_transaction_header_correlation_basis",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAllAccountingTransactionHeaderCorrelationBasis": {
        "name": "setAllAccountingTransactionHeaderCorrelationBasis",
        "params": "$all_accounting_transaction_header_correlation_basis",
        "description": [
            "Sets the cj all_accounting_transaction_header_correlation_basis",
            "@param string $all_accounting_transaction_header_correlation_basis the new all_accounting_transaction_header_correlation_basis",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_all_accounting_transaction_header_correlation_basis": {
        "name": "get_all_accounting_transaction_header_correlation_basis",
        "params": "",
        "description": [
            "Gets the cj all_accounting_transaction_header_correlation_basis",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_all_accounting_transaction_header_correlation_basis": {
        "name": "set_all_accounting_transaction_header_correlation_basis",
        "params": "$all_accounting_transaction_header_correlation_basis",
        "description": [
            "Sets the cj all_accounting_transaction_header_correlation_basis",
            "@param string $all_accounting_transaction_header_correlation_basis the new all_accounting_transaction_header_correlation_basis",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Status": {
        "name": "get_Status",
        "params": "",
        "description": [
            "Gets the cj Status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Status": {
        "name": "set_Status",
        "params": "$Status",
        "description": [
            "Sets the cj Status",
            "@param string $Status the new Status",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getCorrected": {
        "name": "getCorrected",
        "params": "",
        "description": [
            "Gets the cj Corrected",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCorrected": {
        "name": "setCorrected",
        "params": "$Corrected",
        "description": [
            "Sets the cj Corrected",
            "@param string $Corrected the new Corrected",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Corrected": {
        "name": "get_Corrected",
        "params": "",
        "description": [
            "Gets the cj Corrected",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Corrected": {
        "name": "set_Corrected",
        "params": "$Corrected",
        "description": [
            "Sets the cj Corrected",
            "@param string $Corrected the new Corrected",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getSaleAmount": {
        "name": "getSaleAmount",
        "params": "",
        "description": [
            "Gets the cj Sale_Amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSaleAmount": {
        "name": "setSaleAmount",
        "params": "$Sale_Amount",
        "description": [
            "Sets the cj Sale_Amount",
            "@param string $Sale_Amount the new Sale_Amount",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Sale_Amount": {
        "name": "get_Sale_Amount",
        "params": "",
        "description": [
            "Gets the cj Sale_Amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Sale_Amount": {
        "name": "set_Sale_Amount",
        "params": "$Sale_Amount",
        "description": [
            "Sets the cj Sale_Amount",
            "@param string $Sale_Amount the new Sale_Amount",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getOrderDiscount": {
        "name": "getOrderDiscount",
        "params": "",
        "description": [
            "Gets the cj Order_Discount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setOrderDiscount": {
        "name": "setOrderDiscount",
        "params": "$Order_Discount",
        "description": [
            "Sets the cj Order_Discount",
            "@param string $Order_Discount the new Order_Discount",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Order_Discount": {
        "name": "get_Order_Discount",
        "params": "",
        "description": [
            "Gets the cj Order_Discount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Order_Discount": {
        "name": "set_Order_Discount",
        "params": "$Order_Discount",
        "description": [
            "Sets the cj Order_Discount",
            "@param string $Order_Discount the new Order_Discount",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getPublisherCommission": {
        "name": "getPublisherCommission",
        "params": "",
        "description": [
            "Gets the cj Publisher_Commission",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPublisherCommission": {
        "name": "setPublisherCommission",
        "params": "$Publisher_Commission",
        "description": [
            "Sets the cj Publisher_Commission",
            "@param string $Publisher_Commission the new Publisher_Commission",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Publisher_Commission": {
        "name": "get_Publisher_Commission",
        "params": "",
        "description": [
            "Gets the cj Publisher_Commission",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Publisher_Commission": {
        "name": "set_Publisher_Commission",
        "params": "$Publisher_Commission",
        "description": [
            "Sets the cj Publisher_Commission",
            "@param string $Publisher_Commission the new Publisher_Commission",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getCJFee": {
        "name": "getCJFee",
        "params": "",
        "description": [
            "Gets the cj CJ_Fee",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCJFee": {
        "name": "setCJFee",
        "params": "$CJ_Fee",
        "description": [
            "Sets the cj CJ_Fee",
            "@param string $CJ_Fee the new CJ_Fee",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_CJ_Fee": {
        "name": "get_CJ_Fee",
        "params": "",
        "description": [
            "Gets the cj CJ_Fee",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_CJ_Fee": {
        "name": "set_CJ_Fee",
        "params": "$CJ_Fee",
        "description": [
            "Sets the cj CJ_Fee",
            "@param string $CJ_Fee the new CJ_Fee",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getPublisherID": {
        "name": "getPublisherID",
        "params": "",
        "description": [
            "Gets the cj Publisher_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPublisherID": {
        "name": "setPublisherID",
        "params": "$Publisher_ID",
        "description": [
            "Sets the cj Publisher_ID",
            "@param string $Publisher_ID the new Publisher_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Publisher_ID": {
        "name": "get_Publisher_ID",
        "params": "",
        "description": [
            "Gets the cj Publisher_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Publisher_ID": {
        "name": "set_Publisher_ID",
        "params": "$Publisher_ID",
        "description": [
            "Sets the cj Publisher_ID",
            "@param string $Publisher_ID the new Publisher_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getPublisherName": {
        "name": "getPublisherName",
        "params": "",
        "description": [
            "Gets the cj Publisher_Name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPublisherName": {
        "name": "setPublisherName",
        "params": "$Publisher_Name",
        "description": [
            "Sets the cj Publisher_Name",
            "@param string $Publisher_Name the new Publisher_Name",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Publisher_Name": {
        "name": "get_Publisher_Name",
        "params": "",
        "description": [
            "Gets the cj Publisher_Name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Publisher_Name": {
        "name": "set_Publisher_Name",
        "params": "$Publisher_Name",
        "description": [
            "Sets the cj Publisher_Name",
            "@param string $Publisher_Name the new Publisher_Name",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getWebsiteID": {
        "name": "getWebsiteID",
        "params": "",
        "description": [
            "Gets the cj Website_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setWebsiteID": {
        "name": "setWebsiteID",
        "params": "$Website_ID",
        "description": [
            "Sets the cj Website_ID",
            "@param string $Website_ID the new Website_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Website_ID": {
        "name": "get_Website_ID",
        "params": "",
        "description": [
            "Gets the cj Website_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Website_ID": {
        "name": "set_Website_ID",
        "params": "$Website_ID",
        "description": [
            "Sets the cj Website_ID",
            "@param string $Website_ID the new Website_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getWebsiteName": {
        "name": "getWebsiteName",
        "params": "",
        "description": [
            "Gets the cj Website_Name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setWebsiteName": {
        "name": "setWebsiteName",
        "params": "$Website_Name",
        "description": [
            "Sets the cj Website_Name",
            "@param string $Website_Name the new Website_Name",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Website_Name": {
        "name": "get_Website_Name",
        "params": "",
        "description": [
            "Gets the cj Website_Name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Website_Name": {
        "name": "set_Website_Name",
        "params": "$Website_Name",
        "description": [
            "Sets the cj Website_Name",
            "@param string $Website_Name the new Website_Name",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getLinkID": {
        "name": "getLinkID",
        "params": "",
        "description": [
            "Gets the cj Link_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLinkID": {
        "name": "setLinkID",
        "params": "$Link_ID",
        "description": [
            "Sets the cj Link_ID",
            "@param string $Link_ID the new Link_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Link_ID": {
        "name": "get_Link_ID",
        "params": "",
        "description": [
            "Gets the cj Link_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Link_ID": {
        "name": "set_Link_ID",
        "params": "$Link_ID",
        "description": [
            "Sets the cj Link_ID",
            "@param string $Link_ID the new Link_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getClickDate": {
        "name": "getClickDate",
        "params": "",
        "description": [
            "Gets the cj Click_Date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setClickDate": {
        "name": "setClickDate",
        "params": "$Click_Date",
        "description": [
            "Sets the cj Click_Date",
            "@param string $Click_Date the new Click_Date",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Click_Date": {
        "name": "get_Click_Date",
        "params": "",
        "description": [
            "Gets the cj Click_Date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Click_Date": {
        "name": "set_Click_Date",
        "params": "$Click_Date",
        "description": [
            "Sets the cj Click_Date",
            "@param string $Click_Date the new Click_Date",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getActionID": {
        "name": "getActionID",
        "params": "",
        "description": [
            "Gets the cj Action_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setActionID": {
        "name": "setActionID",
        "params": "$Action_ID",
        "description": [
            "Sets the cj Action_ID",
            "@param string $Action_ID the new Action_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Action_ID": {
        "name": "get_Action_ID",
        "params": "",
        "description": [
            "Gets the cj Action_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Action_ID": {
        "name": "set_Action_ID",
        "params": "$Action_ID",
        "description": [
            "Sets the cj Action_ID",
            "@param string $Action_ID the new Action_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getAdOwnerAdvertiserID": {
        "name": "getAdOwnerAdvertiserID",
        "params": "",
        "description": [
            "Gets the cj Ad_Owner_Advertiser_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAdOwnerAdvertiserID": {
        "name": "setAdOwnerAdvertiserID",
        "params": "$Ad_Owner_Advertiser_ID",
        "description": [
            "Sets the cj Ad_Owner_Advertiser_ID",
            "@param string $Ad_Owner_Advertiser_ID the new Ad_Owner_Advertiser_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "get_Ad_Owner_Advertiser_ID": {
        "name": "get_Ad_Owner_Advertiser_ID",
        "params": "",
        "description": [
            "Gets the cj Ad_Owner_Advertiser_ID",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_Ad_Owner_Advertiser_ID": {
        "name": "set_Ad_Owner_Advertiser_ID",
        "params": "$Ad_Owner_Advertiser_ID",
        "description": [
            "Sets the cj Ad_Owner_Advertiser_ID",
            "@param string $Ad_Owner_Advertiser_ID the new Ad_Owner_Advertiser_ID",
            "@return \\MyAdmin\\Orm\\Cj"
        ],
        "fieldtexts": []
    },
    "getUpdated": {
        "name": "getUpdated",
        "params": "",
        "description": [
            "Gets the vps_ips6 updated",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setUpdated": {
        "name": "setUpdated",
        "params": "$updated",
        "description": [
            "Sets the vps_ips6 updated",
            "@param string $updated the new updated",
            "@return \\MyAdmin\\Orm\\Vps_Ips6"
        ],
        "fieldtexts": []
    },
    "get_updated": {
        "name": "get_updated",
        "params": "",
        "description": [
            "Gets the vps_ips6 updated",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_updated": {
        "name": "set_updated",
        "params": "$updated",
        "description": [
            "Sets the vps_ips6 updated",
            "@param string $updated the new updated",
            "@return \\MyAdmin\\Orm\\Vps_Ips6"
        ],
        "fieldtexts": []
    },
    "getCreator": {
        "name": "getCreator",
        "params": "",
        "description": [
            "Gets the user_log creator",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setCreator": {
        "name": "setCreator",
        "params": "$creator",
        "description": [
            "Sets the user_log creator",
            "@param int $creator the new creator",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "get_creator": {
        "name": "get_creator",
        "params": "",
        "description": [
            "Gets the user_log creator",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_creator": {
        "name": "set_creator",
        "params": "$creator",
        "description": [
            "Sets the user_log creator",
            "@param int $creator the new creator",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "getSection": {
        "name": "getSection",
        "params": "",
        "description": [
            "Gets the user_log section",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSection": {
        "name": "setSection",
        "params": "$section",
        "description": [
            "Sets the user_log section",
            "@param string $section the new section",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "get_section": {
        "name": "get_section",
        "params": "",
        "description": [
            "Gets the user_log section",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_section": {
        "name": "set_section",
        "params": "$section",
        "description": [
            "Sets the user_log section",
            "@param string $section the new section",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "getNewValue": {
        "name": "getNewValue",
        "params": "",
        "description": [
            "Gets the user_log new_value",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setNewValue": {
        "name": "setNewValue",
        "params": "$new_value",
        "description": [
            "Sets the user_log new_value",
            "@param string $new_value the new new_value",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "get_new_value": {
        "name": "get_new_value",
        "params": "",
        "description": [
            "Gets the user_log new_value",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_new_value": {
        "name": "set_new_value",
        "params": "$new_value",
        "description": [
            "Sets the user_log new_value",
            "@param string $new_value the new new_value",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "getOldValue": {
        "name": "getOldValue",
        "params": "",
        "description": [
            "Gets the user_log old_value",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setOldValue": {
        "name": "setOldValue",
        "params": "$old_value",
        "description": [
            "Sets the user_log old_value",
            "@param string $old_value the new old_value",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "get_old_value": {
        "name": "get_old_value",
        "params": "",
        "description": [
            "Gets the user_log old_value",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_old_value": {
        "name": "set_old_value",
        "params": "$old_value",
        "description": [
            "Sets the user_log old_value",
            "@param string $old_value the new old_value",
            "@return \\MyAdmin\\Orm\\User_Log"
        ],
        "fieldtexts": []
    },
    "getAccountId": {
        "name": "getAccountId",
        "params": "",
        "description": [
            "Gets the maxmind_output account_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setAccountId": {
        "name": "setAccountId",
        "params": "$account_id",
        "description": [
            "Sets the maxmind_output account_id",
            "@param int $account_id the new account_id",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_account_id": {
        "name": "get_account_id",
        "params": "",
        "description": [
            "Gets the maxmind_output account_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_account_id": {
        "name": "set_account_id",
        "params": "$account_id",
        "description": [
            "Sets the maxmind_output account_id",
            "@param int $account_id the new account_id",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getComment": {
        "name": "getComment",
        "params": "",
        "description": [
            "Gets the websites comment",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setComment": {
        "name": "setComment",
        "params": "$comment",
        "description": [
            "Sets the websites comment",
            "@param mixed $comment the new comment",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "get_comment": {
        "name": "get_comment",
        "params": "",
        "description": [
            "Gets the websites comment",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_comment": {
        "name": "set_comment",
        "params": "$comment",
        "description": [
            "Sets the websites comment",
            "@param mixed $comment the new comment",
            "@return \\MyAdmin\\Orm\\Website"
        ],
        "fieldtexts": []
    },
    "getEntered": {
        "name": "getEntered",
        "params": "",
        "description": [
            "Gets the comments entered",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEntered": {
        "name": "setEntered",
        "params": "$entered",
        "description": [
            "Sets the comments entered",
            "@param string $entered the new entered",
            "@return \\MyAdmin\\Orm\\Comment"
        ],
        "fieldtexts": []
    },
    "get_entered": {
        "name": "get_entered",
        "params": "",
        "description": [
            "Gets the comments entered",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_entered": {
        "name": "set_entered",
        "params": "$entered",
        "description": [
            "Sets the comments entered",
            "@param string $entered the new entered",
            "@return \\MyAdmin\\Orm\\Comment"
        ],
        "fieldtexts": []
    },
    "getIso": {
        "name": "getIso",
        "params": "",
        "description": [
            "Gets the country iso",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIso": {
        "name": "setIso",
        "params": "$iso",
        "description": [
            "Sets the country iso",
            "@param string $iso the new iso",
            "@return \\MyAdmin\\Orm\\Country"
        ],
        "fieldtexts": []
    },
    "get_iso": {
        "name": "get_iso",
        "params": "",
        "description": [
            "Gets the country iso",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_iso": {
        "name": "set_iso",
        "params": "$iso",
        "description": [
            "Sets the country iso",
            "@param string $iso the new iso",
            "@return \\MyAdmin\\Orm\\Country"
        ],
        "fieldtexts": []
    },
    "getPrintableName": {
        "name": "getPrintableName",
        "params": "",
        "description": [
            "Gets the country printable_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPrintableName": {
        "name": "setPrintableName",
        "params": "$printable_name",
        "description": [
            "Sets the country printable_name",
            "@param string $printable_name the new printable_name",
            "@return \\MyAdmin\\Orm\\Country"
        ],
        "fieldtexts": []
    },
    "get_printable_name": {
        "name": "get_printable_name",
        "params": "",
        "description": [
            "Gets the country printable_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_printable_name": {
        "name": "set_printable_name",
        "params": "$printable_name",
        "description": [
            "Sets the country printable_name",
            "@param string $printable_name the new printable_name",
            "@return \\MyAdmin\\Orm\\Country"
        ],
        "fieldtexts": []
    },
    "getIso3": {
        "name": "getIso3",
        "params": "",
        "description": [
            "Gets the country_t iso3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIso3": {
        "name": "setIso3",
        "params": "$iso3",
        "description": [
            "Sets the country_t iso3",
            "@param string $iso3 the new iso3",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "get_iso3": {
        "name": "get_iso3",
        "params": "",
        "description": [
            "Gets the country_t iso3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_iso3": {
        "name": "set_iso3",
        "params": "$iso3",
        "description": [
            "Sets the country_t iso3",
            "@param string $iso3 the new iso3",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "getNumcode": {
        "name": "getNumcode",
        "params": "",
        "description": [
            "Gets the country_t numcode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setNumcode": {
        "name": "setNumcode",
        "params": "$numcode",
        "description": [
            "Sets the country_t numcode",
            "@param string $numcode the new numcode",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "get_numcode": {
        "name": "get_numcode",
        "params": "",
        "description": [
            "Gets the country_t numcode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_numcode": {
        "name": "set_numcode",
        "params": "$numcode",
        "description": [
            "Sets the country_t numcode",
            "@param string $numcode the new numcode",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "getCountryId": {
        "name": "getCountryId",
        "params": "",
        "description": [
            "Gets the country_t country_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setCountryId": {
        "name": "setCountryId",
        "params": "$country_id",
        "description": [
            "Sets the country_t country_id",
            "@param int $country_id the new country_id",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "get_country_id": {
        "name": "get_country_id",
        "params": "",
        "description": [
            "Gets the country_t country_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_country_id": {
        "name": "set_country_id",
        "params": "$country_id",
        "description": [
            "Sets the country_t country_id",
            "@param int $country_id the new country_id",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "getIso2": {
        "name": "getIso2",
        "params": "",
        "description": [
            "Gets the country_t iso2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIso2": {
        "name": "setIso2",
        "params": "$iso2",
        "description": [
            "Sets the country_t iso2",
            "@param string $iso2 the new iso2",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "get_iso2": {
        "name": "get_iso2",
        "params": "",
        "description": [
            "Gets the country_t iso2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_iso2": {
        "name": "set_iso2",
        "params": "$iso2",
        "description": [
            "Sets the country_t iso2",
            "@param string $iso2 the new iso2",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "getShortName": {
        "name": "getShortName",
        "params": "",
        "description": [
            "Gets the country_t short_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setShortName": {
        "name": "setShortName",
        "params": "$short_name",
        "description": [
            "Sets the country_t short_name",
            "@param string $short_name the new short_name",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "get_short_name": {
        "name": "get_short_name",
        "params": "",
        "description": [
            "Gets the country_t short_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_short_name": {
        "name": "set_short_name",
        "params": "$short_name",
        "description": [
            "Sets the country_t short_name",
            "@param string $short_name the new short_name",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "getLongName": {
        "name": "getLongName",
        "params": "",
        "description": [
            "Gets the country_t long_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLongName": {
        "name": "setLongName",
        "params": "$long_name",
        "description": [
            "Sets the country_t long_name",
            "@param string $long_name the new long_name",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "get_long_name": {
        "name": "get_long_name",
        "params": "",
        "description": [
            "Gets the country_t long_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_long_name": {
        "name": "set_long_name",
        "params": "$long_name",
        "description": [
            "Sets the country_t long_name",
            "@param string $long_name the new long_name",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "getUnMember": {
        "name": "getUnMember",
        "params": "",
        "description": [
            "Gets the country_t un_member",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setUnMember": {
        "name": "setUnMember",
        "params": "$un_member",
        "description": [
            "Sets the country_t un_member",
            "@param string $un_member the new un_member",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "get_un_member": {
        "name": "get_un_member",
        "params": "",
        "description": [
            "Gets the country_t un_member",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_un_member": {
        "name": "set_un_member",
        "params": "$un_member",
        "description": [
            "Sets the country_t un_member",
            "@param string $un_member the new un_member",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "getCallingCode": {
        "name": "getCallingCode",
        "params": "",
        "description": [
            "Gets the country_t calling_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCallingCode": {
        "name": "setCallingCode",
        "params": "$calling_code",
        "description": [
            "Sets the country_t calling_code",
            "@param string $calling_code the new calling_code",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "get_calling_code": {
        "name": "get_calling_code",
        "params": "",
        "description": [
            "Gets the country_t calling_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_calling_code": {
        "name": "set_calling_code",
        "params": "$calling_code",
        "description": [
            "Sets the country_t calling_code",
            "@param string $calling_code the new calling_code",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "getCctld": {
        "name": "getCctld",
        "params": "",
        "description": [
            "Gets the country_t cctld",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCctld": {
        "name": "setCctld",
        "params": "$cctld",
        "description": [
            "Sets the country_t cctld",
            "@param string $cctld the new cctld",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "get_cctld": {
        "name": "get_cctld",
        "params": "",
        "description": [
            "Gets the country_t cctld",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_cctld": {
        "name": "set_cctld",
        "params": "$cctld",
        "description": [
            "Sets the country_t cctld",
            "@param string $cctld the new cctld",
            "@return \\MyAdmin\\Orm\\Country_T"
        ],
        "fieldtexts": []
    },
    "getCustomer": {
        "name": "getCustomer",
        "params": "",
        "description": [
            "Gets the coupons customer",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setCustomer": {
        "name": "setCustomer",
        "params": "$customer",
        "description": [
            "Sets the coupons customer",
            "@param int $customer the new customer",
            "@return \\MyAdmin\\Orm\\Coupon"
        ],
        "fieldtexts": []
    },
    "get_customer": {
        "name": "get_customer",
        "params": "",
        "description": [
            "Gets the coupons customer",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_customer": {
        "name": "set_customer",
        "params": "$customer",
        "description": [
            "Sets the coupons customer",
            "@param int $customer the new customer",
            "@return \\MyAdmin\\Orm\\Coupon"
        ],
        "fieldtexts": []
    },
    "getUsable": {
        "name": "getUsable",
        "params": "",
        "description": [
            "Gets the vps_ips6 usable",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setUsable": {
        "name": "setUsable",
        "params": "$usable",
        "description": [
            "Sets the vps_ips6 usable",
            "@param int $usable the new usable",
            "@return \\MyAdmin\\Orm\\Vps_Ips6"
        ],
        "fieldtexts": []
    },
    "get_usable": {
        "name": "get_usable",
        "params": "",
        "description": [
            "Gets the vps_ips6 usable",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_usable": {
        "name": "set_usable",
        "params": "$usable",
        "description": [
            "Sets the vps_ips6 usable",
            "@param int $usable the new usable",
            "@return \\MyAdmin\\Orm\\Vps_Ips6"
        ],
        "fieldtexts": []
    },
    "getApplies": {
        "name": "getApplies",
        "params": "",
        "description": [
            "Gets the coupons applies",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApplies": {
        "name": "setApplies",
        "params": "$applies",
        "description": [
            "Sets the coupons applies",
            "@param string $applies the new applies",
            "@return \\MyAdmin\\Orm\\Coupon"
        ],
        "fieldtexts": []
    },
    "get_applies": {
        "name": "get_applies",
        "params": "",
        "description": [
            "Gets the coupons applies",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_applies": {
        "name": "set_applies",
        "params": "$applies",
        "description": [
            "Sets the coupons applies",
            "@param string $applies the new applies",
            "@return \\MyAdmin\\Orm\\Coupon"
        ],
        "fieldtexts": []
    },
    "getOnetime": {
        "name": "getOnetime",
        "params": "",
        "description": [
            "Gets the coupons onetime",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setOnetime": {
        "name": "setOnetime",
        "params": "$onetime",
        "description": [
            "Sets the coupons onetime",
            "@param int $onetime the new onetime",
            "@return \\MyAdmin\\Orm\\Coupon"
        ],
        "fieldtexts": []
    },
    "get_onetime": {
        "name": "get_onetime",
        "params": "",
        "description": [
            "Gets the coupons onetime",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_onetime": {
        "name": "set_onetime",
        "params": "$onetime",
        "description": [
            "Sets the coupons onetime",
            "@param int $onetime the new onetime",
            "@return \\MyAdmin\\Orm\\Coupon"
        ],
        "fieldtexts": []
    },
    "get_module": {
        "name": "get_module",
        "params": "",
        "description": [
            "Gets the whitelist module",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_module": {
        "name": "set_module",
        "params": "$module",
        "description": [
            "Sets the whitelist module",
            "@param string $module the new module",
            "@return \\MyAdmin\\Orm\\Whitelist"
        ],
        "fieldtexts": []
    },
    "getJob": {
        "name": "getJob",
        "params": "",
        "description": [
            "Gets the cron_schedules job",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setJob": {
        "name": "setJob",
        "params": "$job",
        "description": [
            "Sets the cron_schedules job",
            "@param int $job the new job",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "get_job": {
        "name": "get_job",
        "params": "",
        "description": [
            "Gets the cron_schedules job",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_job": {
        "name": "set_job",
        "params": "$job",
        "description": [
            "Sets the cron_schedules job",
            "@param int $job the new job",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "getExecution": {
        "name": "getExecution",
        "params": "",
        "description": [
            "Gets the cron_outputs execution",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setExecution": {
        "name": "setExecution",
        "params": "$execution",
        "description": [
            "Sets the cron_outputs execution",
            "@param int $execution the new execution",
            "@return \\MyAdmin\\Orm\\Cron_Output"
        ],
        "fieldtexts": []
    },
    "get_execution": {
        "name": "get_execution",
        "params": "",
        "description": [
            "Gets the cron_outputs execution",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_execution": {
        "name": "set_execution",
        "params": "$execution",
        "description": [
            "Sets the cron_outputs execution",
            "@param int $execution the new execution",
            "@return \\MyAdmin\\Orm\\Cron_Output"
        ],
        "fieldtexts": []
    },
    "getSchedule": {
        "name": "getSchedule",
        "params": "",
        "description": [
            "Gets the cron_alerts schedule",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSchedule": {
        "name": "setSchedule",
        "params": "$schedule",
        "description": [
            "Sets the cron_alerts schedule",
            "@param int $schedule the new schedule",
            "@return \\MyAdmin\\Orm\\Cron_Alert"
        ],
        "fieldtexts": []
    },
    "get_schedule": {
        "name": "get_schedule",
        "params": "",
        "description": [
            "Gets the cron_alerts schedule",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_schedule": {
        "name": "set_schedule",
        "params": "$schedule",
        "description": [
            "Sets the cron_alerts schedule",
            "@param int $schedule the new schedule",
            "@return \\MyAdmin\\Orm\\Cron_Alert"
        ],
        "fieldtexts": []
    },
    "getKind": {
        "name": "getKind",
        "params": "",
        "description": [
            "Gets the cron_alerts kind",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setKind": {
        "name": "setKind",
        "params": "$kind",
        "description": [
            "Sets the cron_alerts kind",
            "@param string $kind the new kind",
            "@return \\MyAdmin\\Orm\\Cron_Alert"
        ],
        "fieldtexts": []
    },
    "get_kind": {
        "name": "get_kind",
        "params": "",
        "description": [
            "Gets the cron_alerts kind",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_kind": {
        "name": "set_kind",
        "params": "$kind",
        "description": [
            "Sets the cron_alerts kind",
            "@param string $kind the new kind",
            "@return \\MyAdmin\\Orm\\Cron_Alert"
        ],
        "fieldtexts": []
    },
    "getExpected": {
        "name": "getExpected",
        "params": "",
        "description": [
            "Gets the cron_alerts expected",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setExpected": {
        "name": "setExpected",
        "params": "$expected",
        "description": [
            "Sets the cron_alerts expected",
            "@param string $expected the new expected",
            "@return \\MyAdmin\\Orm\\Cron_Alert"
        ],
        "fieldtexts": []
    },
    "get_expected": {
        "name": "get_expected",
        "params": "",
        "description": [
            "Gets the cron_alerts expected",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_expected": {
        "name": "set_expected",
        "params": "$expected",
        "description": [
            "Sets the cron_alerts expected",
            "@param string $expected the new expected",
            "@return \\MyAdmin\\Orm\\Cron_Alert"
        ],
        "fieldtexts": []
    },
    "getMedium": {
        "name": "getMedium",
        "params": "",
        "description": [
            "Gets the cron_alerts medium",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMedium": {
        "name": "setMedium",
        "params": "$medium",
        "description": [
            "Sets the cron_alerts medium",
            "@param string $medium the new medium",
            "@return \\MyAdmin\\Orm\\Cron_Alert"
        ],
        "fieldtexts": []
    },
    "get_medium": {
        "name": "get_medium",
        "params": "",
        "description": [
            "Gets the cron_alerts medium",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_medium": {
        "name": "set_medium",
        "params": "$medium",
        "description": [
            "Sets the cron_alerts medium",
            "@param string $medium the new medium",
            "@return \\MyAdmin\\Orm\\Cron_Alert"
        ],
        "fieldtexts": []
    },
    "getSent": {
        "name": "getSent",
        "params": "",
        "description": [
            "Gets the cron_alerts sent",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSent": {
        "name": "setSent",
        "params": "$sent",
        "description": [
            "Sets the cron_alerts sent",
            "@param string $sent the new sent",
            "@return \\MyAdmin\\Orm\\Cron_Alert"
        ],
        "fieldtexts": []
    },
    "get_sent": {
        "name": "get_sent",
        "params": "",
        "description": [
            "Gets the cron_alerts sent",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_sent": {
        "name": "set_sent",
        "params": "$sent",
        "description": [
            "Sets the cron_alerts sent",
            "@param string $sent the new sent",
            "@return \\MyAdmin\\Orm\\Cron_Alert"
        ],
        "fieldtexts": []
    },
    "getNumber": {
        "name": "getNumber",
        "params": "",
        "description": [
            "Gets the phone number",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumber": {
        "name": "setNumber",
        "params": "$number",
        "description": [
            "Sets the phone number",
            "@param int $number the new number",
            "@return \\MyAdmin\\Orm\\Phone"
        ],
        "fieldtexts": []
    },
    "get_number": {
        "name": "get_number",
        "params": "",
        "description": [
            "Gets the phone number",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_number": {
        "name": "set_number",
        "params": "$number",
        "description": [
            "Sets the phone number",
            "@param int $number the new number",
            "@return \\MyAdmin\\Orm\\Phone"
        ],
        "fieldtexts": []
    },
    "getCreated": {
        "name": "getCreated",
        "params": "",
        "description": [
            "Gets the prepays created",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCreated": {
        "name": "setCreated",
        "params": "$created",
        "description": [
            "Sets the prepays created",
            "@param string $created the new created",
            "@return \\MyAdmin\\Orm\\Prepay"
        ],
        "fieldtexts": []
    },
    "get_created": {
        "name": "get_created",
        "params": "",
        "description": [
            "Gets the prepays created",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_created": {
        "name": "set_created",
        "params": "$created",
        "description": [
            "Sets the prepays created",
            "@param string $created the new created",
            "@return \\MyAdmin\\Orm\\Prepay"
        ],
        "fieldtexts": []
    },
    "getStarted": {
        "name": "getStarted",
        "params": "",
        "description": [
            "Gets the cron_executions started",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setStarted": {
        "name": "setStarted",
        "params": "$started",
        "description": [
            "Sets the cron_executions started",
            "@param string $started the new started",
            "@return \\MyAdmin\\Orm\\Cron_Execution"
        ],
        "fieldtexts": []
    },
    "get_started": {
        "name": "get_started",
        "params": "",
        "description": [
            "Gets the cron_executions started",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_started": {
        "name": "set_started",
        "params": "$started",
        "description": [
            "Sets the cron_executions started",
            "@param string $started the new started",
            "@return \\MyAdmin\\Orm\\Cron_Execution"
        ],
        "fieldtexts": []
    },
    "getFinished": {
        "name": "getFinished",
        "params": "",
        "description": [
            "Gets the cron_executions finished",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFinished": {
        "name": "setFinished",
        "params": "$finished",
        "description": [
            "Sets the cron_executions finished",
            "@param string $finished the new finished",
            "@return \\MyAdmin\\Orm\\Cron_Execution"
        ],
        "fieldtexts": []
    },
    "get_finished": {
        "name": "get_finished",
        "params": "",
        "description": [
            "Gets the cron_executions finished",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_finished": {
        "name": "set_finished",
        "params": "$finished",
        "description": [
            "Sets the cron_executions finished",
            "@param string $finished the new finished",
            "@return \\MyAdmin\\Orm\\Cron_Execution"
        ],
        "fieldtexts": []
    },
    "getExitStatus": {
        "name": "getExitStatus",
        "params": "",
        "description": [
            "Gets the cron_executions exit_status",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setExitStatus": {
        "name": "setExitStatus",
        "params": "$exit_status",
        "description": [
            "Sets the cron_executions exit_status",
            "@param int $exit_status the new exit_status",
            "@return \\MyAdmin\\Orm\\Cron_Execution"
        ],
        "fieldtexts": []
    },
    "get_exit_status": {
        "name": "get_exit_status",
        "params": "",
        "description": [
            "Gets the cron_executions exit_status",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_exit_status": {
        "name": "set_exit_status",
        "params": "$exit_status",
        "description": [
            "Sets the cron_executions exit_status",
            "@param int $exit_status the new exit_status",
            "@return \\MyAdmin\\Orm\\Cron_Execution"
        ],
        "fieldtexts": []
    },
    "getHash": {
        "name": "getHash",
        "params": "",
        "description": [
            "Gets the cron_jobs hash",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setHash": {
        "name": "setHash",
        "params": "$hash",
        "description": [
            "Sets the cron_jobs hash",
            "@param string $hash the new hash",
            "@return \\MyAdmin\\Orm\\Cron_Job"
        ],
        "fieldtexts": []
    },
    "get_hash": {
        "name": "get_hash",
        "params": "",
        "description": [
            "Gets the cron_jobs hash",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_hash": {
        "name": "set_hash",
        "params": "$hash",
        "description": [
            "Sets the cron_jobs hash",
            "@param string $hash the new hash",
            "@return \\MyAdmin\\Orm\\Cron_Job"
        ],
        "fieldtexts": []
    },
    "getCommand": {
        "name": "getCommand",
        "params": "",
        "description": [
            "Gets the cron_jobs command",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCommand": {
        "name": "setCommand",
        "params": "$command",
        "description": [
            "Sets the cron_jobs command",
            "@param string $command the new command",
            "@return \\MyAdmin\\Orm\\Cron_Job"
        ],
        "fieldtexts": []
    },
    "get_command": {
        "name": "get_command",
        "params": "",
        "description": [
            "Gets the cron_jobs command",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_command": {
        "name": "set_command",
        "params": "$command",
        "description": [
            "Sets the cron_jobs command",
            "@param string $command the new command",
            "@return \\MyAdmin\\Orm\\Cron_Job"
        ],
        "fieldtexts": []
    },
    "getEnabled": {
        "name": "getEnabled",
        "params": "",
        "description": [
            "Gets the cron_jobs enabled",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setEnabled": {
        "name": "setEnabled",
        "params": "$enabled",
        "description": [
            "Sets the cron_jobs enabled",
            "@param int $enabled the new enabled",
            "@return \\MyAdmin\\Orm\\Cron_Job"
        ],
        "fieldtexts": []
    },
    "get_enabled": {
        "name": "get_enabled",
        "params": "",
        "description": [
            "Gets the cron_jobs enabled",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_enabled": {
        "name": "set_enabled",
        "params": "$enabled",
        "description": [
            "Sets the cron_jobs enabled",
            "@param int $enabled the new enabled",
            "@return \\MyAdmin\\Orm\\Cron_Job"
        ],
        "fieldtexts": []
    },
    "getExecutions": {
        "name": "getExecutions",
        "params": "",
        "description": [
            "Gets the cron_jobs executions",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setExecutions": {
        "name": "setExecutions",
        "params": "$executions",
        "description": [
            "Sets the cron_jobs executions",
            "@param mixed $executions the new executions",
            "@return \\MyAdmin\\Orm\\Cron_Job"
        ],
        "fieldtexts": []
    },
    "get_executions": {
        "name": "get_executions",
        "params": "",
        "description": [
            "Gets the cron_jobs executions",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_executions": {
        "name": "set_executions",
        "params": "$executions",
        "description": [
            "Sets the cron_jobs executions",
            "@param mixed $executions the new executions",
            "@return \\MyAdmin\\Orm\\Cron_Job"
        ],
        "fieldtexts": []
    },
    "getSeq": {
        "name": "getSeq",
        "params": "",
        "description": [
            "Gets the cron_outputs seq",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSeq": {
        "name": "setSeq",
        "params": "$seq",
        "description": [
            "Sets the cron_outputs seq",
            "@param int $seq the new seq",
            "@return \\MyAdmin\\Orm\\Cron_Output"
        ],
        "fieldtexts": []
    },
    "get_seq": {
        "name": "get_seq",
        "params": "",
        "description": [
            "Gets the cron_outputs seq",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_seq": {
        "name": "set_seq",
        "params": "$seq",
        "description": [
            "Sets the cron_outputs seq",
            "@param int $seq the new seq",
            "@return \\MyAdmin\\Orm\\Cron_Output"
        ],
        "fieldtexts": []
    },
    "getOutput": {
        "name": "getOutput",
        "params": "",
        "description": [
            "Gets the cron_outputs output",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setOutput": {
        "name": "setOutput",
        "params": "$output",
        "description": [
            "Sets the cron_outputs output",
            "@param string $output the new output",
            "@return \\MyAdmin\\Orm\\Cron_Output"
        ],
        "fieldtexts": []
    },
    "get_output": {
        "name": "get_output",
        "params": "",
        "description": [
            "Gets the cron_outputs output",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_output": {
        "name": "set_output",
        "params": "$output",
        "description": [
            "Sets the cron_outputs output",
            "@param string $output the new output",
            "@return \\MyAdmin\\Orm\\Cron_Output"
        ],
        "fieldtexts": []
    },
    "getMinute": {
        "name": "getMinute",
        "params": "",
        "description": [
            "Gets the cron_schedules minute",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMinute": {
        "name": "setMinute",
        "params": "$minute",
        "description": [
            "Sets the cron_schedules minute",
            "@param string $minute the new minute",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "get_minute": {
        "name": "get_minute",
        "params": "",
        "description": [
            "Gets the cron_schedules minute",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_minute": {
        "name": "set_minute",
        "params": "$minute",
        "description": [
            "Sets the cron_schedules minute",
            "@param string $minute the new minute",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "getHour": {
        "name": "getHour",
        "params": "",
        "description": [
            "Gets the cron_schedules hour",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setHour": {
        "name": "setHour",
        "params": "$hour",
        "description": [
            "Sets the cron_schedules hour",
            "@param string $hour the new hour",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "get_hour": {
        "name": "get_hour",
        "params": "",
        "description": [
            "Gets the cron_schedules hour",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_hour": {
        "name": "set_hour",
        "params": "$hour",
        "description": [
            "Sets the cron_schedules hour",
            "@param string $hour the new hour",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "getDayOfMonth": {
        "name": "getDayOfMonth",
        "params": "",
        "description": [
            "Gets the cron_schedules day_of_month",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDayOfMonth": {
        "name": "setDayOfMonth",
        "params": "$day_of_month",
        "description": [
            "Sets the cron_schedules day_of_month",
            "@param string $day_of_month the new day_of_month",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "get_day_of_month": {
        "name": "get_day_of_month",
        "params": "",
        "description": [
            "Gets the cron_schedules day_of_month",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_day_of_month": {
        "name": "set_day_of_month",
        "params": "$day_of_month",
        "description": [
            "Sets the cron_schedules day_of_month",
            "@param string $day_of_month the new day_of_month",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "getMonth": {
        "name": "getMonth",
        "params": "",
        "description": [
            "Gets the cron_schedules month",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMonth": {
        "name": "setMonth",
        "params": "$month",
        "description": [
            "Sets the cron_schedules month",
            "@param string $month the new month",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "get_month": {
        "name": "get_month",
        "params": "",
        "description": [
            "Gets the cron_schedules month",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_month": {
        "name": "set_month",
        "params": "$month",
        "description": [
            "Sets the cron_schedules month",
            "@param string $month the new month",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "getDayOfWeek": {
        "name": "getDayOfWeek",
        "params": "",
        "description": [
            "Gets the cron_schedules day_of_week",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDayOfWeek": {
        "name": "setDayOfWeek",
        "params": "$day_of_week",
        "description": [
            "Sets the cron_schedules day_of_week",
            "@param string $day_of_week the new day_of_week",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "get_day_of_week": {
        "name": "get_day_of_week",
        "params": "",
        "description": [
            "Gets the cron_schedules day_of_week",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_day_of_week": {
        "name": "set_day_of_week",
        "params": "$day_of_week",
        "description": [
            "Sets the cron_schedules day_of_week",
            "@param string $day_of_week the new day_of_week",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "getSpecial": {
        "name": "getSpecial",
        "params": "",
        "description": [
            "Gets the cron_schedules special",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSpecial": {
        "name": "setSpecial",
        "params": "$special",
        "description": [
            "Sets the cron_schedules special",
            "@param string $special the new special",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "get_special": {
        "name": "get_special",
        "params": "",
        "description": [
            "Gets the cron_schedules special",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_special": {
        "name": "set_special",
        "params": "$special",
        "description": [
            "Sets the cron_schedules special",
            "@param string $special the new special",
            "@return \\MyAdmin\\Orm\\Cron_Schedule"
        ],
        "fieldtexts": []
    },
    "getPrice": {
        "name": "getPrice",
        "params": "",
        "description": [
            "Gets the salesmanager_items price",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setPrice": {
        "name": "setPrice",
        "params": "$price",
        "description": [
            "Sets the salesmanager_items price",
            "@param float $price the new price",
            "@return \\MyAdmin\\Orm\\Salesmanager_Item"
        ],
        "fieldtexts": []
    },
    "get_price": {
        "name": "get_price",
        "params": "",
        "description": [
            "Gets the salesmanager_items price",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_price": {
        "name": "set_price",
        "params": "$price",
        "description": [
            "Sets the salesmanager_items price",
            "@param float $price the new price",
            "@return \\MyAdmin\\Orm\\Salesmanager_Item"
        ],
        "fieldtexts": []
    },
    "getImg": {
        "name": "getImg",
        "params": "",
        "description": [
            "Gets the dedicated_os img",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setImg": {
        "name": "setImg",
        "params": "$img",
        "description": [
            "Sets the dedicated_os img",
            "@param string $img the new img",
            "@return \\MyAdmin\\Orm\\Dedicated_O"
        ],
        "fieldtexts": []
    },
    "get_img": {
        "name": "get_img",
        "params": "",
        "description": [
            "Gets the dedicated_os img",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_img": {
        "name": "set_img",
        "params": "$img",
        "description": [
            "Sets the dedicated_os img",
            "@param string $img the new img",
            "@return \\MyAdmin\\Orm\\Dedicated_O"
        ],
        "fieldtexts": []
    },
    "getShortDesc": {
        "name": "getShortDesc",
        "params": "",
        "description": [
            "Gets the dedicated_type short_desc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setShortDesc": {
        "name": "setShortDesc",
        "params": "$short_desc",
        "description": [
            "Sets the dedicated_type short_desc",
            "@param string $short_desc the new short_desc",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "get_short_desc": {
        "name": "get_short_desc",
        "params": "",
        "description": [
            "Gets the dedicated_type short_desc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_short_desc": {
        "name": "set_short_desc",
        "params": "$short_desc",
        "description": [
            "Sets the dedicated_type short_desc",
            "@param string $short_desc the new short_desc",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "getLongDesc": {
        "name": "getLongDesc",
        "params": "",
        "description": [
            "Gets the dedicated_os long_desc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLongDesc": {
        "name": "setLongDesc",
        "params": "$long_desc",
        "description": [
            "Sets the dedicated_os long_desc",
            "@param string $long_desc the new long_desc",
            "@return \\MyAdmin\\Orm\\Dedicated_O"
        ],
        "fieldtexts": []
    },
    "get_long_desc": {
        "name": "get_long_desc",
        "params": "",
        "description": [
            "Gets the dedicated_os long_desc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_long_desc": {
        "name": "set_long_desc",
        "params": "$long_desc",
        "description": [
            "Sets the dedicated_os long_desc",
            "@param string $long_desc the new long_desc",
            "@return \\MyAdmin\\Orm\\Dedicated_O"
        ],
        "fieldtexts": []
    },
    "getQty": {
        "name": "getQty",
        "params": "",
        "description": [
            "Gets the dedicated_ips qty",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setQty": {
        "name": "setQty",
        "params": "$qty",
        "description": [
            "Sets the dedicated_ips qty",
            "@param string $qty the new qty",
            "@return \\MyAdmin\\Orm\\Dedicated_Ip"
        ],
        "fieldtexts": []
    },
    "get_qty": {
        "name": "get_qty",
        "params": "",
        "description": [
            "Gets the dedicated_ips qty",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_qty": {
        "name": "set_qty",
        "params": "$qty",
        "description": [
            "Sets the dedicated_ips qty",
            "@param string $qty the new qty",
            "@return \\MyAdmin\\Orm\\Dedicated_Ip"
        ],
        "fieldtexts": []
    },
    "getActive": {
        "name": "getActive",
        "params": "",
        "description": [
            "Gets the dedicated_os active",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setActive": {
        "name": "setActive",
        "params": "$active",
        "description": [
            "Sets the dedicated_os active",
            "@param int $active the new active",
            "@return \\MyAdmin\\Orm\\Dedicated_O"
        ],
        "fieldtexts": []
    },
    "get_active": {
        "name": "get_active",
        "params": "",
        "description": [
            "Gets the dedicated_os active",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_active": {
        "name": "set_active",
        "params": "$active",
        "description": [
            "Sets the dedicated_os active",
            "@param int $active the new active",
            "@return \\MyAdmin\\Orm\\Dedicated_O"
        ],
        "fieldtexts": []
    },
    "getMonthlyPrice": {
        "name": "getMonthlyPrice",
        "params": "",
        "description": [
            "Gets the dedicated_os monthly_price",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setMonthlyPrice": {
        "name": "setMonthlyPrice",
        "params": "$monthly_price",
        "description": [
            "Sets the dedicated_os monthly_price",
            "@param int $monthly_price the new monthly_price",
            "@return \\MyAdmin\\Orm\\Dedicated_O"
        ],
        "fieldtexts": []
    },
    "get_monthly_price": {
        "name": "get_monthly_price",
        "params": "",
        "description": [
            "Gets the dedicated_os monthly_price",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_monthly_price": {
        "name": "set_monthly_price",
        "params": "$monthly_price",
        "description": [
            "Sets the dedicated_os monthly_price",
            "@param int $monthly_price the new monthly_price",
            "@return \\MyAdmin\\Orm\\Dedicated_O"
        ],
        "fieldtexts": []
    },
    "getOsType": {
        "name": "getOsType",
        "params": "",
        "description": [
            "Gets the dedicated_cp os_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setOsType": {
        "name": "setOsType",
        "params": "$os_type",
        "description": [
            "Sets the dedicated_cp os_type",
            "@param string $os_type the new os_type",
            "@return \\MyAdmin\\Orm\\Dedicated_Cp"
        ],
        "fieldtexts": []
    },
    "get_os_type": {
        "name": "get_os_type",
        "params": "",
        "description": [
            "Gets the dedicated_cp os_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_os_type": {
        "name": "set_os_type",
        "params": "$os_type",
        "description": [
            "Sets the dedicated_cp os_type",
            "@param string $os_type the new os_type",
            "@return \\MyAdmin\\Orm\\Dedicated_Cp"
        ],
        "fieldtexts": []
    },
    "getFsb": {
        "name": "getFsb",
        "params": "",
        "description": [
            "Gets the dedicated_cpu fsb",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFsb": {
        "name": "setFsb",
        "params": "$fsb",
        "description": [
            "Sets the dedicated_cpu fsb",
            "@param string $fsb the new fsb",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "get_fsb": {
        "name": "get_fsb",
        "params": "",
        "description": [
            "Gets the dedicated_cpu fsb",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fsb": {
        "name": "set_fsb",
        "params": "$fsb",
        "description": [
            "Sets the dedicated_cpu fsb",
            "@param string $fsb the new fsb",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "getManu": {
        "name": "getManu",
        "params": "",
        "description": [
            "Gets the dedicated_hd manu",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setManu": {
        "name": "setManu",
        "params": "$manu",
        "description": [
            "Sets the dedicated_hd manu",
            "@param string $manu the new manu",
            "@return \\MyAdmin\\Orm\\Dedicated_Hd"
        ],
        "fieldtexts": []
    },
    "get_manu": {
        "name": "get_manu",
        "params": "",
        "description": [
            "Gets the dedicated_hd manu",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_manu": {
        "name": "set_manu",
        "params": "$manu",
        "description": [
            "Sets the dedicated_hd manu",
            "@param string $manu the new manu",
            "@return \\MyAdmin\\Orm\\Dedicated_Hd"
        ],
        "fieldtexts": []
    },
    "getSpeed": {
        "name": "getSpeed",
        "params": "",
        "description": [
            "Gets the vps_master_details speed",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSpeed": {
        "name": "setSpeed",
        "params": "$speed",
        "description": [
            "Sets the vps_master_details speed",
            "@param int $speed the new speed",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_speed": {
        "name": "get_speed",
        "params": "",
        "description": [
            "Gets the vps_master_details speed",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_speed": {
        "name": "set_speed",
        "params": "$speed",
        "description": [
            "Sets the vps_master_details speed",
            "@param int $speed the new speed",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getCache": {
        "name": "getCache",
        "params": "",
        "description": [
            "Gets the dedicated_cpu cache",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCache": {
        "name": "setCache",
        "params": "$cache",
        "description": [
            "Sets the dedicated_cpu cache",
            "@param string $cache the new cache",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "get_cache": {
        "name": "get_cache",
        "params": "",
        "description": [
            "Gets the dedicated_cpu cache",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_cache": {
        "name": "set_cache",
        "params": "$cache",
        "description": [
            "Sets the dedicated_cpu cache",
            "@param string $cache the new cache",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "getNumCores": {
        "name": "getNumCores",
        "params": "",
        "description": [
            "Gets the dedicated_cpu num_cores",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumCores": {
        "name": "setNumCores",
        "params": "$num_cores",
        "description": [
            "Sets the dedicated_cpu num_cores",
            "@param int $num_cores the new num_cores",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "get_num_cores": {
        "name": "get_num_cores",
        "params": "",
        "description": [
            "Gets the dedicated_cpu num_cores",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_num_cores": {
        "name": "set_num_cores",
        "params": "$num_cores",
        "description": [
            "Sets the dedicated_cpu num_cores",
            "@param int $num_cores the new num_cores",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "getNumCpus": {
        "name": "getNumCpus",
        "params": "",
        "description": [
            "Gets the dedicated_cpu num_cpus",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumCpus": {
        "name": "setNumCpus",
        "params": "$num_cpus",
        "description": [
            "Sets the dedicated_cpu num_cpus",
            "@param int $num_cpus the new num_cpus",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "get_num_cpus": {
        "name": "get_num_cpus",
        "params": "",
        "description": [
            "Gets the dedicated_cpu num_cpus",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_num_cpus": {
        "name": "set_num_cpus",
        "params": "$num_cpus",
        "description": [
            "Sets the dedicated_cpu num_cpus",
            "@param int $num_cpus the new num_cpus",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "getMaxRam": {
        "name": "getMaxRam",
        "params": "",
        "description": [
            "Gets the dedicated_cpu max_ram",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setMaxRam": {
        "name": "setMaxRam",
        "params": "$max_ram",
        "description": [
            "Sets the dedicated_cpu max_ram",
            "@param int $max_ram the new max_ram",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "get_max_ram": {
        "name": "get_max_ram",
        "params": "",
        "description": [
            "Gets the dedicated_cpu max_ram",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_max_ram": {
        "name": "set_max_ram",
        "params": "$max_ram",
        "description": [
            "Sets the dedicated_cpu max_ram",
            "@param int $max_ram the new max_ram",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "getMinRam": {
        "name": "getMinRam",
        "params": "",
        "description": [
            "Gets the dedicated_cpu min_ram",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setMinRam": {
        "name": "setMinRam",
        "params": "$min_ram",
        "description": [
            "Sets the dedicated_cpu min_ram",
            "@param int $min_ram the new min_ram",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "get_min_ram": {
        "name": "get_min_ram",
        "params": "",
        "description": [
            "Gets the dedicated_cpu min_ram",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_min_ram": {
        "name": "set_min_ram",
        "params": "$min_ram",
        "description": [
            "Sets the dedicated_cpu min_ram",
            "@param int $min_ram the new min_ram",
            "@return \\MyAdmin\\Orm\\Dedicated_Cpu"
        ],
        "fieldtexts": []
    },
    "getDiscount": {
        "name": "getDiscount",
        "params": "",
        "description": [
            "Gets the servers discount",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setDiscount": {
        "name": "setDiscount",
        "params": "$discount",
        "description": [
            "Sets the servers discount",
            "@param float $discount the new discount",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_discount": {
        "name": "get_discount",
        "params": "",
        "description": [
            "Gets the servers discount",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_discount": {
        "name": "set_discount",
        "params": "$discount",
        "description": [
            "Sets the servers discount",
            "@param float $discount the new discount",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getHidden": {
        "name": "getHidden",
        "params": "",
        "description": [
            "Gets the dedicated_hd hidden",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setHidden": {
        "name": "setHidden",
        "params": "$hidden",
        "description": [
            "Sets the dedicated_hd hidden",
            "@param int $hidden the new hidden",
            "@return \\MyAdmin\\Orm\\Dedicated_Hd"
        ],
        "fieldtexts": []
    },
    "get_hidden": {
        "name": "get_hidden",
        "params": "",
        "description": [
            "Gets the dedicated_hd hidden",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_hidden": {
        "name": "set_hidden",
        "params": "$hidden",
        "description": [
            "Sets the dedicated_hd hidden",
            "@param int $hidden the new hidden",
            "@return \\MyAdmin\\Orm\\Dedicated_Hd"
        ],
        "fieldtexts": []
    },
    "getDedicatedTag": {
        "name": "getDedicatedTag",
        "params": "",
        "description": [
            "Gets the servers dedicated_tag",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDedicatedTag": {
        "name": "setDedicatedTag",
        "params": "$dedicated_tag",
        "description": [
            "Sets the servers dedicated_tag",
            "@param string $dedicated_tag the new dedicated_tag",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_dedicated_tag": {
        "name": "get_dedicated_tag",
        "params": "",
        "description": [
            "Gets the servers dedicated_tag",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_dedicated_tag": {
        "name": "set_dedicated_tag",
        "params": "$dedicated_tag",
        "description": [
            "Sets the servers dedicated_tag",
            "@param string $dedicated_tag the new dedicated_tag",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getHoursetup": {
        "name": "getHoursetup",
        "params": "",
        "description": [
            "Gets the dedicated_custom hoursetup",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setHoursetup": {
        "name": "setHoursetup",
        "params": "$hoursetup",
        "description": [
            "Sets the dedicated_custom hoursetup",
            "@param int $hoursetup the new hoursetup",
            "@return \\MyAdmin\\Orm\\Dedicated_Custom"
        ],
        "fieldtexts": []
    },
    "get_hoursetup": {
        "name": "get_hoursetup",
        "params": "",
        "description": [
            "Gets the dedicated_custom hoursetup",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_hoursetup": {
        "name": "set_hoursetup",
        "params": "$hoursetup",
        "description": [
            "Sets the dedicated_custom hoursetup",
            "@param int $hoursetup the new hoursetup",
            "@return \\MyAdmin\\Orm\\Dedicated_Custom"
        ],
        "fieldtexts": []
    },
    "getDisplayOrder": {
        "name": "getDisplayOrder",
        "params": "",
        "description": [
            "Gets the dedicated_custom display_order",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDisplayOrder": {
        "name": "setDisplayOrder",
        "params": "$display_order",
        "description": [
            "Sets the dedicated_custom display_order",
            "@param int $display_order the new display_order",
            "@return \\MyAdmin\\Orm\\Dedicated_Custom"
        ],
        "fieldtexts": []
    },
    "get_display_order": {
        "name": "get_display_order",
        "params": "",
        "description": [
            "Gets the dedicated_custom display_order",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_display_order": {
        "name": "set_display_order",
        "params": "$display_order",
        "description": [
            "Sets the dedicated_custom display_order",
            "@param int $display_order the new display_order",
            "@return \\MyAdmin\\Orm\\Dedicated_Custom"
        ],
        "fieldtexts": []
    },
    "getItem": {
        "name": "getItem",
        "params": "",
        "description": [
            "Gets the dedicated_item item",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItem": {
        "name": "setItem",
        "params": "$item",
        "description": [
            "Sets the dedicated_item item",
            "@param string $item the new item",
            "@return \\MyAdmin\\Orm\\Dedicated_Item"
        ],
        "fieldtexts": []
    },
    "get_item": {
        "name": "get_item",
        "params": "",
        "description": [
            "Gets the dedicated_item item",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item": {
        "name": "set_item",
        "params": "$item",
        "description": [
            "Sets the dedicated_item item",
            "@param string $item the new item",
            "@return \\MyAdmin\\Orm\\Dedicated_Item"
        ],
        "fieldtexts": []
    },
    "getEnding": {
        "name": "getEnding",
        "params": "",
        "description": [
            "Gets the dedicated_item ending",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEnding": {
        "name": "setEnding",
        "params": "$ending",
        "description": [
            "Sets the dedicated_item ending",
            "@param string $ending the new ending",
            "@return \\MyAdmin\\Orm\\Dedicated_Item"
        ],
        "fieldtexts": []
    },
    "get_ending": {
        "name": "get_ending",
        "params": "",
        "description": [
            "Gets the dedicated_item ending",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ending": {
        "name": "set_ending",
        "params": "$ending",
        "description": [
            "Sets the dedicated_item ending",
            "@param string $ending the new ending",
            "@return \\MyAdmin\\Orm\\Dedicated_Item"
        ],
        "fieldtexts": []
    },
    "getCpu": {
        "name": "getCpu",
        "params": "",
        "description": [
            "Gets the dedicated_type cpu",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCpu": {
        "name": "setCpu",
        "params": "$cpu",
        "description": [
            "Sets the dedicated_type cpu",
            "@param string $cpu the new cpu",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "get_cpu": {
        "name": "get_cpu",
        "params": "",
        "description": [
            "Gets the dedicated_type cpu",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_cpu": {
        "name": "set_cpu",
        "params": "$cpu",
        "description": [
            "Sets the dedicated_type cpu",
            "@param string $cpu the new cpu",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "getMemorySlots": {
        "name": "getMemorySlots",
        "params": "",
        "description": [
            "Gets the dedicated_type memory_slots",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setMemorySlots": {
        "name": "setMemorySlots",
        "params": "$memory_slots",
        "description": [
            "Sets the dedicated_type memory_slots",
            "@param int $memory_slots the new memory_slots",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "get_memory_slots": {
        "name": "get_memory_slots",
        "params": "",
        "description": [
            "Gets the dedicated_type memory_slots",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_memory_slots": {
        "name": "set_memory_slots",
        "params": "$memory_slots",
        "description": [
            "Sets the dedicated_type memory_slots",
            "@param int $memory_slots the new memory_slots",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "getImageUrl": {
        "name": "getImageUrl",
        "params": "",
        "description": [
            "Gets the dedicated_type image_url",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setImageUrl": {
        "name": "setImageUrl",
        "params": "$image_url",
        "description": [
            "Sets the dedicated_type image_url",
            "@param string $image_url the new image_url",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "get_image_url": {
        "name": "get_image_url",
        "params": "",
        "description": [
            "Gets the dedicated_type image_url",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_image_url": {
        "name": "set_image_url",
        "params": "$image_url",
        "description": [
            "Sets the dedicated_type image_url",
            "@param string $image_url the new image_url",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "getCpuMax": {
        "name": "getCpuMax",
        "params": "",
        "description": [
            "Gets the dedicated_type cpu_max",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setCpuMax": {
        "name": "setCpuMax",
        "params": "$cpu_max",
        "description": [
            "Sets the dedicated_type cpu_max",
            "@param int $cpu_max the new cpu_max",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "get_cpu_max": {
        "name": "get_cpu_max",
        "params": "",
        "description": [
            "Gets the dedicated_type cpu_max",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_cpu_max": {
        "name": "set_cpu_max",
        "params": "$cpu_max",
        "description": [
            "Sets the dedicated_type cpu_max",
            "@param int $cpu_max the new cpu_max",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "getMemoryMaxMb": {
        "name": "getMemoryMaxMb",
        "params": "",
        "description": [
            "Gets the dedicated_type memory_max_mb",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setMemoryMaxMb": {
        "name": "setMemoryMaxMb",
        "params": "$memory_max_mb",
        "description": [
            "Sets the dedicated_type memory_max_mb",
            "@param int $memory_max_mb the new memory_max_mb",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "get_memory_max_mb": {
        "name": "get_memory_max_mb",
        "params": "",
        "description": [
            "Gets the dedicated_type memory_max_mb",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_memory_max_mb": {
        "name": "set_memory_max_mb",
        "params": "$memory_max_mb",
        "description": [
            "Sets the dedicated_type memory_max_mb",
            "@param int $memory_max_mb the new memory_max_mb",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "getEcc": {
        "name": "getEcc",
        "params": "",
        "description": [
            "Gets the dedicated_type ecc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEcc": {
        "name": "setEcc",
        "params": "$ecc",
        "description": [
            "Sets the dedicated_type ecc",
            "@param string $ecc the new ecc",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "get_ecc": {
        "name": "get_ecc",
        "params": "",
        "description": [
            "Gets the dedicated_type ecc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ecc": {
        "name": "set_ecc",
        "params": "$ecc",
        "description": [
            "Sets the dedicated_type ecc",
            "@param string $ecc the new ecc",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "getMemoryType": {
        "name": "getMemoryType",
        "params": "",
        "description": [
            "Gets the dedicated_type memory_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMemoryType": {
        "name": "setMemoryType",
        "params": "$memory_type",
        "description": [
            "Sets the dedicated_type memory_type",
            "@param string $memory_type the new memory_type",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "get_memory_type": {
        "name": "get_memory_type",
        "params": "",
        "description": [
            "Gets the dedicated_type memory_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_memory_type": {
        "name": "set_memory_type",
        "params": "$memory_type",
        "description": [
            "Sets the dedicated_type memory_type",
            "@param string $memory_type the new memory_type",
            "@return \\MyAdmin\\Orm\\Dedicated_Type"
        ],
        "fieldtexts": []
    },
    "getExpire": {
        "name": "getExpire",
        "params": "",
        "description": [
            "Gets the domainlookup expire",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setExpire": {
        "name": "setExpire",
        "params": "$expire",
        "description": [
            "Sets the domainlookup expire",
            "@param string $expire the new expire",
            "@return \\MyAdmin\\Orm\\Domainlookup"
        ],
        "fieldtexts": []
    },
    "get_expire": {
        "name": "get_expire",
        "params": "",
        "description": [
            "Gets the domainlookup expire",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_expire": {
        "name": "set_expire",
        "params": "$expire",
        "description": [
            "Sets the domainlookup expire",
            "@param string $expire the new expire",
            "@return \\MyAdmin\\Orm\\Domainlookup"
        ],
        "fieldtexts": []
    },
    "getPassword": {
        "name": "getPassword",
        "params": "",
        "description": [
            "Gets the salesmanager password",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPassword": {
        "name": "setPassword",
        "params": "$password",
        "description": [
            "@param string $password"
        ],
        "fieldtexts": []
    },
    "get_password": {
        "name": "get_password",
        "params": "",
        "description": [
            "Gets the salesmanager password",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_password": {
        "name": "set_password",
        "params": "$password",
        "description": [
            "Sets the salesmanager password",
            "@param string $password the new password",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "getFirstname": {
        "name": "getFirstname",
        "params": "",
        "description": [
            "Gets the ssl_certs firstname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFirstname": {
        "name": "setFirstname",
        "params": "$firstname",
        "description": [
            "Sets the ssl_certs firstname",
            "@param string $firstname the new firstname",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_firstname": {
        "name": "get_firstname",
        "params": "",
        "description": [
            "Gets the ssl_certs firstname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_firstname": {
        "name": "set_firstname",
        "params": "$firstname",
        "description": [
            "Sets the ssl_certs firstname",
            "@param string $firstname the new firstname",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getLastname": {
        "name": "getLastname",
        "params": "",
        "description": [
            "Gets the ssl_certs lastname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLastname": {
        "name": "setLastname",
        "params": "$lastname",
        "description": [
            "Sets the ssl_certs lastname",
            "@param string $lastname the new lastname",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_lastname": {
        "name": "get_lastname",
        "params": "",
        "description": [
            "Gets the ssl_certs lastname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_lastname": {
        "name": "set_lastname",
        "params": "$lastname",
        "description": [
            "Sets the ssl_certs lastname",
            "@param string $lastname the new lastname",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getEmail": {
        "name": "getEmail",
        "params": "",
        "description": [
            "Gets the ssl_certs email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEmail": {
        "name": "setEmail",
        "params": "$email",
        "description": [
            "Sets the ssl_certs email",
            "@param string $email the new email",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_email": {
        "name": "get_email",
        "params": "",
        "description": [
            "Gets the ssl_certs email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_email": {
        "name": "set_email",
        "params": "$email",
        "description": [
            "Sets the ssl_certs email",
            "@param string $email the new email",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getAddress2": {
        "name": "getAddress2",
        "params": "",
        "description": [
            "Gets the salesmanager address2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddress2": {
        "name": "setAddress2",
        "params": "$address2",
        "description": [
            "Sets the salesmanager address2",
            "@param string $address2 the new address2",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "get_address2": {
        "name": "get_address2",
        "params": "",
        "description": [
            "Gets the salesmanager address2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address2": {
        "name": "set_address2",
        "params": "$address2",
        "description": [
            "Sets the salesmanager address2",
            "@param string $address2 the new address2",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "getAddress3": {
        "name": "getAddress3",
        "params": "",
        "description": [
            "Gets the domains address3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddress3": {
        "name": "setAddress3",
        "params": "$address3",
        "description": [
            "Sets the domains address3",
            "@param string $address3 the new address3",
            "@return \\MyAdmin\\Orm\\Domain"
        ],
        "fieldtexts": []
    },
    "get_address3": {
        "name": "get_address3",
        "params": "",
        "description": [
            "Gets the domains address3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address3": {
        "name": "set_address3",
        "params": "$address3",
        "description": [
            "Sets the domains address3",
            "@param string $address3 the new address3",
            "@return \\MyAdmin\\Orm\\Domain"
        ],
        "fieldtexts": []
    },
    "getFax": {
        "name": "getFax",
        "params": "",
        "description": [
            "Gets the domains fax",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFax": {
        "name": "setFax",
        "params": "$fax",
        "description": [
            "Sets the domains fax",
            "@param string $fax the new fax",
            "@return \\MyAdmin\\Orm\\Domain"
        ],
        "fieldtexts": []
    },
    "get_fax": {
        "name": "get_fax",
        "params": "",
        "description": [
            "Gets the domains fax",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fax": {
        "name": "set_fax",
        "params": "$fax",
        "description": [
            "Sets the domains fax",
            "@param string $fax the new fax",
            "@return \\MyAdmin\\Orm\\Domain"
        ],
        "fieldtexts": []
    },
    "getLine": {
        "name": "getLine",
        "params": "",
        "description": [
            "Gets the log line",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setLine": {
        "name": "setLine",
        "params": "$line",
        "description": [
            "Sets the log line",
            "@param int $line the new line",
            "@return \\MyAdmin\\Orm\\Log"
        ],
        "fieldtexts": []
    },
    "get_line": {
        "name": "get_line",
        "params": "",
        "description": [
            "Gets the log line",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_line": {
        "name": "set_line",
        "params": "$line",
        "description": [
            "Sets the log line",
            "@param int $line the new line",
            "@return \\MyAdmin\\Orm\\Log"
        ],
        "fieldtexts": []
    },
    "getFile": {
        "name": "getFile",
        "params": "",
        "description": [
            "Gets the vps_templates file",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFile": {
        "name": "setFile",
        "params": "$file",
        "description": [
            "Sets the vps_templates file",
            "@param string $file the new file",
            "@return \\MyAdmin\\Orm\\Vps_Template"
        ],
        "fieldtexts": []
    },
    "get_file": {
        "name": "get_file",
        "params": "",
        "description": [
            "Gets the vps_templates file",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_file": {
        "name": "set_file",
        "params": "$file",
        "description": [
            "Sets the vps_templates file",
            "@param string $file the new file",
            "@return \\MyAdmin\\Orm\\Vps_Template"
        ],
        "fieldtexts": []
    },
    "getGoogleOrder": {
        "name": "getGoogleOrder",
        "params": "",
        "description": [
            "Gets the gcheckout google_order",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setGoogleOrder": {
        "name": "setGoogleOrder",
        "params": "$google_order",
        "description": [
            "Sets the gcheckout google_order",
            "@param string $google_order the new google_order",
            "@return \\MyAdmin\\Orm\\Gcheckout"
        ],
        "fieldtexts": []
    },
    "get_google_order": {
        "name": "get_google_order",
        "params": "",
        "description": [
            "Gets the gcheckout google_order",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_google_order": {
        "name": "set_google_order",
        "params": "$google_order",
        "description": [
            "Sets the gcheckout google_order",
            "@param string $google_order the new google_order",
            "@return \\MyAdmin\\Orm\\Gcheckout"
        ],
        "fieldtexts": []
    },
    "getSerialNumber": {
        "name": "getSerialNumber",
        "params": "",
        "description": [
            "Gets the gcheckout serial_number",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSerialNumber": {
        "name": "setSerialNumber",
        "params": "$serial_number",
        "description": [
            "Sets the gcheckout serial_number",
            "@param string $serial_number the new serial_number",
            "@return \\MyAdmin\\Orm\\Gcheckout"
        ],
        "fieldtexts": []
    },
    "get_serial_number": {
        "name": "get_serial_number",
        "params": "",
        "description": [
            "Gets the gcheckout serial_number",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_serial_number": {
        "name": "set_serial_number",
        "params": "$serial_number",
        "description": [
            "Sets the gcheckout serial_number",
            "@param string $serial_number the new serial_number",
            "@return \\MyAdmin\\Orm\\Gcheckout"
        ],
        "fieldtexts": []
    },
    "get__type": {
        "name": "get__type",
        "params": "",
        "description": [
            "Gets the gcheckout _type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set__type": {
        "name": "set__type",
        "params": "$_type",
        "description": [
            "Sets the gcheckout _type",
            "@param string $_type the new _type",
            "@return \\MyAdmin\\Orm\\Gcheckout"
        ],
        "fieldtexts": []
    },
    "getTcardId": {
        "name": "getTcardId",
        "params": "",
        "description": [
            "Gets the giftcards tcard_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setTcardId": {
        "name": "setTcardId",
        "params": "$tcard_id",
        "description": [
            "Sets the giftcards tcard_id",
            "@param int $tcard_id the new tcard_id",
            "@return \\MyAdmin\\Orm\\Giftcard"
        ],
        "fieldtexts": []
    },
    "get_tcard_id": {
        "name": "get_tcard_id",
        "params": "",
        "description": [
            "Gets the giftcards tcard_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_tcard_id": {
        "name": "set_tcard_id",
        "params": "$tcard_id",
        "description": [
            "Sets the giftcards tcard_id",
            "@param int $tcard_id the new tcard_id",
            "@return \\MyAdmin\\Orm\\Giftcard"
        ],
        "fieldtexts": []
    },
    "getFtcardNo": {
        "name": "getFtcardNo",
        "params": "",
        "description": [
            "Gets the giftcards ftcard_no",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFtcardNo": {
        "name": "setFtcardNo",
        "params": "$ftcard_no",
        "description": [
            "Sets the giftcards ftcard_no",
            "@param string $ftcard_no the new ftcard_no",
            "@return \\MyAdmin\\Orm\\Giftcard"
        ],
        "fieldtexts": []
    },
    "get_ftcard_no": {
        "name": "get_ftcard_no",
        "params": "",
        "description": [
            "Gets the giftcards ftcard_no",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ftcard_no": {
        "name": "set_ftcard_no",
        "params": "$ftcard_no",
        "description": [
            "Sets the giftcards ftcard_no",
            "@param string $ftcard_no the new ftcard_no",
            "@return \\MyAdmin\\Orm\\Giftcard"
        ],
        "fieldtexts": []
    },
    "getFtcardAmount": {
        "name": "getFtcardAmount",
        "params": "",
        "description": [
            "Gets the giftcards ftcard_amount",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setFtcardAmount": {
        "name": "setFtcardAmount",
        "params": "$ftcard_amount",
        "description": [
            "Sets the giftcards ftcard_amount",
            "@param float $ftcard_amount the new ftcard_amount",
            "@return \\MyAdmin\\Orm\\Giftcard"
        ],
        "fieldtexts": []
    },
    "get_ftcard_amount": {
        "name": "get_ftcard_amount",
        "params": "",
        "description": [
            "Gets the giftcards ftcard_amount",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_ftcard_amount": {
        "name": "set_ftcard_amount",
        "params": "$ftcard_amount",
        "description": [
            "Sets the giftcards ftcard_amount",
            "@param float $ftcard_amount the new ftcard_amount",
            "@return \\MyAdmin\\Orm\\Giftcard"
        ],
        "fieldtexts": []
    },
    "getFtcardAvailable": {
        "name": "getFtcardAvailable",
        "params": "",
        "description": [
            "Gets the giftcards ftcard_available",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFtcardAvailable": {
        "name": "setFtcardAvailable",
        "params": "$ftcard_available",
        "description": [
            "Sets the giftcards ftcard_available",
            "@param string $ftcard_available the new ftcard_available",
            "@return \\MyAdmin\\Orm\\Giftcard"
        ],
        "fieldtexts": []
    },
    "get_ftcard_available": {
        "name": "get_ftcard_available",
        "params": "",
        "description": [
            "Gets the giftcards ftcard_available",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ftcard_available": {
        "name": "set_ftcard_available",
        "params": "$ftcard_available",
        "description": [
            "Sets the giftcards ftcard_available",
            "@param string $ftcard_available the new ftcard_available",
            "@return \\MyAdmin\\Orm\\Giftcard"
        ],
        "fieldtexts": []
    },
    "getFtcardUsedby": {
        "name": "getFtcardUsedby",
        "params": "",
        "description": [
            "Gets the giftcards ftcard_usedby",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setFtcardUsedby": {
        "name": "setFtcardUsedby",
        "params": "$ftcard_usedby",
        "description": [
            "Sets the giftcards ftcard_usedby",
            "@param int $ftcard_usedby the new ftcard_usedby",
            "@return \\MyAdmin\\Orm\\Giftcard"
        ],
        "fieldtexts": []
    },
    "get_ftcard_usedby": {
        "name": "get_ftcard_usedby",
        "params": "",
        "description": [
            "Gets the giftcards ftcard_usedby",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ftcard_usedby": {
        "name": "set_ftcard_usedby",
        "params": "$ftcard_usedby",
        "description": [
            "Sets the giftcards ftcard_usedby",
            "@param int $ftcard_usedby the new ftcard_usedby",
            "@return \\MyAdmin\\Orm\\Giftcard"
        ],
        "fieldtexts": []
    },
    "getDate": {
        "name": "getDate",
        "params": "",
        "description": [
            "Gets the vps_shots date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDate": {
        "name": "setDate",
        "params": "$date",
        "description": [
            "Sets the vps_shots date",
            "@param string $date the new date",
            "@return \\MyAdmin\\Orm\\Vps_Shot"
        ],
        "fieldtexts": []
    },
    "get_date": {
        "name": "get_date",
        "params": "",
        "description": [
            "Gets the vps_shots date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_date": {
        "name": "set_date",
        "params": "$date",
        "description": [
            "Sets the vps_shots date",
            "@param string $date the new date",
            "@return \\MyAdmin\\Orm\\Vps_Shot"
        ],
        "fieldtexts": []
    },
    "getPaid": {
        "name": "getPaid",
        "params": "",
        "description": [
            "Gets the invoices paid",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPaid": {
        "name": "setPaid",
        "params": "$paid",
        "description": [
            "Sets the invoices paid",
            "@param int $paid the new paid",
            "@return \\MyAdmin\\Orm\\Invoice"
        ],
        "fieldtexts": []
    },
    "get_paid": {
        "name": "get_paid",
        "params": "",
        "description": [
            "Gets the invoices paid",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_paid": {
        "name": "set_paid",
        "params": "$paid",
        "description": [
            "Sets the invoices paid",
            "@param int $paid the new paid",
            "@return \\MyAdmin\\Orm\\Invoice"
        ],
        "fieldtexts": []
    },
    "getDueDate": {
        "name": "getDueDate",
        "params": "",
        "description": [
            "Gets the invoices due_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDueDate": {
        "name": "setDueDate",
        "params": "$due_date",
        "description": [
            "Sets the invoices due_date",
            "@param string $due_date the new due_date",
            "@return \\MyAdmin\\Orm\\Invoice"
        ],
        "fieldtexts": []
    },
    "get_due_date": {
        "name": "get_due_date",
        "params": "",
        "description": [
            "Gets the invoices due_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_due_date": {
        "name": "set_due_date",
        "params": "$due_date",
        "description": [
            "Sets the invoices due_date",
            "@param string $due_date the new due_date",
            "@return \\MyAdmin\\Orm\\Invoice"
        ],
        "fieldtexts": []
    },
    "getService": {
        "name": "getService",
        "params": "",
        "description": [
            "Gets the whitelist service",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setService": {
        "name": "setService",
        "params": "$service",
        "description": [
            "Sets the whitelist service",
            "@param int $service the new service",
            "@return \\MyAdmin\\Orm\\Whitelist"
        ],
        "fieldtexts": []
    },
    "set_service": {
        "name": "set_service",
        "params": "$service",
        "description": [
            "Sets the whitelist service",
            "@param int $service the new service",
            "@return \\MyAdmin\\Orm\\Whitelist"
        ],
        "fieldtexts": []
    },
    "getDeleted": {
        "name": "getDeleted",
        "params": "",
        "description": [
            "Gets the repeat_invoices deleted",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDeleted": {
        "name": "setDeleted",
        "params": "$deleted",
        "description": [
            "Sets the repeat_invoices deleted",
            "@param int $deleted the new deleted",
            "@return \\MyAdmin\\Orm\\Repeat_Invoice"
        ],
        "fieldtexts": []
    },
    "get_deleted": {
        "name": "get_deleted",
        "params": "",
        "description": [
            "Gets the repeat_invoices deleted",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_deleted": {
        "name": "set_deleted",
        "params": "$deleted",
        "description": [
            "Sets the repeat_invoices deleted",
            "@param int $deleted the new deleted",
            "@return \\MyAdmin\\Orm\\Repeat_Invoice"
        ],
        "fieldtexts": []
    },
    "getNetwork": {
        "name": "getNetwork",
        "params": "",
        "description": [
            "Gets the ipblocks network",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setNetwork": {
        "name": "setNetwork",
        "params": "$network",
        "description": [
            "Sets the ipblocks network",
            "@param string $network the new network",
            "@return \\MyAdmin\\Orm\\Ipblock"
        ],
        "fieldtexts": []
    },
    "get_network": {
        "name": "get_network",
        "params": "",
        "description": [
            "Gets the ipblocks network",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_network": {
        "name": "set_network",
        "params": "$network",
        "description": [
            "Sets the ipblocks network",
            "@param string $network the new network",
            "@return \\MyAdmin\\Orm\\Ipblock"
        ],
        "fieldtexts": []
    },
    "getVlan": {
        "name": "getVlan",
        "params": "",
        "description": [
            "Gets the ips vlan",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setVlan": {
        "name": "setVlan",
        "params": "$vlan",
        "description": [
            "Sets the ips vlan",
            "@param int $vlan the new vlan",
            "@return \\MyAdmin\\Orm\\Ip"
        ],
        "fieldtexts": []
    },
    "get_vlan": {
        "name": "get_vlan",
        "params": "",
        "description": [
            "Gets the ips vlan",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_vlan": {
        "name": "set_vlan",
        "params": "$vlan",
        "description": [
            "Sets the ips vlan",
            "@param int $vlan the new vlan",
            "@return \\MyAdmin\\Orm\\Ip"
        ],
        "fieldtexts": []
    },
    "getServerid": {
        "name": "getServerid",
        "params": "",
        "description": [
            "Gets the ips serverid",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setServerid": {
        "name": "setServerid",
        "params": "$serverid",
        "description": [
            "Sets the ips serverid",
            "@param int $serverid the new serverid",
            "@return \\MyAdmin\\Orm\\Ip"
        ],
        "fieldtexts": []
    },
    "get_serverid": {
        "name": "get_serverid",
        "params": "",
        "description": [
            "Gets the ips serverid",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_serverid": {
        "name": "set_serverid",
        "params": "$serverid",
        "description": [
            "Sets the ips serverid",
            "@param int $serverid the new serverid",
            "@return \\MyAdmin\\Orm\\Ip"
        ],
        "fieldtexts": []
    },
    "getReserved": {
        "name": "getReserved",
        "params": "",
        "description": [
            "Gets the ips reserved",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setReserved": {
        "name": "setReserved",
        "params": "$reserved",
        "description": [
            "Sets the ips reserved",
            "@param int $reserved the new reserved",
            "@return \\MyAdmin\\Orm\\Ip"
        ],
        "fieldtexts": []
    },
    "get_reserved": {
        "name": "get_reserved",
        "params": "",
        "description": [
            "Gets the ips reserved",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_reserved": {
        "name": "set_reserved",
        "params": "$reserved",
        "description": [
            "Sets the ips reserved",
            "@param int $reserved the new reserved",
            "@return \\MyAdmin\\Orm\\Ip"
        ],
        "fieldtexts": []
    },
    "getLogId": {
        "name": "getLogId",
        "params": "",
        "description": [
            "Gets the login_logs log_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setLogId": {
        "name": "setLogId",
        "params": "$log_id",
        "description": [
            "Sets the login_logs log_id",
            "@param int $log_id the new log_id",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "get_log_id": {
        "name": "get_log_id",
        "params": "",
        "description": [
            "Gets the login_logs log_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_log_id": {
        "name": "set_log_id",
        "params": "$log_id",
        "description": [
            "Sets the login_logs log_id",
            "@param int $log_id the new log_id",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "getAccountLid": {
        "name": "getAccountLid",
        "params": "",
        "description": [
            "Gets the login_logs account_lid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAccountLid": {
        "name": "setAccountLid",
        "params": "$account_lid",
        "description": [
            "Sets the login_logs account_lid",
            "@param string $account_lid the new account_lid",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "get_account_lid": {
        "name": "get_account_lid",
        "params": "",
        "description": [
            "Gets the login_logs account_lid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_account_lid": {
        "name": "set_account_lid",
        "params": "$account_lid",
        "description": [
            "Sets the login_logs account_lid",
            "@param string $account_lid the new account_lid",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "getAttempts": {
        "name": "getAttempts",
        "params": "",
        "description": [
            "Gets the login_logs attempts",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setAttempts": {
        "name": "setAttempts",
        "params": "$attempts",
        "description": [
            "Sets the login_logs attempts",
            "@param int $attempts the new attempts",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "get_attempts": {
        "name": "get_attempts",
        "params": "",
        "description": [
            "Gets the login_logs attempts",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_attempts": {
        "name": "set_attempts",
        "params": "$attempts",
        "description": [
            "Sets the login_logs attempts",
            "@param int $attempts the new attempts",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "getIpAddr": {
        "name": "getIpAddr",
        "params": "",
        "description": [
            "Gets the login_logs ip_addr",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpAddr": {
        "name": "setIpAddr",
        "params": "$ip_addr",
        "description": [
            "Sets the login_logs ip_addr",
            "@param string $ip_addr the new ip_addr",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "get_ip_addr": {
        "name": "get_ip_addr",
        "params": "",
        "description": [
            "Gets the login_logs ip_addr",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_addr": {
        "name": "set_ip_addr",
        "params": "$ip_addr",
        "description": [
            "Sets the login_logs ip_addr",
            "@param string $ip_addr the new ip_addr",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "getLogType": {
        "name": "getLogType",
        "params": "",
        "description": [
            "Gets the login_logs log_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLogType": {
        "name": "setLogType",
        "params": "$log_type",
        "description": [
            "Sets the login_logs log_type",
            "@param string $log_type the new log_type",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "get_log_type": {
        "name": "get_log_type",
        "params": "",
        "description": [
            "Gets the login_logs log_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_log_type": {
        "name": "set_log_type",
        "params": "$log_type",
        "description": [
            "Sets the login_logs log_type",
            "@param string $log_type the new log_type",
            "@return \\MyAdmin\\Orm\\Login_Log"
        ],
        "fieldtexts": []
    },
    "getChannel": {
        "name": "getChannel",
        "params": "",
        "description": [
            "Gets the log channel",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setChannel": {
        "name": "setChannel",
        "params": "$channel",
        "description": [
            "Sets the log channel",
            "@param string $channel the new channel",
            "@return \\MyAdmin\\Orm\\Log"
        ],
        "fieldtexts": []
    },
    "get_channel": {
        "name": "get_channel",
        "params": "",
        "description": [
            "Gets the log channel",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_channel": {
        "name": "set_channel",
        "params": "$channel",
        "description": [
            "Sets the log channel",
            "@param string $channel the new channel",
            "@return \\MyAdmin\\Orm\\Log"
        ],
        "fieldtexts": []
    },
    "getLevel": {
        "name": "getLevel",
        "params": "",
        "description": [
            "Gets the log level",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLevel": {
        "name": "setLevel",
        "params": "$level",
        "description": [
            "Sets the log level",
            "@param string $level the new level",
            "@return \\MyAdmin\\Orm\\Log"
        ],
        "fieldtexts": []
    },
    "get_level": {
        "name": "get_level",
        "params": "",
        "description": [
            "Gets the log level",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_level": {
        "name": "set_level",
        "params": "$level",
        "description": [
            "Sets the log level",
            "@param string $level the new level",
            "@return \\MyAdmin\\Orm\\Log"
        ],
        "fieldtexts": []
    },
    "getMessage": {
        "name": "getMessage",
        "params": "",
        "description": [
            "Gets the log message",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMessage": {
        "name": "setMessage",
        "params": "$message",
        "description": [
            "Sets the log message",
            "@param string $message the new message",
            "@return \\MyAdmin\\Orm\\Log"
        ],
        "fieldtexts": []
    },
    "get_message": {
        "name": "get_message",
        "params": "",
        "description": [
            "Gets the log message",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_message": {
        "name": "set_message",
        "params": "$message",
        "description": [
            "Sets the log message",
            "@param string $message the new message",
            "@return \\MyAdmin\\Orm\\Log"
        ],
        "fieldtexts": []
    },
    "getMaxmindid": {
        "name": "getMaxmindid",
        "params": "",
        "description": [
            "Gets the maxmind_output maxmindid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMaxmindid": {
        "name": "setMaxmindid",
        "params": "$maxmindid",
        "description": [
            "Sets the maxmind_output maxmindid",
            "@param string $maxmindid the new maxmindid",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_maxmindid": {
        "name": "get_maxmindid",
        "params": "",
        "description": [
            "Gets the maxmind_output maxmindid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_maxmindid": {
        "name": "set_maxmindid",
        "params": "$maxmindid",
        "description": [
            "Sets the maxmind_output maxmindid",
            "@param string $maxmindid the new maxmindid",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getRiskscore": {
        "name": "getRiskscore",
        "params": "",
        "description": [
            "Gets the maxmind_output riskscore",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setRiskscore": {
        "name": "setRiskscore",
        "params": "$riskscore",
        "description": [
            "Sets the maxmind_output riskscore",
            "@param float $riskscore the new riskscore",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_riskscore": {
        "name": "get_riskscore",
        "params": "",
        "description": [
            "Gets the maxmind_output riskscore",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_riskscore": {
        "name": "set_riskscore",
        "params": "$riskscore",
        "description": [
            "Sets the maxmind_output riskscore",
            "@param float $riskscore the new riskscore",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getScore": {
        "name": "getScore",
        "params": "",
        "description": [
            "Gets the maxmind_output score",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setScore": {
        "name": "setScore",
        "params": "$score",
        "description": [
            "Sets the maxmind_output score",
            "@param float $score the new score",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_score": {
        "name": "get_score",
        "params": "",
        "description": [
            "Gets the maxmind_output score",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_score": {
        "name": "set_score",
        "params": "$score",
        "description": [
            "Sets the maxmind_output score",
            "@param float $score the new score",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getExplanation": {
        "name": "getExplanation",
        "params": "",
        "description": [
            "Gets the maxmind_output explanation",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setExplanation": {
        "name": "setExplanation",
        "params": "$explanation",
        "description": [
            "Sets the maxmind_output explanation",
            "@param mixed $explanation the new explanation",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_explanation": {
        "name": "get_explanation",
        "params": "",
        "description": [
            "Gets the maxmind_output explanation",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_explanation": {
        "name": "set_explanation",
        "params": "$explanation",
        "description": [
            "Sets the maxmind_output explanation",
            "@param mixed $explanation the new explanation",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getCountrymatch": {
        "name": "getCountrymatch",
        "params": "",
        "description": [
            "Gets the maxmind_output countrymatch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCountrymatch": {
        "name": "setCountrymatch",
        "params": "$countrymatch",
        "description": [
            "Sets the maxmind_output countrymatch",
            "@param string $countrymatch the new countrymatch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_countrymatch": {
        "name": "get_countrymatch",
        "params": "",
        "description": [
            "Gets the maxmind_output countrymatch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_countrymatch": {
        "name": "set_countrymatch",
        "params": "$countrymatch",
        "description": [
            "Sets the maxmind_output countrymatch",
            "@param string $countrymatch the new countrymatch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getHighriskcountry": {
        "name": "getHighriskcountry",
        "params": "",
        "description": [
            "Gets the maxmind_output highriskcountry",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setHighriskcountry": {
        "name": "setHighriskcountry",
        "params": "$highriskcountry",
        "description": [
            "Sets the maxmind_output highriskcountry",
            "@param string $highriskcountry the new highriskcountry",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_highriskcountry": {
        "name": "get_highriskcountry",
        "params": "",
        "description": [
            "Gets the maxmind_output highriskcountry",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_highriskcountry": {
        "name": "set_highriskcountry",
        "params": "$highriskcountry",
        "description": [
            "Sets the maxmind_output highriskcountry",
            "@param string $highriskcountry the new highriskcountry",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getDistance": {
        "name": "getDistance",
        "params": "",
        "description": [
            "Gets the maxmind_output distance",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDistance": {
        "name": "setDistance",
        "params": "$distance",
        "description": [
            "Sets the maxmind_output distance",
            "@param int $distance the new distance",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_distance": {
        "name": "get_distance",
        "params": "",
        "description": [
            "Gets the maxmind_output distance",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_distance": {
        "name": "set_distance",
        "params": "$distance",
        "description": [
            "Sets the maxmind_output distance",
            "@param int $distance the new distance",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpAccuracyradius": {
        "name": "getIpAccuracyradius",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_accuracyradius",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setIpAccuracyradius": {
        "name": "setIpAccuracyradius",
        "params": "$ip_accuracyradius",
        "description": [
            "Sets the maxmind_output ip_accuracyradius",
            "@param int $ip_accuracyradius the new ip_accuracyradius",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_accuracyradius": {
        "name": "get_ip_accuracyradius",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_accuracyradius",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ip_accuracyradius": {
        "name": "set_ip_accuracyradius",
        "params": "$ip_accuracyradius",
        "description": [
            "Sets the maxmind_output ip_accuracyradius",
            "@param int $ip_accuracyradius the new ip_accuracyradius",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpCity": {
        "name": "getIpCity",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpCity": {
        "name": "setIpCity",
        "params": "$ip_city",
        "description": [
            "Sets the maxmind_output ip_city",
            "@param string $ip_city the new ip_city",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_city": {
        "name": "get_ip_city",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_city": {
        "name": "set_ip_city",
        "params": "$ip_city",
        "description": [
            "Sets the maxmind_output ip_city",
            "@param string $ip_city the new ip_city",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpRegion": {
        "name": "getIpRegion",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_region",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpRegion": {
        "name": "setIpRegion",
        "params": "$ip_region",
        "description": [
            "Sets the maxmind_output ip_region",
            "@param string $ip_region the new ip_region",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_region": {
        "name": "get_ip_region",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_region",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_region": {
        "name": "set_ip_region",
        "params": "$ip_region",
        "description": [
            "Sets the maxmind_output ip_region",
            "@param string $ip_region the new ip_region",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpRegionname": {
        "name": "getIpRegionname",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_regionname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpRegionname": {
        "name": "setIpRegionname",
        "params": "$ip_regionname",
        "description": [
            "Sets the maxmind_output ip_regionname",
            "@param string $ip_regionname the new ip_regionname",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_regionname": {
        "name": "get_ip_regionname",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_regionname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_regionname": {
        "name": "set_ip_regionname",
        "params": "$ip_regionname",
        "description": [
            "Sets the maxmind_output ip_regionname",
            "@param string $ip_regionname the new ip_regionname",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpPostalcode": {
        "name": "getIpPostalcode",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_postalcode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpPostalcode": {
        "name": "setIpPostalcode",
        "params": "$ip_postalcode",
        "description": [
            "Sets the maxmind_output ip_postalcode",
            "@param string $ip_postalcode the new ip_postalcode",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_postalcode": {
        "name": "get_ip_postalcode",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_postalcode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_postalcode": {
        "name": "set_ip_postalcode",
        "params": "$ip_postalcode",
        "description": [
            "Sets the maxmind_output ip_postalcode",
            "@param string $ip_postalcode the new ip_postalcode",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpMetrocode": {
        "name": "getIpMetrocode",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_metrocode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpMetrocode": {
        "name": "setIpMetrocode",
        "params": "$ip_metrocode",
        "description": [
            "Sets the maxmind_output ip_metrocode",
            "@param string $ip_metrocode the new ip_metrocode",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_metrocode": {
        "name": "get_ip_metrocode",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_metrocode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_metrocode": {
        "name": "set_ip_metrocode",
        "params": "$ip_metrocode",
        "description": [
            "Sets the maxmind_output ip_metrocode",
            "@param string $ip_metrocode the new ip_metrocode",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpAreacode": {
        "name": "getIpAreacode",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_areacode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpAreacode": {
        "name": "setIpAreacode",
        "params": "$ip_areacode",
        "description": [
            "Sets the maxmind_output ip_areacode",
            "@param string $ip_areacode the new ip_areacode",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_areacode": {
        "name": "get_ip_areacode",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_areacode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_areacode": {
        "name": "set_ip_areacode",
        "params": "$ip_areacode",
        "description": [
            "Sets the maxmind_output ip_areacode",
            "@param string $ip_areacode the new ip_areacode",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getCountrycode": {
        "name": "getCountrycode",
        "params": "",
        "description": [
            "Gets the maxmind_output countrycode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCountrycode": {
        "name": "setCountrycode",
        "params": "$countrycode",
        "description": [
            "Sets the maxmind_output countrycode",
            "@param string $countrycode the new countrycode",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_countrycode": {
        "name": "get_countrycode",
        "params": "",
        "description": [
            "Gets the maxmind_output countrycode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_countrycode": {
        "name": "set_countrycode",
        "params": "$countrycode",
        "description": [
            "Sets the maxmind_output countrycode",
            "@param string $countrycode the new countrycode",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpCountryname": {
        "name": "getIpCountryname",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_countryname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpCountryname": {
        "name": "setIpCountryname",
        "params": "$ip_countryname",
        "description": [
            "Sets the maxmind_output ip_countryname",
            "@param string $ip_countryname the new ip_countryname",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_countryname": {
        "name": "get_ip_countryname",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_countryname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_countryname": {
        "name": "set_ip_countryname",
        "params": "$ip_countryname",
        "description": [
            "Sets the maxmind_output ip_countryname",
            "@param string $ip_countryname the new ip_countryname",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpContinentcode": {
        "name": "getIpContinentcode",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_continentcode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpContinentcode": {
        "name": "setIpContinentcode",
        "params": "$ip_continentcode",
        "description": [
            "Sets the maxmind_output ip_continentcode",
            "@param string $ip_continentcode the new ip_continentcode",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_continentcode": {
        "name": "get_ip_continentcode",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_continentcode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_continentcode": {
        "name": "set_ip_continentcode",
        "params": "$ip_continentcode",
        "description": [
            "Sets the maxmind_output ip_continentcode",
            "@param string $ip_continentcode the new ip_continentcode",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpLatitude": {
        "name": "getIpLatitude",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_latitude",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpLatitude": {
        "name": "setIpLatitude",
        "params": "$ip_latitude",
        "description": [
            "Sets the maxmind_output ip_latitude",
            "@param string $ip_latitude the new ip_latitude",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_latitude": {
        "name": "get_ip_latitude",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_latitude",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_latitude": {
        "name": "set_ip_latitude",
        "params": "$ip_latitude",
        "description": [
            "Sets the maxmind_output ip_latitude",
            "@param string $ip_latitude the new ip_latitude",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpLongitude": {
        "name": "getIpLongitude",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_longitude",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpLongitude": {
        "name": "setIpLongitude",
        "params": "$ip_longitude",
        "description": [
            "Sets the maxmind_output ip_longitude",
            "@param string $ip_longitude the new ip_longitude",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_longitude": {
        "name": "get_ip_longitude",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_longitude",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_longitude": {
        "name": "set_ip_longitude",
        "params": "$ip_longitude",
        "description": [
            "Sets the maxmind_output ip_longitude",
            "@param string $ip_longitude the new ip_longitude",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpTimezone": {
        "name": "getIpTimezone",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_timezone",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpTimezone": {
        "name": "setIpTimezone",
        "params": "$ip_timezone",
        "description": [
            "Sets the maxmind_output ip_timezone",
            "@param string $ip_timezone the new ip_timezone",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_timezone": {
        "name": "get_ip_timezone",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_timezone",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_timezone": {
        "name": "set_ip_timezone",
        "params": "$ip_timezone",
        "description": [
            "Sets the maxmind_output ip_timezone",
            "@param string $ip_timezone the new ip_timezone",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpAsnum": {
        "name": "getIpAsnum",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_asnum",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpAsnum": {
        "name": "setIpAsnum",
        "params": "$ip_asnum",
        "description": [
            "Sets the maxmind_output ip_asnum",
            "@param string $ip_asnum the new ip_asnum",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_asnum": {
        "name": "get_ip_asnum",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_asnum",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_asnum": {
        "name": "set_ip_asnum",
        "params": "$ip_asnum",
        "description": [
            "Sets the maxmind_output ip_asnum",
            "@param string $ip_asnum the new ip_asnum",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpUsertype": {
        "name": "getIpUsertype",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_usertype",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpUsertype": {
        "name": "setIpUsertype",
        "params": "$ip_usertype",
        "description": [
            "Sets the maxmind_output ip_usertype",
            "@param string $ip_usertype the new ip_usertype",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_usertype": {
        "name": "get_ip_usertype",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_usertype",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_usertype": {
        "name": "set_ip_usertype",
        "params": "$ip_usertype",
        "description": [
            "Sets the maxmind_output ip_usertype",
            "@param string $ip_usertype the new ip_usertype",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpNetspeedcell": {
        "name": "getIpNetspeedcell",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_netspeedcell",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpNetspeedcell": {
        "name": "setIpNetspeedcell",
        "params": "$ip_netspeedcell",
        "description": [
            "Sets the maxmind_output ip_netspeedcell",
            "@param string $ip_netspeedcell the new ip_netspeedcell",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_netspeedcell": {
        "name": "get_ip_netspeedcell",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_netspeedcell",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_netspeedcell": {
        "name": "set_ip_netspeedcell",
        "params": "$ip_netspeedcell",
        "description": [
            "Sets the maxmind_output ip_netspeedcell",
            "@param string $ip_netspeedcell the new ip_netspeedcell",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpDomain": {
        "name": "getIpDomain",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_domain",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpDomain": {
        "name": "setIpDomain",
        "params": "$ip_domain",
        "description": [
            "Sets the maxmind_output ip_domain",
            "@param string $ip_domain the new ip_domain",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_domain": {
        "name": "get_ip_domain",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_domain",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_domain": {
        "name": "set_ip_domain",
        "params": "$ip_domain",
        "description": [
            "Sets the maxmind_output ip_domain",
            "@param string $ip_domain the new ip_domain",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpIsp": {
        "name": "getIpIsp",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_isp",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpIsp": {
        "name": "setIpIsp",
        "params": "$ip_isp",
        "description": [
            "Sets the maxmind_output ip_isp",
            "@param string $ip_isp the new ip_isp",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_isp": {
        "name": "get_ip_isp",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_isp",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_isp": {
        "name": "set_ip_isp",
        "params": "$ip_isp",
        "description": [
            "Sets the maxmind_output ip_isp",
            "@param string $ip_isp the new ip_isp",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpOrg": {
        "name": "getIpOrg",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_org",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpOrg": {
        "name": "setIpOrg",
        "params": "$ip_org",
        "description": [
            "Sets the maxmind_output ip_org",
            "@param string $ip_org the new ip_org",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_org": {
        "name": "get_ip_org",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_org",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_org": {
        "name": "set_ip_org",
        "params": "$ip_org",
        "description": [
            "Sets the maxmind_output ip_org",
            "@param string $ip_org the new ip_org",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpCityconf": {
        "name": "getIpCityconf",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_cityconf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setIpCityconf": {
        "name": "setIpCityconf",
        "params": "$ip_cityconf",
        "description": [
            "Sets the maxmind_output ip_cityconf",
            "@param int $ip_cityconf the new ip_cityconf",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_cityconf": {
        "name": "get_ip_cityconf",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_cityconf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ip_cityconf": {
        "name": "set_ip_cityconf",
        "params": "$ip_cityconf",
        "description": [
            "Sets the maxmind_output ip_cityconf",
            "@param int $ip_cityconf the new ip_cityconf",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpRegionconf": {
        "name": "getIpRegionconf",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_regionconf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setIpRegionconf": {
        "name": "setIpRegionconf",
        "params": "$ip_regionconf",
        "description": [
            "Sets the maxmind_output ip_regionconf",
            "@param int $ip_regionconf the new ip_regionconf",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_regionconf": {
        "name": "get_ip_regionconf",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_regionconf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ip_regionconf": {
        "name": "set_ip_regionconf",
        "params": "$ip_regionconf",
        "description": [
            "Sets the maxmind_output ip_regionconf",
            "@param int $ip_regionconf the new ip_regionconf",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpPostalconf": {
        "name": "getIpPostalconf",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_postalconf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setIpPostalconf": {
        "name": "setIpPostalconf",
        "params": "$ip_postalconf",
        "description": [
            "Sets the maxmind_output ip_postalconf",
            "@param int $ip_postalconf the new ip_postalconf",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_postalconf": {
        "name": "get_ip_postalconf",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_postalconf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ip_postalconf": {
        "name": "set_ip_postalconf",
        "params": "$ip_postalconf",
        "description": [
            "Sets the maxmind_output ip_postalconf",
            "@param int $ip_postalconf the new ip_postalconf",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpCountryconf": {
        "name": "getIpCountryconf",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_countryconf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setIpCountryconf": {
        "name": "setIpCountryconf",
        "params": "$ip_countryconf",
        "description": [
            "Sets the maxmind_output ip_countryconf",
            "@param int $ip_countryconf the new ip_countryconf",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_countryconf": {
        "name": "get_ip_countryconf",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_countryconf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ip_countryconf": {
        "name": "set_ip_countryconf",
        "params": "$ip_countryconf",
        "description": [
            "Sets the maxmind_output ip_countryconf",
            "@param int $ip_countryconf the new ip_countryconf",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getAnonymousproxy": {
        "name": "getAnonymousproxy",
        "params": "",
        "description": [
            "Gets the maxmind_output anonymousproxy",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAnonymousproxy": {
        "name": "setAnonymousproxy",
        "params": "$anonymousproxy",
        "description": [
            "Sets the maxmind_output anonymousproxy",
            "@param string $anonymousproxy the new anonymousproxy",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_anonymousproxy": {
        "name": "get_anonymousproxy",
        "params": "",
        "description": [
            "Gets the maxmind_output anonymousproxy",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_anonymousproxy": {
        "name": "set_anonymousproxy",
        "params": "$anonymousproxy",
        "description": [
            "Sets the maxmind_output anonymousproxy",
            "@param string $anonymousproxy the new anonymousproxy",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getProxyscore": {
        "name": "getProxyscore",
        "params": "",
        "description": [
            "Gets the maxmind_output proxyscore",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setProxyscore": {
        "name": "setProxyscore",
        "params": "$proxyscore",
        "description": [
            "Sets the maxmind_output proxyscore",
            "@param string $proxyscore the new proxyscore",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_proxyscore": {
        "name": "get_proxyscore",
        "params": "",
        "description": [
            "Gets the maxmind_output proxyscore",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_proxyscore": {
        "name": "set_proxyscore",
        "params": "$proxyscore",
        "description": [
            "Sets the maxmind_output proxyscore",
            "@param string $proxyscore the new proxyscore",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getIpCorporateproxy": {
        "name": "getIpCorporateproxy",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_corporateproxy",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpCorporateproxy": {
        "name": "setIpCorporateproxy",
        "params": "$ip_corporateproxy",
        "description": [
            "Sets the maxmind_output ip_corporateproxy",
            "@param string $ip_corporateproxy the new ip_corporateproxy",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_ip_corporateproxy": {
        "name": "get_ip_corporateproxy",
        "params": "",
        "description": [
            "Gets the maxmind_output ip_corporateproxy",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ip_corporateproxy": {
        "name": "set_ip_corporateproxy",
        "params": "$ip_corporateproxy",
        "description": [
            "Sets the maxmind_output ip_corporateproxy",
            "@param string $ip_corporateproxy the new ip_corporateproxy",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getFreemail": {
        "name": "getFreemail",
        "params": "",
        "description": [
            "Gets the maxmind_output freemail",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFreemail": {
        "name": "setFreemail",
        "params": "$freemail",
        "description": [
            "Sets the maxmind_output freemail",
            "@param string $freemail the new freemail",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_freemail": {
        "name": "get_freemail",
        "params": "",
        "description": [
            "Gets the maxmind_output freemail",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_freemail": {
        "name": "set_freemail",
        "params": "$freemail",
        "description": [
            "Sets the maxmind_output freemail",
            "@param string $freemail the new freemail",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getCarderemail": {
        "name": "getCarderemail",
        "params": "",
        "description": [
            "Gets the maxmind_output carderemail",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCarderemail": {
        "name": "setCarderemail",
        "params": "$carderemail",
        "description": [
            "Sets the maxmind_output carderemail",
            "@param string $carderemail the new carderemail",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_carderemail": {
        "name": "get_carderemail",
        "params": "",
        "description": [
            "Gets the maxmind_output carderemail",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_carderemail": {
        "name": "set_carderemail",
        "params": "$carderemail",
        "description": [
            "Sets the maxmind_output carderemail",
            "@param string $carderemail the new carderemail",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getHighriskusername": {
        "name": "getHighriskusername",
        "params": "",
        "description": [
            "Gets the maxmind_output highriskusername",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setHighriskusername": {
        "name": "setHighriskusername",
        "params": "$highriskusername",
        "description": [
            "Sets the maxmind_output highriskusername",
            "@param string $highriskusername the new highriskusername",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_highriskusername": {
        "name": "get_highriskusername",
        "params": "",
        "description": [
            "Gets the maxmind_output highriskusername",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_highriskusername": {
        "name": "set_highriskusername",
        "params": "$highriskusername",
        "description": [
            "Sets the maxmind_output highriskusername",
            "@param string $highriskusername the new highriskusername",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getHighriskpassword": {
        "name": "getHighriskpassword",
        "params": "",
        "description": [
            "Gets the maxmind_output highriskpassword",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setHighriskpassword": {
        "name": "setHighriskpassword",
        "params": "$highriskpassword",
        "description": [
            "Sets the maxmind_output highriskpassword",
            "@param string $highriskpassword the new highriskpassword",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_highriskpassword": {
        "name": "get_highriskpassword",
        "params": "",
        "description": [
            "Gets the maxmind_output highriskpassword",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_highriskpassword": {
        "name": "set_highriskpassword",
        "params": "$highriskpassword",
        "description": [
            "Sets the maxmind_output highriskpassword",
            "@param string $highriskpassword the new highriskpassword",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getBinmatch": {
        "name": "getBinmatch",
        "params": "",
        "description": [
            "Gets the maxmind_output binmatch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setBinmatch": {
        "name": "setBinmatch",
        "params": "$binmatch",
        "description": [
            "Sets the maxmind_output binmatch",
            "@param string $binmatch the new binmatch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_binmatch": {
        "name": "get_binmatch",
        "params": "",
        "description": [
            "Gets the maxmind_output binmatch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_binmatch": {
        "name": "set_binmatch",
        "params": "$binmatch",
        "description": [
            "Sets the maxmind_output binmatch",
            "@param string $binmatch the new binmatch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getBincountry": {
        "name": "getBincountry",
        "params": "",
        "description": [
            "Gets the maxmind_output bincountry",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setBincountry": {
        "name": "setBincountry",
        "params": "$bincountry",
        "description": [
            "Sets the maxmind_output bincountry",
            "@param string $bincountry the new bincountry",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_bincountry": {
        "name": "get_bincountry",
        "params": "",
        "description": [
            "Gets the maxmind_output bincountry",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_bincountry": {
        "name": "set_bincountry",
        "params": "$bincountry",
        "description": [
            "Sets the maxmind_output bincountry",
            "@param string $bincountry the new bincountry",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getBinnamematch": {
        "name": "getBinnamematch",
        "params": "",
        "description": [
            "Gets the maxmind_output binnamematch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setBinnamematch": {
        "name": "setBinnamematch",
        "params": "$binnamematch",
        "description": [
            "Sets the maxmind_output binnamematch",
            "@param string $binnamematch the new binnamematch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_binnamematch": {
        "name": "get_binnamematch",
        "params": "",
        "description": [
            "Gets the maxmind_output binnamematch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_binnamematch": {
        "name": "set_binnamematch",
        "params": "$binnamematch",
        "description": [
            "Sets the maxmind_output binnamematch",
            "@param string $binnamematch the new binnamematch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getBinname": {
        "name": "getBinname",
        "params": "",
        "description": [
            "Gets the maxmind_output binname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setBinname": {
        "name": "setBinname",
        "params": "$binname",
        "description": [
            "Sets the maxmind_output binname",
            "@param string $binname the new binname",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_binname": {
        "name": "get_binname",
        "params": "",
        "description": [
            "Gets the maxmind_output binname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_binname": {
        "name": "set_binname",
        "params": "$binname",
        "description": [
            "Sets the maxmind_output binname",
            "@param string $binname the new binname",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getBinphonematch": {
        "name": "getBinphonematch",
        "params": "",
        "description": [
            "Gets the maxmind_output binphonematch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setBinphonematch": {
        "name": "setBinphonematch",
        "params": "$binphonematch",
        "description": [
            "Sets the maxmind_output binphonematch",
            "@param string $binphonematch the new binphonematch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_binphonematch": {
        "name": "get_binphonematch",
        "params": "",
        "description": [
            "Gets the maxmind_output binphonematch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_binphonematch": {
        "name": "set_binphonematch",
        "params": "$binphonematch",
        "description": [
            "Sets the maxmind_output binphonematch",
            "@param string $binphonematch the new binphonematch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getBinphone": {
        "name": "getBinphone",
        "params": "",
        "description": [
            "Gets the maxmind_output binphone",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setBinphone": {
        "name": "setBinphone",
        "params": "$binphone",
        "description": [
            "Sets the maxmind_output binphone",
            "@param string $binphone the new binphone",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_binphone": {
        "name": "get_binphone",
        "params": "",
        "description": [
            "Gets the maxmind_output binphone",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_binphone": {
        "name": "set_binphone",
        "params": "$binphone",
        "description": [
            "Sets the maxmind_output binphone",
            "@param string $binphone the new binphone",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getPrepaid": {
        "name": "getPrepaid",
        "params": "",
        "description": [
            "Gets the maxmind_output prepaid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPrepaid": {
        "name": "setPrepaid",
        "params": "$prepaid",
        "description": [
            "Sets the maxmind_output prepaid",
            "@param string $prepaid the new prepaid",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_prepaid": {
        "name": "get_prepaid",
        "params": "",
        "description": [
            "Gets the maxmind_output prepaid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_prepaid": {
        "name": "set_prepaid",
        "params": "$prepaid",
        "description": [
            "Sets the maxmind_output prepaid",
            "@param string $prepaid the new prepaid",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getCustphoneinbillingloc": {
        "name": "getCustphoneinbillingloc",
        "params": "",
        "description": [
            "Gets the maxmind_output custphoneinbillingloc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCustphoneinbillingloc": {
        "name": "setCustphoneinbillingloc",
        "params": "$custphoneinbillingloc",
        "description": [
            "Sets the maxmind_output custphoneinbillingloc",
            "@param string $custphoneinbillingloc the new custphoneinbillingloc",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_custphoneinbillingloc": {
        "name": "get_custphoneinbillingloc",
        "params": "",
        "description": [
            "Gets the maxmind_output custphoneinbillingloc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_custphoneinbillingloc": {
        "name": "set_custphoneinbillingloc",
        "params": "$custphoneinbillingloc",
        "description": [
            "Sets the maxmind_output custphoneinbillingloc",
            "@param string $custphoneinbillingloc the new custphoneinbillingloc",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getShipforward": {
        "name": "getShipforward",
        "params": "",
        "description": [
            "Gets the maxmind_output shipforward",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setShipforward": {
        "name": "setShipforward",
        "params": "$shipforward",
        "description": [
            "Sets the maxmind_output shipforward",
            "@param string $shipforward the new shipforward",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_shipforward": {
        "name": "get_shipforward",
        "params": "",
        "description": [
            "Gets the maxmind_output shipforward",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_shipforward": {
        "name": "set_shipforward",
        "params": "$shipforward",
        "description": [
            "Sets the maxmind_output shipforward",
            "@param string $shipforward the new shipforward",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getCitypostalmatch": {
        "name": "getCitypostalmatch",
        "params": "",
        "description": [
            "Gets the maxmind_output citypostalmatch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCitypostalmatch": {
        "name": "setCitypostalmatch",
        "params": "$citypostalmatch",
        "description": [
            "Sets the maxmind_output citypostalmatch",
            "@param string $citypostalmatch the new citypostalmatch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_citypostalmatch": {
        "name": "get_citypostalmatch",
        "params": "",
        "description": [
            "Gets the maxmind_output citypostalmatch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_citypostalmatch": {
        "name": "set_citypostalmatch",
        "params": "$citypostalmatch",
        "description": [
            "Sets the maxmind_output citypostalmatch",
            "@param string $citypostalmatch the new citypostalmatch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getShipcitypostalmatch": {
        "name": "getShipcitypostalmatch",
        "params": "",
        "description": [
            "Gets the maxmind_output shipcitypostalmatch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setShipcitypostalmatch": {
        "name": "setShipcitypostalmatch",
        "params": "$shipcitypostalmatch",
        "description": [
            "Sets the maxmind_output shipcitypostalmatch",
            "@param string $shipcitypostalmatch the new shipcitypostalmatch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_shipcitypostalmatch": {
        "name": "get_shipcitypostalmatch",
        "params": "",
        "description": [
            "Gets the maxmind_output shipcitypostalmatch",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_shipcitypostalmatch": {
        "name": "set_shipcitypostalmatch",
        "params": "$shipcitypostalmatch",
        "description": [
            "Sets the maxmind_output shipcitypostalmatch",
            "@param string $shipcitypostalmatch the new shipcitypostalmatch",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getQueriesremaining": {
        "name": "getQueriesremaining",
        "params": "",
        "description": [
            "Gets the maxmind_output queriesremaining",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setQueriesremaining": {
        "name": "setQueriesremaining",
        "params": "$queriesremaining",
        "description": [
            "Sets the maxmind_output queriesremaining",
            "@param int $queriesremaining the new queriesremaining",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_queriesremaining": {
        "name": "get_queriesremaining",
        "params": "",
        "description": [
            "Gets the maxmind_output queriesremaining",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_queriesremaining": {
        "name": "set_queriesremaining",
        "params": "$queriesremaining",
        "description": [
            "Sets the maxmind_output queriesremaining",
            "@param int $queriesremaining the new queriesremaining",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getMinfraudVersion": {
        "name": "getMinfraudVersion",
        "params": "",
        "description": [
            "Gets the maxmind_output minfraud_version",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMinfraudVersion": {
        "name": "setMinfraudVersion",
        "params": "$minfraud_version",
        "description": [
            "Sets the maxmind_output minfraud_version",
            "@param string $minfraud_version the new minfraud_version",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_minfraud_version": {
        "name": "get_minfraud_version",
        "params": "",
        "description": [
            "Gets the maxmind_output minfraud_version",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_minfraud_version": {
        "name": "set_minfraud_version",
        "params": "$minfraud_version",
        "description": [
            "Sets the maxmind_output minfraud_version",
            "@param string $minfraud_version the new minfraud_version",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getServiceLevel": {
        "name": "getServiceLevel",
        "params": "",
        "description": [
            "Gets the maxmind_output service_level",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setServiceLevel": {
        "name": "setServiceLevel",
        "params": "$service_level",
        "description": [
            "Sets the maxmind_output service_level",
            "@param string $service_level the new service_level",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_service_level": {
        "name": "get_service_level",
        "params": "",
        "description": [
            "Gets the maxmind_output service_level",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_service_level": {
        "name": "set_service_level",
        "params": "$service_level",
        "description": [
            "Sets the maxmind_output service_level",
            "@param string $service_level the new service_level",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getErr": {
        "name": "getErr",
        "params": "",
        "description": [
            "Gets the maxmind_output err",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setErr": {
        "name": "setErr",
        "params": "$err",
        "description": [
            "Sets the maxmind_output err",
            "@param string $err the new err",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "get_err": {
        "name": "get_err",
        "params": "",
        "description": [
            "Gets the maxmind_output err",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_err": {
        "name": "set_err",
        "params": "$err",
        "description": [
            "Sets the maxmind_output err",
            "@param string $err the new err",
            "@return \\MyAdmin\\Orm\\Maxmind_Output"
        ],
        "fieldtexts": []
    },
    "getPing": {
        "name": "getPing",
        "params": "",
        "description": [
            "Gets the monitoring ping",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPing": {
        "name": "setPing",
        "params": "$ping",
        "description": [
            "Sets the monitoring ping",
            "@param int $ping the new ping",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "get_ping": {
        "name": "get_ping",
        "params": "",
        "description": [
            "Gets the monitoring ping",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ping": {
        "name": "set_ping",
        "params": "$ping",
        "description": [
            "Sets the monitoring ping",
            "@param int $ping the new ping",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "getHttp": {
        "name": "getHttp",
        "params": "",
        "description": [
            "Gets the monitoring http",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setHttp": {
        "name": "setHttp",
        "params": "$http",
        "description": [
            "Sets the monitoring http",
            "@param int $http the new http",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "get_http": {
        "name": "get_http",
        "params": "",
        "description": [
            "Gets the monitoring http",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_http": {
        "name": "set_http",
        "params": "$http",
        "description": [
            "Sets the monitoring http",
            "@param int $http the new http",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "getSmtp": {
        "name": "getSmtp",
        "params": "",
        "description": [
            "Gets the monitoring smtp",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSmtp": {
        "name": "setSmtp",
        "params": "$smtp",
        "description": [
            "Sets the monitoring smtp",
            "@param int $smtp the new smtp",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "get_smtp": {
        "name": "get_smtp",
        "params": "",
        "description": [
            "Gets the monitoring smtp",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_smtp": {
        "name": "set_smtp",
        "params": "$smtp",
        "description": [
            "Sets the monitoring smtp",
            "@param int $smtp the new smtp",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "getFtp": {
        "name": "getFtp",
        "params": "",
        "description": [
            "Gets the monitoring ftp",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setFtp": {
        "name": "setFtp",
        "params": "$ftp",
        "description": [
            "Sets the monitoring ftp",
            "@param int $ftp the new ftp",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "get_ftp": {
        "name": "get_ftp",
        "params": "",
        "description": [
            "Gets the monitoring ftp",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ftp": {
        "name": "set_ftp",
        "params": "$ftp",
        "description": [
            "Sets the monitoring ftp",
            "@param int $ftp the new ftp",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "getDns": {
        "name": "getDns",
        "params": "",
        "description": [
            "Gets the monitoring dns",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDns": {
        "name": "setDns",
        "params": "$dns",
        "description": [
            "Sets the monitoring dns",
            "@param int $dns the new dns",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "get_dns": {
        "name": "get_dns",
        "params": "",
        "description": [
            "Gets the monitoring dns",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dns": {
        "name": "set_dns",
        "params": "$dns",
        "description": [
            "Sets the monitoring dns",
            "@param int $dns the new dns",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "getImap": {
        "name": "getImap",
        "params": "",
        "description": [
            "Gets the monitoring imap",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setImap": {
        "name": "setImap",
        "params": "$imap",
        "description": [
            "Sets the monitoring imap",
            "@param int $imap the new imap",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "get_imap": {
        "name": "get_imap",
        "params": "",
        "description": [
            "Gets the monitoring imap",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_imap": {
        "name": "set_imap",
        "params": "$imap",
        "description": [
            "Sets the monitoring imap",
            "@param int $imap the new imap",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "getPop": {
        "name": "getPop",
        "params": "",
        "description": [
            "Gets the monitoring pop",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPop": {
        "name": "setPop",
        "params": "$pop",
        "description": [
            "Sets the monitoring pop",
            "@param int $pop the new pop",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "get_pop": {
        "name": "get_pop",
        "params": "",
        "description": [
            "Gets the monitoring pop",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_pop": {
        "name": "set_pop",
        "params": "$pop",
        "description": [
            "Sets the monitoring pop",
            "@param int $pop the new pop",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "getSsh": {
        "name": "getSsh",
        "params": "",
        "description": [
            "Gets the monitoring ssh",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSsh": {
        "name": "setSsh",
        "params": "$ssh",
        "description": [
            "Sets the monitoring ssh",
            "@param int $ssh the new ssh",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "get_ssh": {
        "name": "get_ssh",
        "params": "",
        "description": [
            "Gets the monitoring ssh",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ssh": {
        "name": "set_ssh",
        "params": "$ssh",
        "description": [
            "Sets the monitoring ssh",
            "@param int $ssh the new ssh",
            "@return \\MyAdmin\\Orm\\Monitoring"
        ],
        "fieldtexts": []
    },
    "getAccessToken": {
        "name": "getAccessToken",
        "params": "",
        "description": [
            "Gets the oauth_access_tokens access_token",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAccessToken": {
        "name": "setAccessToken",
        "params": "$access_token",
        "description": [
            "Sets the oauth_access_tokens access_token",
            "@param string $access_token the new access_token",
            "@return \\MyAdmin\\Orm\\Oauth_Access_Token"
        ],
        "fieldtexts": []
    },
    "get_access_token": {
        "name": "get_access_token",
        "params": "",
        "description": [
            "Gets the oauth_access_tokens access_token",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_access_token": {
        "name": "set_access_token",
        "params": "$access_token",
        "description": [
            "Sets the oauth_access_tokens access_token",
            "@param string $access_token the new access_token",
            "@return \\MyAdmin\\Orm\\Oauth_Access_Token"
        ],
        "fieldtexts": []
    },
    "getClientId": {
        "name": "getClientId",
        "params": "",
        "description": [
            "Gets the oauth_refresh_tokens client_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setClientId": {
        "name": "setClientId",
        "params": "$client_id",
        "description": [
            "Sets the oauth_refresh_tokens client_id",
            "@param string $client_id the new client_id",
            "@return \\MyAdmin\\Orm\\Oauth_Refresh_Token"
        ],
        "fieldtexts": []
    },
    "get_client_id": {
        "name": "get_client_id",
        "params": "",
        "description": [
            "Gets the oauth_refresh_tokens client_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_client_id": {
        "name": "set_client_id",
        "params": "$client_id",
        "description": [
            "Sets the oauth_refresh_tokens client_id",
            "@param string $client_id the new client_id",
            "@return \\MyAdmin\\Orm\\Oauth_Refresh_Token"
        ],
        "fieldtexts": []
    },
    "getUserId": {
        "name": "getUserId",
        "params": "",
        "description": [
            "Gets the oauth_refresh_tokens user_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setUserId": {
        "name": "setUserId",
        "params": "$user_id",
        "description": [
            "Sets the oauth_refresh_tokens user_id",
            "@param string $user_id the new user_id",
            "@return \\MyAdmin\\Orm\\Oauth_Refresh_Token"
        ],
        "fieldtexts": []
    },
    "get_user_id": {
        "name": "get_user_id",
        "params": "",
        "description": [
            "Gets the oauth_refresh_tokens user_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_user_id": {
        "name": "set_user_id",
        "params": "$user_id",
        "description": [
            "Sets the oauth_refresh_tokens user_id",
            "@param string $user_id the new user_id",
            "@return \\MyAdmin\\Orm\\Oauth_Refresh_Token"
        ],
        "fieldtexts": []
    },
    "getExpires": {
        "name": "getExpires",
        "params": "",
        "description": [
            "Gets the trials expires",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setExpires": {
        "name": "setExpires",
        "params": "$expires",
        "description": [
            "Sets the trials expires",
            "@param string $expires the new expires",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "get_expires": {
        "name": "get_expires",
        "params": "",
        "description": [
            "Gets the trials expires",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_expires": {
        "name": "set_expires",
        "params": "$expires",
        "description": [
            "Sets the trials expires",
            "@param string $expires the new expires",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "getScope": {
        "name": "getScope",
        "params": "",
        "description": [
            "Gets the oauth_users scope",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setScope": {
        "name": "setScope",
        "params": "$scope",
        "description": [
            "Sets the oauth_users scope",
            "@param string $scope the new scope",
            "@return \\MyAdmin\\Orm\\Oauth_User"
        ],
        "fieldtexts": []
    },
    "get_scope": {
        "name": "get_scope",
        "params": "",
        "description": [
            "Gets the oauth_users scope",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_scope": {
        "name": "set_scope",
        "params": "$scope",
        "description": [
            "Sets the oauth_users scope",
            "@param string $scope the new scope",
            "@return \\MyAdmin\\Orm\\Oauth_User"
        ],
        "fieldtexts": []
    },
    "getAuthorizationCode": {
        "name": "getAuthorizationCode",
        "params": "",
        "description": [
            "Gets the oauth_authorization_codes authorization_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAuthorizationCode": {
        "name": "setAuthorizationCode",
        "params": "$authorization_code",
        "description": [
            "Sets the oauth_authorization_codes authorization_code",
            "@param string $authorization_code the new authorization_code",
            "@return \\MyAdmin\\Orm\\Oauth_Authorization_Code"
        ],
        "fieldtexts": []
    },
    "get_authorization_code": {
        "name": "get_authorization_code",
        "params": "",
        "description": [
            "Gets the oauth_authorization_codes authorization_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_authorization_code": {
        "name": "set_authorization_code",
        "params": "$authorization_code",
        "description": [
            "Sets the oauth_authorization_codes authorization_code",
            "@param string $authorization_code the new authorization_code",
            "@return \\MyAdmin\\Orm\\Oauth_Authorization_Code"
        ],
        "fieldtexts": []
    },
    "getRedirectUri": {
        "name": "getRedirectUri",
        "params": "",
        "description": [
            "Gets the oauth_clients redirect_uri",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRedirectUri": {
        "name": "setRedirectUri",
        "params": "$redirect_uri",
        "description": [
            "Sets the oauth_clients redirect_uri",
            "@param string $redirect_uri the new redirect_uri",
            "@return \\MyAdmin\\Orm\\Oauth_Client"
        ],
        "fieldtexts": []
    },
    "get_redirect_uri": {
        "name": "get_redirect_uri",
        "params": "",
        "description": [
            "Gets the oauth_clients redirect_uri",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_redirect_uri": {
        "name": "set_redirect_uri",
        "params": "$redirect_uri",
        "description": [
            "Sets the oauth_clients redirect_uri",
            "@param string $redirect_uri the new redirect_uri",
            "@return \\MyAdmin\\Orm\\Oauth_Client"
        ],
        "fieldtexts": []
    },
    "getIdToken": {
        "name": "getIdToken",
        "params": "",
        "description": [
            "Gets the oauth_authorization_codes id_token",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIdToken": {
        "name": "setIdToken",
        "params": "$id_token",
        "description": [
            "Sets the oauth_authorization_codes id_token",
            "@param string $id_token the new id_token",
            "@return \\MyAdmin\\Orm\\Oauth_Authorization_Code"
        ],
        "fieldtexts": []
    },
    "get_id_token": {
        "name": "get_id_token",
        "params": "",
        "description": [
            "Gets the oauth_authorization_codes id_token",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_id_token": {
        "name": "set_id_token",
        "params": "$id_token",
        "description": [
            "Sets the oauth_authorization_codes id_token",
            "@param string $id_token the new id_token",
            "@return \\MyAdmin\\Orm\\Oauth_Authorization_Code"
        ],
        "fieldtexts": []
    },
    "getClientSecret": {
        "name": "getClientSecret",
        "params": "",
        "description": [
            "Gets the oauth_clients client_secret",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setClientSecret": {
        "name": "setClientSecret",
        "params": "$client_secret",
        "description": [
            "Sets the oauth_clients client_secret",
            "@param string $client_secret the new client_secret",
            "@return \\MyAdmin\\Orm\\Oauth_Client"
        ],
        "fieldtexts": []
    },
    "get_client_secret": {
        "name": "get_client_secret",
        "params": "",
        "description": [
            "Gets the oauth_clients client_secret",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_client_secret": {
        "name": "set_client_secret",
        "params": "$client_secret",
        "description": [
            "Sets the oauth_clients client_secret",
            "@param string $client_secret the new client_secret",
            "@return \\MyAdmin\\Orm\\Oauth_Client"
        ],
        "fieldtexts": []
    },
    "getGrantTypes": {
        "name": "getGrantTypes",
        "params": "",
        "description": [
            "Gets the oauth_clients grant_types",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setGrantTypes": {
        "name": "setGrantTypes",
        "params": "$grant_types",
        "description": [
            "Sets the oauth_clients grant_types",
            "@param string $grant_types the new grant_types",
            "@return \\MyAdmin\\Orm\\Oauth_Client"
        ],
        "fieldtexts": []
    },
    "get_grant_types": {
        "name": "get_grant_types",
        "params": "",
        "description": [
            "Gets the oauth_clients grant_types",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_grant_types": {
        "name": "set_grant_types",
        "params": "$grant_types",
        "description": [
            "Sets the oauth_clients grant_types",
            "@param string $grant_types the new grant_types",
            "@return \\MyAdmin\\Orm\\Oauth_Client"
        ],
        "fieldtexts": []
    },
    "getIssuer": {
        "name": "getIssuer",
        "params": "",
        "description": [
            "Gets the oauth_jti issuer",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIssuer": {
        "name": "setIssuer",
        "params": "$issuer",
        "description": [
            "Sets the oauth_jti issuer",
            "@param string $issuer the new issuer",
            "@return \\MyAdmin\\Orm\\Oauth_Jti"
        ],
        "fieldtexts": []
    },
    "get_issuer": {
        "name": "get_issuer",
        "params": "",
        "description": [
            "Gets the oauth_jti issuer",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_issuer": {
        "name": "set_issuer",
        "params": "$issuer",
        "description": [
            "Sets the oauth_jti issuer",
            "@param string $issuer the new issuer",
            "@return \\MyAdmin\\Orm\\Oauth_Jti"
        ],
        "fieldtexts": []
    },
    "getSubject": {
        "name": "getSubject",
        "params": "",
        "description": [
            "Gets the oauth_jwt subject",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSubject": {
        "name": "setSubject",
        "params": "$subject",
        "description": [
            "Sets the oauth_jwt subject",
            "@param string $subject the new subject",
            "@return \\MyAdmin\\Orm\\Oauth_Jwt"
        ],
        "fieldtexts": []
    },
    "get_subject": {
        "name": "get_subject",
        "params": "",
        "description": [
            "Gets the oauth_jwt subject",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_subject": {
        "name": "set_subject",
        "params": "$subject",
        "description": [
            "Sets the oauth_jwt subject",
            "@param string $subject the new subject",
            "@return \\MyAdmin\\Orm\\Oauth_Jwt"
        ],
        "fieldtexts": []
    },
    "getAudiance": {
        "name": "getAudiance",
        "params": "",
        "description": [
            "Gets the oauth_jti audiance",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAudiance": {
        "name": "setAudiance",
        "params": "$audiance",
        "description": [
            "Sets the oauth_jti audiance",
            "@param string $audiance the new audiance",
            "@return \\MyAdmin\\Orm\\Oauth_Jti"
        ],
        "fieldtexts": []
    },
    "get_audiance": {
        "name": "get_audiance",
        "params": "",
        "description": [
            "Gets the oauth_jti audiance",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_audiance": {
        "name": "set_audiance",
        "params": "$audiance",
        "description": [
            "Sets the oauth_jti audiance",
            "@param string $audiance the new audiance",
            "@return \\MyAdmin\\Orm\\Oauth_Jti"
        ],
        "fieldtexts": []
    },
    "getJti": {
        "name": "getJti",
        "params": "",
        "description": [
            "Gets the oauth_jti jti",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setJti": {
        "name": "setJti",
        "params": "$jti",
        "description": [
            "Sets the oauth_jti jti",
            "@param string $jti the new jti",
            "@return \\MyAdmin\\Orm\\Oauth_Jti"
        ],
        "fieldtexts": []
    },
    "get_jti": {
        "name": "get_jti",
        "params": "",
        "description": [
            "Gets the oauth_jti jti",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_jti": {
        "name": "set_jti",
        "params": "$jti",
        "description": [
            "Sets the oauth_jti jti",
            "@param string $jti the new jti",
            "@return \\MyAdmin\\Orm\\Oauth_Jti"
        ],
        "fieldtexts": []
    },
    "getPublicKey": {
        "name": "getPublicKey",
        "params": "",
        "description": [
            "Gets the oauth_public_keys public_key",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPublicKey": {
        "name": "setPublicKey",
        "params": "$public_key",
        "description": [
            "Sets the oauth_public_keys public_key",
            "@param string $public_key the new public_key",
            "@return \\MyAdmin\\Orm\\Oauth_Public_Key"
        ],
        "fieldtexts": []
    },
    "get_public_key": {
        "name": "get_public_key",
        "params": "",
        "description": [
            "Gets the oauth_public_keys public_key",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_public_key": {
        "name": "set_public_key",
        "params": "$public_key",
        "description": [
            "Sets the oauth_public_keys public_key",
            "@param string $public_key the new public_key",
            "@return \\MyAdmin\\Orm\\Oauth_Public_Key"
        ],
        "fieldtexts": []
    },
    "getPrivateKey": {
        "name": "getPrivateKey",
        "params": "",
        "description": [
            "Gets the ssl_certs private_key",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setPrivateKey": {
        "name": "setPrivateKey",
        "params": "$private_key",
        "description": [
            "Sets the ssl_certs private_key",
            "@param mixed $private_key the new private_key",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_private_key": {
        "name": "get_private_key",
        "params": "",
        "description": [
            "Gets the ssl_certs private_key",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_private_key": {
        "name": "set_private_key",
        "params": "$private_key",
        "description": [
            "Sets the ssl_certs private_key",
            "@param mixed $private_key the new private_key",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getEncryptionAlgorithm": {
        "name": "getEncryptionAlgorithm",
        "params": "",
        "description": [
            "Gets the oauth_public_keys encryption_algorithm",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEncryptionAlgorithm": {
        "name": "setEncryptionAlgorithm",
        "params": "$encryption_algorithm",
        "description": [
            "Sets the oauth_public_keys encryption_algorithm",
            "@param string $encryption_algorithm the new encryption_algorithm",
            "@return \\MyAdmin\\Orm\\Oauth_Public_Key"
        ],
        "fieldtexts": []
    },
    "get_encryption_algorithm": {
        "name": "get_encryption_algorithm",
        "params": "",
        "description": [
            "Gets the oauth_public_keys encryption_algorithm",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_encryption_algorithm": {
        "name": "set_encryption_algorithm",
        "params": "$encryption_algorithm",
        "description": [
            "Sets the oauth_public_keys encryption_algorithm",
            "@param string $encryption_algorithm the new encryption_algorithm",
            "@return \\MyAdmin\\Orm\\Oauth_Public_Key"
        ],
        "fieldtexts": []
    },
    "getRefreshToken": {
        "name": "getRefreshToken",
        "params": "",
        "description": [
            "Gets the oauth_refresh_tokens refresh_token",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRefreshToken": {
        "name": "setRefreshToken",
        "params": "$refresh_token",
        "description": [
            "Sets the oauth_refresh_tokens refresh_token",
            "@param string $refresh_token the new refresh_token",
            "@return \\MyAdmin\\Orm\\Oauth_Refresh_Token"
        ],
        "fieldtexts": []
    },
    "get_refresh_token": {
        "name": "get_refresh_token",
        "params": "",
        "description": [
            "Gets the oauth_refresh_tokens refresh_token",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_refresh_token": {
        "name": "set_refresh_token",
        "params": "$refresh_token",
        "description": [
            "Sets the oauth_refresh_tokens refresh_token",
            "@param string $refresh_token the new refresh_token",
            "@return \\MyAdmin\\Orm\\Oauth_Refresh_Token"
        ],
        "fieldtexts": []
    },
    "getIsDefault": {
        "name": "getIsDefault",
        "params": "",
        "description": [
            "Gets the oauth_scopes is_default",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setIsDefault": {
        "name": "setIsDefault",
        "params": "$is_default",
        "description": [
            "Sets the oauth_scopes is_default",
            "@param int $is_default the new is_default",
            "@return \\MyAdmin\\Orm\\Oauth_Scope"
        ],
        "fieldtexts": []
    },
    "get_is_default": {
        "name": "get_is_default",
        "params": "",
        "description": [
            "Gets the oauth_scopes is_default",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_is_default": {
        "name": "set_is_default",
        "params": "$is_default",
        "description": [
            "Sets the oauth_scopes is_default",
            "@param int $is_default the new is_default",
            "@return \\MyAdmin\\Orm\\Oauth_Scope"
        ],
        "fieldtexts": []
    },
    "getFirstName": {
        "name": "getFirstName",
        "params": "",
        "description": [
            "Gets the paypal first_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFirstName": {
        "name": "setFirstName",
        "params": "$first_name",
        "description": [
            "Sets the paypal first_name",
            "@param string $first_name the new first_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "set_first_name": {
        "name": "set_first_name",
        "params": "$first_name",
        "description": [
            "Sets the paypal first_name",
            "@param string $first_name the new first_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getLastName": {
        "name": "getLastName",
        "params": "",
        "description": [
            "Gets the paypal last_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLastName": {
        "name": "setLastName",
        "params": "$last_name",
        "description": [
            "Sets the paypal last_name",
            "@param string $last_name the new last_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "set_last_name": {
        "name": "set_last_name",
        "params": "$last_name",
        "description": [
            "Sets the paypal last_name",
            "@param string $last_name the new last_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getEmailVerified": {
        "name": "getEmailVerified",
        "params": "",
        "description": [
            "Gets the oauth_users email_verified",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setEmailVerified": {
        "name": "setEmailVerified",
        "params": "$email_verified",
        "description": [
            "Sets the oauth_users email_verified",
            "@param int $email_verified the new email_verified",
            "@return \\MyAdmin\\Orm\\Oauth_User"
        ],
        "fieldtexts": []
    },
    "get_email_verified": {
        "name": "get_email_verified",
        "params": "",
        "description": [
            "Gets the oauth_users email_verified",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_email_verified": {
        "name": "set_email_verified",
        "params": "$email_verified",
        "description": [
            "Sets the oauth_users email_verified",
            "@param int $email_verified the new email_verified",
            "@return \\MyAdmin\\Orm\\Oauth_User"
        ],
        "fieldtexts": []
    },
    "getWhen": {
        "name": "getWhen",
        "params": "",
        "description": [
            "Gets the vps_stats when",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setWhen": {
        "name": "setWhen",
        "params": "$when",
        "description": [
            "Sets the vps_stats when",
            "@param string $when the new when",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_when": {
        "name": "get_when",
        "params": "",
        "description": [
            "Gets the vps_stats when",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_when": {
        "name": "set_when",
        "params": "$when",
        "description": [
            "Sets the vps_stats when",
            "@param string $when the new when",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getCustom": {
        "name": "getCustom",
        "params": "",
        "description": [
            "Gets the paypal_subscriptions custom",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCustom": {
        "name": "setCustom",
        "params": "$custom",
        "description": [
            "Sets the paypal_subscriptions custom",
            "@param string $custom the new custom",
            "@return \\MyAdmin\\Orm\\Paypal_Subscription"
        ],
        "fieldtexts": []
    },
    "get_custom": {
        "name": "get_custom",
        "params": "",
        "description": [
            "Gets the paypal_subscriptions custom",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_custom": {
        "name": "set_custom",
        "params": "$custom",
        "description": [
            "Sets the paypal_subscriptions custom",
            "@param string $custom the new custom",
            "@return \\MyAdmin\\Orm\\Paypal_Subscription"
        ],
        "fieldtexts": []
    },
    "getMcGross": {
        "name": "getMcGross",
        "params": "",
        "description": [
            "Gets the paypal mc_gross",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setMcGross": {
        "name": "setMcGross",
        "params": "$mc_gross",
        "description": [
            "Sets the paypal mc_gross",
            "@param float $mc_gross the new mc_gross",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_gross": {
        "name": "get_mc_gross",
        "params": "",
        "description": [
            "Gets the paypal mc_gross",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_mc_gross": {
        "name": "set_mc_gross",
        "params": "$mc_gross",
        "description": [
            "Sets the paypal mc_gross",
            "@param float $mc_gross the new mc_gross",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getTxnId": {
        "name": "getTxnId",
        "params": "",
        "description": [
            "Gets the paypal txn_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTxnId": {
        "name": "setTxnId",
        "params": "$txn_id",
        "description": [
            "Sets the paypal txn_id",
            "@param string $txn_id the new txn_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_txn_id": {
        "name": "get_txn_id",
        "params": "",
        "description": [
            "Gets the paypal txn_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_txn_id": {
        "name": "set_txn_id",
        "params": "$txn_id",
        "description": [
            "Sets the paypal txn_id",
            "@param string $txn_id the new txn_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPaymentType": {
        "name": "getPaymentType",
        "params": "",
        "description": [
            "Gets the paypal payment_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPaymentType": {
        "name": "setPaymentType",
        "params": "$payment_type",
        "description": [
            "Sets the paypal payment_type",
            "@param string $payment_type the new payment_type",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "set_payment_type": {
        "name": "set_payment_type",
        "params": "$payment_type",
        "description": [
            "Sets the paypal payment_type",
            "@param string $payment_type the new payment_type",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPaymentDate": {
        "name": "getPaymentDate",
        "params": "",
        "description": [
            "Gets the paypal payment_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPaymentDate": {
        "name": "setPaymentDate",
        "params": "$payment_date",
        "description": [
            "Sets the paypal payment_date",
            "@param string $payment_date the new payment_date",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_payment_date": {
        "name": "get_payment_date",
        "params": "",
        "description": [
            "Gets the paypal payment_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payment_date": {
        "name": "set_payment_date",
        "params": "$payment_date",
        "description": [
            "Sets the paypal payment_date",
            "@param string $payment_date the new payment_date",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPaymentStatus": {
        "name": "getPaymentStatus",
        "params": "",
        "description": [
            "Gets the paypal payment_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPaymentStatus": {
        "name": "setPaymentStatus",
        "params": "$payment_status",
        "description": [
            "Sets the paypal payment_status",
            "@param string $payment_status the new payment_status",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_payment_status": {
        "name": "get_payment_status",
        "params": "",
        "description": [
            "Gets the paypal payment_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payment_status": {
        "name": "set_payment_status",
        "params": "$payment_status",
        "description": [
            "Sets the paypal payment_status",
            "@param string $payment_status the new payment_status",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPayerStatus": {
        "name": "getPayerStatus",
        "params": "",
        "description": [
            "Gets the paypal payer_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPayerStatus": {
        "name": "setPayerStatus",
        "params": "$payer_status",
        "description": [
            "Sets the paypal payer_status",
            "@param string $payer_status the new payer_status",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_payer_status": {
        "name": "get_payer_status",
        "params": "",
        "description": [
            "Gets the paypal payer_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payer_status": {
        "name": "set_payer_status",
        "params": "$payer_status",
        "description": [
            "Sets the paypal payer_status",
            "@param string $payer_status the new payer_status",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPayerEmail": {
        "name": "getPayerEmail",
        "params": "",
        "description": [
            "Gets the paypal payer_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPayerEmail": {
        "name": "setPayerEmail",
        "params": "$payer_email",
        "description": [
            "Sets the paypal payer_email",
            "@param string $payer_email the new payer_email",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_payer_email": {
        "name": "get_payer_email",
        "params": "",
        "description": [
            "Gets the paypal payer_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payer_email": {
        "name": "set_payer_email",
        "params": "$payer_email",
        "description": [
            "Sets the paypal payer_email",
            "@param string $payer_email the new payer_email",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPayerId": {
        "name": "getPayerId",
        "params": "",
        "description": [
            "Gets the paypal payer_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPayerId": {
        "name": "setPayerId",
        "params": "$payer_id",
        "description": [
            "Sets the paypal payer_id",
            "@param string $payer_id the new payer_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_payer_id": {
        "name": "get_payer_id",
        "params": "",
        "description": [
            "Gets the paypal payer_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payer_id": {
        "name": "set_payer_id",
        "params": "$payer_id",
        "description": [
            "Sets the paypal payer_id",
            "@param string $payer_id the new payer_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getBusiness": {
        "name": "getBusiness",
        "params": "",
        "description": [
            "Gets the paypal business",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setBusiness": {
        "name": "setBusiness",
        "params": "$business",
        "description": [
            "Sets the paypal business",
            "@param string $business the new business",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_business": {
        "name": "get_business",
        "params": "",
        "description": [
            "Gets the paypal business",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_business": {
        "name": "set_business",
        "params": "$business",
        "description": [
            "Sets the paypal business",
            "@param string $business the new business",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcFee": {
        "name": "getMcFee",
        "params": "",
        "description": [
            "Gets the paypal mc_fee",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setMcFee": {
        "name": "setMcFee",
        "params": "$mc_fee",
        "description": [
            "Sets the paypal mc_fee",
            "@param float $mc_fee the new mc_fee",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_fee": {
        "name": "get_mc_fee",
        "params": "",
        "description": [
            "Gets the paypal mc_fee",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_mc_fee": {
        "name": "set_mc_fee",
        "params": "$mc_fee",
        "description": [
            "Sets the paypal mc_fee",
            "@param float $mc_fee the new mc_fee",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getNotifyVersion": {
        "name": "getNotifyVersion",
        "params": "",
        "description": [
            "Gets the paypal notify_version",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setNotifyVersion": {
        "name": "setNotifyVersion",
        "params": "$notify_version",
        "description": [
            "Sets the paypal notify_version",
            "@param float $notify_version the new notify_version",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_notify_version": {
        "name": "get_notify_version",
        "params": "",
        "description": [
            "Gets the paypal notify_version",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_notify_version": {
        "name": "set_notify_version",
        "params": "$notify_version",
        "description": [
            "Sets the paypal notify_version",
            "@param float $notify_version the new notify_version",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getCharset": {
        "name": "getCharset",
        "params": "",
        "description": [
            "Gets the paypal charset",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCharset": {
        "name": "setCharset",
        "params": "$charset",
        "description": [
            "Sets the paypal charset",
            "@param string $charset the new charset",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_charset": {
        "name": "get_charset",
        "params": "",
        "description": [
            "Gets the paypal charset",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_charset": {
        "name": "set_charset",
        "params": "$charset",
        "description": [
            "Sets the paypal charset",
            "@param string $charset the new charset",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getVerifySign": {
        "name": "getVerifySign",
        "params": "",
        "description": [
            "Gets the paypal verify_sign",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setVerifySign": {
        "name": "setVerifySign",
        "params": "$verify_sign",
        "description": [
            "Sets the paypal verify_sign",
            "@param string $verify_sign the new verify_sign",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_verify_sign": {
        "name": "get_verify_sign",
        "params": "",
        "description": [
            "Gets the paypal verify_sign",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_verify_sign": {
        "name": "set_verify_sign",
        "params": "$verify_sign",
        "description": [
            "Sets the paypal verify_sign",
            "@param string $verify_sign the new verify_sign",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getReceiverEmail": {
        "name": "getReceiverEmail",
        "params": "",
        "description": [
            "Gets the paypal receiver_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setReceiverEmail": {
        "name": "setReceiverEmail",
        "params": "$receiver_email",
        "description": [
            "Sets the paypal receiver_email",
            "@param string $receiver_email the new receiver_email",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_receiver_email": {
        "name": "get_receiver_email",
        "params": "",
        "description": [
            "Gets the paypal receiver_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_receiver_email": {
        "name": "set_receiver_email",
        "params": "$receiver_email",
        "description": [
            "Sets the paypal receiver_email",
            "@param string $receiver_email the new receiver_email",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getReceiverId": {
        "name": "getReceiverId",
        "params": "",
        "description": [
            "Gets the paypal receiver_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setReceiverId": {
        "name": "setReceiverId",
        "params": "$receiver_id",
        "description": [
            "Sets the paypal receiver_id",
            "@param string $receiver_id the new receiver_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_receiver_id": {
        "name": "get_receiver_id",
        "params": "",
        "description": [
            "Gets the paypal receiver_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_receiver_id": {
        "name": "set_receiver_id",
        "params": "$receiver_id",
        "description": [
            "Sets the paypal receiver_id",
            "@param string $receiver_id the new receiver_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getResidenceCountry": {
        "name": "getResidenceCountry",
        "params": "",
        "description": [
            "Gets the paypal residence_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResidenceCountry": {
        "name": "setResidenceCountry",
        "params": "$residence_country",
        "description": [
            "Sets the paypal residence_country",
            "@param string $residence_country the new residence_country",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_residence_country": {
        "name": "get_residence_country",
        "params": "",
        "description": [
            "Gets the paypal residence_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_residence_country": {
        "name": "set_residence_country",
        "params": "$residence_country",
        "description": [
            "Sets the paypal residence_country",
            "@param string $residence_country the new residence_country",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemNumber": {
        "name": "getItemNumber",
        "params": "",
        "description": [
            "Gets the paypal item_number",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemNumber": {
        "name": "setItemNumber",
        "params": "$item_number",
        "description": [
            "Sets the paypal item_number",
            "@param string $item_number the new item_number",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_number": {
        "name": "get_item_number",
        "params": "",
        "description": [
            "Gets the paypal item_number",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_number": {
        "name": "set_item_number",
        "params": "$item_number",
        "description": [
            "Sets the paypal item_number",
            "@param string $item_number the new item_number",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcCurrency": {
        "name": "getMcCurrency",
        "params": "",
        "description": [
            "Gets the paypal mc_currency",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcCurrency": {
        "name": "setMcCurrency",
        "params": "$mc_currency",
        "description": [
            "Sets the paypal mc_currency",
            "@param string $mc_currency the new mc_currency",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_currency": {
        "name": "get_mc_currency",
        "params": "",
        "description": [
            "Gets the paypal mc_currency",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_currency": {
        "name": "set_mc_currency",
        "params": "$mc_currency",
        "description": [
            "Sets the paypal mc_currency",
            "@param string $mc_currency the new mc_currency",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getTxnType": {
        "name": "getTxnType",
        "params": "",
        "description": [
            "Gets the paypal txn_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTxnType": {
        "name": "setTxnType",
        "params": "$txn_type",
        "description": [
            "Sets the paypal txn_type",
            "@param string $txn_type the new txn_type",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_txn_type": {
        "name": "get_txn_type",
        "params": "",
        "description": [
            "Gets the paypal txn_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_txn_type": {
        "name": "set_txn_type",
        "params": "$txn_type",
        "description": [
            "Sets the paypal txn_type",
            "@param string $txn_type the new txn_type",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getProtectionEligibility": {
        "name": "getProtectionEligibility",
        "params": "",
        "description": [
            "Gets the paypal protection_eligibility",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setProtectionEligibility": {
        "name": "setProtectionEligibility",
        "params": "$protection_eligibility",
        "description": [
            "Sets the paypal protection_eligibility",
            "@param string $protection_eligibility the new protection_eligibility",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_protection_eligibility": {
        "name": "get_protection_eligibility",
        "params": "",
        "description": [
            "Gets the paypal protection_eligibility",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_protection_eligibility": {
        "name": "set_protection_eligibility",
        "params": "$protection_eligibility",
        "description": [
            "Sets the paypal protection_eligibility",
            "@param string $protection_eligibility the new protection_eligibility",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPaymentFee": {
        "name": "getPaymentFee",
        "params": "",
        "description": [
            "Gets the paypal payment_fee",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setPaymentFee": {
        "name": "setPaymentFee",
        "params": "$payment_fee",
        "description": [
            "Sets the paypal payment_fee",
            "@param float $payment_fee the new payment_fee",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_payment_fee": {
        "name": "get_payment_fee",
        "params": "",
        "description": [
            "Gets the paypal payment_fee",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_payment_fee": {
        "name": "set_payment_fee",
        "params": "$payment_fee",
        "description": [
            "Sets the paypal payment_fee",
            "@param float $payment_fee the new payment_fee",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getTransactionSubject": {
        "name": "getTransactionSubject",
        "params": "",
        "description": [
            "Gets the paypal transaction_subject",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTransactionSubject": {
        "name": "setTransactionSubject",
        "params": "$transaction_subject",
        "description": [
            "Sets the paypal transaction_subject",
            "@param string $transaction_subject the new transaction_subject",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_transaction_subject": {
        "name": "get_transaction_subject",
        "params": "",
        "description": [
            "Gets the paypal transaction_subject",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_transaction_subject": {
        "name": "set_transaction_subject",
        "params": "$transaction_subject",
        "description": [
            "Sets the paypal transaction_subject",
            "@param string $transaction_subject the new transaction_subject",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPaymentGross": {
        "name": "getPaymentGross",
        "params": "",
        "description": [
            "Gets the paypal payment_gross",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPaymentGross": {
        "name": "setPaymentGross",
        "params": "$payment_gross",
        "description": [
            "Sets the paypal payment_gross",
            "@param string $payment_gross the new payment_gross",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_payment_gross": {
        "name": "get_payment_gross",
        "params": "",
        "description": [
            "Gets the paypal payment_gross",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payment_gross": {
        "name": "set_payment_gross",
        "params": "$payment_gross",
        "description": [
            "Sets the paypal payment_gross",
            "@param string $payment_gross the new payment_gross",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemName": {
        "name": "getItemName",
        "params": "",
        "description": [
            "Gets the paypal item_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemName": {
        "name": "setItemName",
        "params": "$item_name",
        "description": [
            "Sets the paypal item_name",
            "@param string $item_name the new item_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_name": {
        "name": "get_item_name",
        "params": "",
        "description": [
            "Gets the paypal item_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_name": {
        "name": "set_item_name",
        "params": "$item_name",
        "description": [
            "Sets the paypal item_name",
            "@param string $item_name the new item_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAddressStatus": {
        "name": "getAddressStatus",
        "params": "",
        "description": [
            "Gets the paypal address_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddressStatus": {
        "name": "setAddressStatus",
        "params": "$address_status",
        "description": [
            "Sets the paypal address_status",
            "@param string $address_status the new address_status",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_address_status": {
        "name": "get_address_status",
        "params": "",
        "description": [
            "Gets the paypal address_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address_status": {
        "name": "set_address_status",
        "params": "$address_status",
        "description": [
            "Sets the paypal address_status",
            "@param string $address_status the new address_status",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAddressName": {
        "name": "getAddressName",
        "params": "",
        "description": [
            "Gets the paypal address_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddressName": {
        "name": "setAddressName",
        "params": "$address_name",
        "description": [
            "Sets the paypal address_name",
            "@param string $address_name the new address_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_address_name": {
        "name": "get_address_name",
        "params": "",
        "description": [
            "Gets the paypal address_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address_name": {
        "name": "set_address_name",
        "params": "$address_name",
        "description": [
            "Sets the paypal address_name",
            "@param string $address_name the new address_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAddressCountry": {
        "name": "getAddressCountry",
        "params": "",
        "description": [
            "Gets the paypal address_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddressCountry": {
        "name": "setAddressCountry",
        "params": "$address_country",
        "description": [
            "Sets the paypal address_country",
            "@param string $address_country the new address_country",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_address_country": {
        "name": "get_address_country",
        "params": "",
        "description": [
            "Gets the paypal address_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address_country": {
        "name": "set_address_country",
        "params": "$address_country",
        "description": [
            "Sets the paypal address_country",
            "@param string $address_country the new address_country",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAddressCountryCode": {
        "name": "getAddressCountryCode",
        "params": "",
        "description": [
            "Gets the paypal address_country_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddressCountryCode": {
        "name": "setAddressCountryCode",
        "params": "$address_country_code",
        "description": [
            "Sets the paypal address_country_code",
            "@param string $address_country_code the new address_country_code",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_address_country_code": {
        "name": "get_address_country_code",
        "params": "",
        "description": [
            "Gets the paypal address_country_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address_country_code": {
        "name": "set_address_country_code",
        "params": "$address_country_code",
        "description": [
            "Sets the paypal address_country_code",
            "@param string $address_country_code the new address_country_code",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAddressZip": {
        "name": "getAddressZip",
        "params": "",
        "description": [
            "Gets the paypal address_zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddressZip": {
        "name": "setAddressZip",
        "params": "$address_zip",
        "description": [
            "Sets the paypal address_zip",
            "@param string $address_zip the new address_zip",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_address_zip": {
        "name": "get_address_zip",
        "params": "",
        "description": [
            "Gets the paypal address_zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address_zip": {
        "name": "set_address_zip",
        "params": "$address_zip",
        "description": [
            "Sets the paypal address_zip",
            "@param string $address_zip the new address_zip",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAddressCity": {
        "name": "getAddressCity",
        "params": "",
        "description": [
            "Gets the paypal address_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddressCity": {
        "name": "setAddressCity",
        "params": "$address_city",
        "description": [
            "Sets the paypal address_city",
            "@param string $address_city the new address_city",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_address_city": {
        "name": "get_address_city",
        "params": "",
        "description": [
            "Gets the paypal address_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address_city": {
        "name": "set_address_city",
        "params": "$address_city",
        "description": [
            "Sets the paypal address_city",
            "@param string $address_city the new address_city",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAddressStreet": {
        "name": "getAddressStreet",
        "params": "",
        "description": [
            "Gets the paypal address_street",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddressStreet": {
        "name": "setAddressStreet",
        "params": "$address_street",
        "description": [
            "Sets the paypal address_street",
            "@param string $address_street the new address_street",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_address_street": {
        "name": "get_address_street",
        "params": "",
        "description": [
            "Gets the paypal address_street",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address_street": {
        "name": "set_address_street",
        "params": "$address_street",
        "description": [
            "Sets the paypal address_street",
            "@param string $address_street the new address_street",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAddressState": {
        "name": "getAddressState",
        "params": "",
        "description": [
            "Gets the paypal address_state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddressState": {
        "name": "setAddressState",
        "params": "$address_state",
        "description": [
            "Sets the paypal address_state",
            "@param string $address_state the new address_state",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_address_state": {
        "name": "get_address_state",
        "params": "",
        "description": [
            "Gets the paypal address_state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address_state": {
        "name": "set_address_state",
        "params": "$address_state",
        "description": [
            "Sets the paypal address_state",
            "@param string $address_state the new address_state",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getQuantity": {
        "name": "getQuantity",
        "params": "",
        "description": [
            "Gets the salesmanager_items quantity",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setQuantity": {
        "name": "setQuantity",
        "params": "$quantity",
        "description": [
            "Sets the salesmanager_items quantity",
            "@param int $quantity the new quantity",
            "@return \\MyAdmin\\Orm\\Salesmanager_Item"
        ],
        "fieldtexts": []
    },
    "get_quantity": {
        "name": "get_quantity",
        "params": "",
        "description": [
            "Gets the salesmanager_items quantity",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_quantity": {
        "name": "set_quantity",
        "params": "$quantity",
        "description": [
            "Sets the salesmanager_items quantity",
            "@param int $quantity the new quantity",
            "@return \\MyAdmin\\Orm\\Salesmanager_Item"
        ],
        "fieldtexts": []
    },
    "getTax": {
        "name": "getTax",
        "params": "",
        "description": [
            "Gets the paypal tax",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setTax": {
        "name": "setTax",
        "params": "$tax",
        "description": [
            "Sets the paypal tax",
            "@param float $tax the new tax",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_tax": {
        "name": "get_tax",
        "params": "",
        "description": [
            "Gets the paypal tax",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_tax": {
        "name": "set_tax",
        "params": "$tax",
        "description": [
            "Sets the paypal tax",
            "@param float $tax the new tax",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getShipping": {
        "name": "getShipping",
        "params": "",
        "description": [
            "Gets the paypal shipping",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setShipping": {
        "name": "setShipping",
        "params": "$shipping",
        "description": [
            "Sets the paypal shipping",
            "@param float $shipping the new shipping",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_shipping": {
        "name": "get_shipping",
        "params": "",
        "description": [
            "Gets the paypal shipping",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_shipping": {
        "name": "set_shipping",
        "params": "$shipping",
        "description": [
            "Sets the paypal shipping",
            "@param float $shipping the new shipping",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getHandlingAmount": {
        "name": "getHandlingAmount",
        "params": "",
        "description": [
            "Gets the paypal handling_amount",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setHandlingAmount": {
        "name": "setHandlingAmount",
        "params": "$handling_amount",
        "description": [
            "Sets the paypal handling_amount",
            "@param float $handling_amount the new handling_amount",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_handling_amount": {
        "name": "get_handling_amount",
        "params": "",
        "description": [
            "Gets the paypal handling_amount",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_handling_amount": {
        "name": "set_handling_amount",
        "params": "$handling_amount",
        "description": [
            "Sets the paypal handling_amount",
            "@param float $handling_amount the new handling_amount",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getIpnTrackId": {
        "name": "getIpnTrackId",
        "params": "",
        "description": [
            "Gets the paypal ipn_track_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIpnTrackId": {
        "name": "setIpnTrackId",
        "params": "$ipn_track_id",
        "description": [
            "Sets the paypal ipn_track_id",
            "@param string $ipn_track_id the new ipn_track_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_ipn_track_id": {
        "name": "get_ipn_track_id",
        "params": "",
        "description": [
            "Gets the paypal ipn_track_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ipn_track_id": {
        "name": "set_ipn_track_id",
        "params": "$ipn_track_id",
        "description": [
            "Sets the paypal ipn_track_id",
            "@param string $ipn_track_id the new ipn_track_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPayerBusinessName": {
        "name": "getPayerBusinessName",
        "params": "",
        "description": [
            "Gets the paypal payer_business_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPayerBusinessName": {
        "name": "setPayerBusinessName",
        "params": "$payer_business_name",
        "description": [
            "Sets the paypal payer_business_name",
            "@param string $payer_business_name the new payer_business_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_payer_business_name": {
        "name": "get_payer_business_name",
        "params": "",
        "description": [
            "Gets the paypal payer_business_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payer_business_name": {
        "name": "set_payer_business_name",
        "params": "$payer_business_name",
        "description": [
            "Sets the paypal payer_business_name",
            "@param string $payer_business_name the new payer_business_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getSubscrId": {
        "name": "getSubscrId",
        "params": "",
        "description": [
            "Gets the paypal subscr_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSubscrId": {
        "name": "setSubscrId",
        "params": "$subscr_id",
        "description": [
            "Sets the paypal subscr_id",
            "@param string $subscr_id the new subscr_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_subscr_id": {
        "name": "get_subscr_id",
        "params": "",
        "description": [
            "Gets the paypal subscr_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_subscr_id": {
        "name": "set_subscr_id",
        "params": "$subscr_id",
        "description": [
            "Sets the paypal subscr_id",
            "@param string $subscr_id the new subscr_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getReceiptId": {
        "name": "getReceiptId",
        "params": "",
        "description": [
            "Gets the paypal receipt_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setReceiptId": {
        "name": "setReceiptId",
        "params": "$receipt_id",
        "description": [
            "Sets the paypal receipt_id",
            "@param string $receipt_id the new receipt_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_receipt_id": {
        "name": "get_receipt_id",
        "params": "",
        "description": [
            "Gets the paypal receipt_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_receipt_id": {
        "name": "set_receipt_id",
        "params": "$receipt_id",
        "description": [
            "Sets the paypal receipt_id",
            "@param string $receipt_id the new receipt_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getEcheckTimeProcessed": {
        "name": "getEcheckTimeProcessed",
        "params": "",
        "description": [
            "Gets the paypal echeck_time_processed",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEcheckTimeProcessed": {
        "name": "setEcheckTimeProcessed",
        "params": "$echeck_time_processed",
        "description": [
            "Sets the paypal echeck_time_processed",
            "@param string $echeck_time_processed the new echeck_time_processed",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_echeck_time_processed": {
        "name": "get_echeck_time_processed",
        "params": "",
        "description": [
            "Gets the paypal echeck_time_processed",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_echeck_time_processed": {
        "name": "set_echeck_time_processed",
        "params": "$echeck_time_processed",
        "description": [
            "Sets the paypal echeck_time_processed",
            "@param string $echeck_time_processed the new echeck_time_processed",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getCorrelationId": {
        "name": "getCorrelationId",
        "params": "",
        "description": [
            "Gets the paypal correlation_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCorrelationId": {
        "name": "setCorrelationId",
        "params": "$correlation_id",
        "description": [
            "Sets the paypal correlation_id",
            "@param string $correlation_id the new correlation_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_correlation_id": {
        "name": "get_correlation_id",
        "params": "",
        "description": [
            "Gets the paypal correlation_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_correlation_id": {
        "name": "set_correlation_id",
        "params": "$correlation_id",
        "description": [
            "Sets the paypal correlation_id",
            "@param string $correlation_id the new correlation_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getTestIpn": {
        "name": "getTestIpn",
        "params": "",
        "description": [
            "Gets the paypal test_ipn",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setTestIpn": {
        "name": "setTestIpn",
        "params": "$test_ipn",
        "description": [
            "Sets the paypal test_ipn",
            "@param int $test_ipn the new test_ipn",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_test_ipn": {
        "name": "get_test_ipn",
        "params": "",
        "description": [
            "Gets the paypal test_ipn",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_test_ipn": {
        "name": "set_test_ipn",
        "params": "$test_ipn",
        "description": [
            "Sets the paypal test_ipn",
            "@param int $test_ipn the new test_ipn",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcGross1": {
        "name": "getMcGross1",
        "params": "",
        "description": [
            "Gets the paypal mc_gross_1",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setMcGross1": {
        "name": "setMcGross1",
        "params": "$mc_gross_1",
        "description": [
            "Sets the paypal mc_gross_1",
            "@param float $mc_gross_1 the new mc_gross_1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_gross_1": {
        "name": "get_mc_gross_1",
        "params": "",
        "description": [
            "Gets the paypal mc_gross_1",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_mc_gross_1": {
        "name": "set_mc_gross_1",
        "params": "$mc_gross_1",
        "description": [
            "Sets the paypal mc_gross_1",
            "@param float $mc_gross_1 the new mc_gross_1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getResend": {
        "name": "getResend",
        "params": "",
        "description": [
            "Gets the paypal resend",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setResend": {
        "name": "setResend",
        "params": "$resend",
        "description": [
            "Sets the paypal resend",
            "@param string $resend the new resend",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_resend": {
        "name": "get_resend",
        "params": "",
        "description": [
            "Gets the paypal resend",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_resend": {
        "name": "set_resend",
        "params": "$resend",
        "description": [
            "Sets the paypal resend",
            "@param string $resend the new resend",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getContactPhone": {
        "name": "getContactPhone",
        "params": "",
        "description": [
            "Gets the paypal contact_phone",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setContactPhone": {
        "name": "setContactPhone",
        "params": "$contact_phone",
        "description": [
            "Sets the paypal contact_phone",
            "@param int $contact_phone the new contact_phone",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_contact_phone": {
        "name": "get_contact_phone",
        "params": "",
        "description": [
            "Gets the paypal contact_phone",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_contact_phone": {
        "name": "set_contact_phone",
        "params": "$contact_phone",
        "description": [
            "Sets the paypal contact_phone",
            "@param int $contact_phone the new contact_phone",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getLocked": {
        "name": "getLocked",
        "params": "",
        "description": [
            "Gets the paypal locked",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setLocked": {
        "name": "setLocked",
        "params": "$locked",
        "description": [
            "Sets the paypal locked",
            "@param int $locked the new locked",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_locked": {
        "name": "get_locked",
        "params": "",
        "description": [
            "Gets the paypal locked",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_locked": {
        "name": "set_locked",
        "params": "$locked",
        "description": [
            "Sets the paypal locked",
            "@param int $locked the new locked",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getParentTxnId": {
        "name": "getParentTxnId",
        "params": "",
        "description": [
            "Gets the paypal parent_txn_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setParentTxnId": {
        "name": "setParentTxnId",
        "params": "$parent_txn_id",
        "description": [
            "Sets the paypal parent_txn_id",
            "@param string $parent_txn_id the new parent_txn_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_parent_txn_id": {
        "name": "get_parent_txn_id",
        "params": "",
        "description": [
            "Gets the paypal parent_txn_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_parent_txn_id": {
        "name": "set_parent_txn_id",
        "params": "$parent_txn_id",
        "description": [
            "Sets the paypal parent_txn_id",
            "@param string $parent_txn_id the new parent_txn_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getReasonCode": {
        "name": "getReasonCode",
        "params": "",
        "description": [
            "Gets the paypal reason_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setReasonCode": {
        "name": "setReasonCode",
        "params": "$reason_code",
        "description": [
            "Sets the paypal reason_code",
            "@param string $reason_code the new reason_code",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_reason_code": {
        "name": "get_reason_code",
        "params": "",
        "description": [
            "Gets the paypal reason_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_reason_code": {
        "name": "set_reason_code",
        "params": "$reason_code",
        "description": [
            "Sets the paypal reason_code",
            "@param string $reason_code the new reason_code",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getForAuction": {
        "name": "getForAuction",
        "params": "",
        "description": [
            "Gets the paypal for_auction",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setForAuction": {
        "name": "setForAuction",
        "params": "$for_auction",
        "description": [
            "Sets the paypal for_auction",
            "@param string $for_auction the new for_auction",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_for_auction": {
        "name": "get_for_auction",
        "params": "",
        "description": [
            "Gets the paypal for_auction",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_for_auction": {
        "name": "set_for_auction",
        "params": "$for_auction",
        "description": [
            "Sets the paypal for_auction",
            "@param string $for_auction the new for_auction",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemNumber1": {
        "name": "getItemNumber1",
        "params": "",
        "description": [
            "Gets the paypal item_number1",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setItemNumber1": {
        "name": "setItemNumber1",
        "params": "$item_number1",
        "description": [
            "Sets the paypal item_number1",
            "@param int $item_number1 the new item_number1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_number1": {
        "name": "get_item_number1",
        "params": "",
        "description": [
            "Gets the paypal item_number1",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_item_number1": {
        "name": "set_item_number1",
        "params": "$item_number1",
        "description": [
            "Sets the paypal item_number1",
            "@param int $item_number1 the new item_number1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAuctionClosingDate": {
        "name": "getAuctionClosingDate",
        "params": "",
        "description": [
            "Gets the paypal auction_closing_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAuctionClosingDate": {
        "name": "setAuctionClosingDate",
        "params": "$auction_closing_date",
        "description": [
            "Sets the paypal auction_closing_date",
            "@param string $auction_closing_date the new auction_closing_date",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_auction_closing_date": {
        "name": "get_auction_closing_date",
        "params": "",
        "description": [
            "Gets the paypal auction_closing_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_auction_closing_date": {
        "name": "set_auction_closing_date",
        "params": "$auction_closing_date",
        "description": [
            "Sets the paypal auction_closing_date",
            "@param string $auction_closing_date the new auction_closing_date",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAuctionBuyerId": {
        "name": "getAuctionBuyerId",
        "params": "",
        "description": [
            "Gets the paypal auction_buyer_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAuctionBuyerId": {
        "name": "setAuctionBuyerId",
        "params": "$auction_buyer_id",
        "description": [
            "Sets the paypal auction_buyer_id",
            "@param string $auction_buyer_id the new auction_buyer_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_auction_buyer_id": {
        "name": "get_auction_buyer_id",
        "params": "",
        "description": [
            "Gets the paypal auction_buyer_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_auction_buyer_id": {
        "name": "set_auction_buyer_id",
        "params": "$auction_buyer_id",
        "description": [
            "Sets the paypal auction_buyer_id",
            "@param string $auction_buyer_id the new auction_buyer_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getNumCartItems": {
        "name": "getNumCartItems",
        "params": "",
        "description": [
            "Gets the paypal num_cart_items",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumCartItems": {
        "name": "setNumCartItems",
        "params": "$num_cart_items",
        "description": [
            "Sets the paypal num_cart_items",
            "@param int $num_cart_items the new num_cart_items",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_num_cart_items": {
        "name": "get_num_cart_items",
        "params": "",
        "description": [
            "Gets the paypal num_cart_items",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_num_cart_items": {
        "name": "set_num_cart_items",
        "params": "$num_cart_items",
        "description": [
            "Sets the paypal num_cart_items",
            "@param int $num_cart_items the new num_cart_items",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemName1": {
        "name": "getItemName1",
        "params": "",
        "description": [
            "Gets the paypal item_name1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemName1": {
        "name": "setItemName1",
        "params": "$item_name1",
        "description": [
            "Sets the paypal item_name1",
            "@param string $item_name1 the new item_name1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_name1": {
        "name": "get_item_name1",
        "params": "",
        "description": [
            "Gets the paypal item_name1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_name1": {
        "name": "set_item_name1",
        "params": "$item_name1",
        "description": [
            "Sets the paypal item_name1",
            "@param string $item_name1 the new item_name1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getQuantity1": {
        "name": "getQuantity1",
        "params": "",
        "description": [
            "Gets the paypal quantity1",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setQuantity1": {
        "name": "setQuantity1",
        "params": "$quantity1",
        "description": [
            "Sets the paypal quantity1",
            "@param int $quantity1 the new quantity1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_quantity1": {
        "name": "get_quantity1",
        "params": "",
        "description": [
            "Gets the paypal quantity1",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_quantity1": {
        "name": "set_quantity1",
        "params": "$quantity1",
        "description": [
            "Sets the paypal quantity1",
            "@param int $quantity1 the new quantity1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getInsuranceAmount": {
        "name": "getInsuranceAmount",
        "params": "",
        "description": [
            "Gets the paypal insurance_amount",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setInsuranceAmount": {
        "name": "setInsuranceAmount",
        "params": "$insurance_amount",
        "description": [
            "Sets the paypal insurance_amount",
            "@param float $insurance_amount the new insurance_amount",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_insurance_amount": {
        "name": "get_insurance_amount",
        "params": "",
        "description": [
            "Gets the paypal insurance_amount",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_insurance_amount": {
        "name": "set_insurance_amount",
        "params": "$insurance_amount",
        "description": [
            "Sets the paypal insurance_amount",
            "@param float $insurance_amount the new insurance_amount",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMemo": {
        "name": "getMemo",
        "params": "",
        "description": [
            "Gets the paypal memo",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setMemo": {
        "name": "setMemo",
        "params": "$memo",
        "description": [
            "Sets the paypal memo",
            "@param mixed $memo the new memo",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_memo": {
        "name": "get_memo",
        "params": "",
        "description": [
            "Gets the paypal memo",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_memo": {
        "name": "set_memo",
        "params": "$memo",
        "description": [
            "Sets the paypal memo",
            "@param mixed $memo the new memo",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getEbayTxnId1": {
        "name": "getEbayTxnId1",
        "params": "",
        "description": [
            "Gets the paypal ebay_txn_id1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEbayTxnId1": {
        "name": "setEbayTxnId1",
        "params": "$ebay_txn_id1",
        "description": [
            "Sets the paypal ebay_txn_id1",
            "@param string $ebay_txn_id1 the new ebay_txn_id1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_ebay_txn_id1": {
        "name": "get_ebay_txn_id1",
        "params": "",
        "description": [
            "Gets the paypal ebay_txn_id1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ebay_txn_id1": {
        "name": "set_ebay_txn_id1",
        "params": "$ebay_txn_id1",
        "description": [
            "Sets the paypal ebay_txn_id1",
            "@param string $ebay_txn_id1 the new ebay_txn_id1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPaymentCycle": {
        "name": "getPaymentCycle",
        "params": "",
        "description": [
            "Gets the paypal payment_cycle",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPaymentCycle": {
        "name": "setPaymentCycle",
        "params": "$payment_cycle",
        "description": [
            "Sets the paypal payment_cycle",
            "@param string $payment_cycle the new payment_cycle",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_payment_cycle": {
        "name": "get_payment_cycle",
        "params": "",
        "description": [
            "Gets the paypal payment_cycle",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payment_cycle": {
        "name": "set_payment_cycle",
        "params": "$payment_cycle",
        "description": [
            "Sets the paypal payment_cycle",
            "@param string $payment_cycle the new payment_cycle",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getNextPaymentDate": {
        "name": "getNextPaymentDate",
        "params": "",
        "description": [
            "Gets the paypal next_payment_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setNextPaymentDate": {
        "name": "setNextPaymentDate",
        "params": "$next_payment_date",
        "description": [
            "Sets the paypal next_payment_date",
            "@param string $next_payment_date the new next_payment_date",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_next_payment_date": {
        "name": "get_next_payment_date",
        "params": "",
        "description": [
            "Gets the paypal next_payment_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_next_payment_date": {
        "name": "set_next_payment_date",
        "params": "$next_payment_date",
        "description": [
            "Sets the paypal next_payment_date",
            "@param string $next_payment_date the new next_payment_date",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getInitialPaymentAmount": {
        "name": "getInitialPaymentAmount",
        "params": "",
        "description": [
            "Gets the paypal initial_payment_amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setInitialPaymentAmount": {
        "name": "setInitialPaymentAmount",
        "params": "$initial_payment_amount",
        "description": [
            "Sets the paypal initial_payment_amount",
            "@param string $initial_payment_amount the new initial_payment_amount",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_initial_payment_amount": {
        "name": "get_initial_payment_amount",
        "params": "",
        "description": [
            "Gets the paypal initial_payment_amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_initial_payment_amount": {
        "name": "set_initial_payment_amount",
        "params": "$initial_payment_amount",
        "description": [
            "Sets the paypal initial_payment_amount",
            "@param string $initial_payment_amount the new initial_payment_amount",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getCurrencyCode": {
        "name": "getCurrencyCode",
        "params": "",
        "description": [
            "Gets the paypal currency_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCurrencyCode": {
        "name": "setCurrencyCode",
        "params": "$currency_code",
        "description": [
            "Sets the paypal currency_code",
            "@param string $currency_code the new currency_code",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_currency_code": {
        "name": "get_currency_code",
        "params": "",
        "description": [
            "Gets the paypal currency_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_currency_code": {
        "name": "set_currency_code",
        "params": "$currency_code",
        "description": [
            "Sets the paypal currency_code",
            "@param string $currency_code the new currency_code",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getTimeCreated": {
        "name": "getTimeCreated",
        "params": "",
        "description": [
            "Gets the paypal time_created",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTimeCreated": {
        "name": "setTimeCreated",
        "params": "$time_created",
        "description": [
            "Sets the paypal time_created",
            "@param string $time_created the new time_created",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_time_created": {
        "name": "get_time_created",
        "params": "",
        "description": [
            "Gets the paypal time_created",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_time_created": {
        "name": "set_time_created",
        "params": "$time_created",
        "description": [
            "Sets the paypal time_created",
            "@param string $time_created the new time_created",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPeriodType": {
        "name": "getPeriodType",
        "params": "",
        "description": [
            "Gets the paypal period_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPeriodType": {
        "name": "setPeriodType",
        "params": "$period_type",
        "description": [
            "Sets the paypal period_type",
            "@param string $period_type the new period_type",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_period_type": {
        "name": "get_period_type",
        "params": "",
        "description": [
            "Gets the paypal period_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_period_type": {
        "name": "set_period_type",
        "params": "$period_type",
        "description": [
            "Sets the paypal period_type",
            "@param string $period_type the new period_type",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getProductType": {
        "name": "getProductType",
        "params": "",
        "description": [
            "Gets the paypal product_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setProductType": {
        "name": "setProductType",
        "params": "$product_type",
        "description": [
            "Sets the paypal product_type",
            "@param string $product_type the new product_type",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_product_type": {
        "name": "get_product_type",
        "params": "",
        "description": [
            "Gets the paypal product_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_product_type": {
        "name": "set_product_type",
        "params": "$product_type",
        "description": [
            "Sets the paypal product_type",
            "@param string $product_type the new product_type",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAmountPerCycle": {
        "name": "getAmountPerCycle",
        "params": "",
        "description": [
            "Gets the paypal amount_per_cycle",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAmountPerCycle": {
        "name": "setAmountPerCycle",
        "params": "$amount_per_cycle",
        "description": [
            "Sets the paypal amount_per_cycle",
            "@param string $amount_per_cycle the new amount_per_cycle",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_amount_per_cycle": {
        "name": "get_amount_per_cycle",
        "params": "",
        "description": [
            "Gets the paypal amount_per_cycle",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_amount_per_cycle": {
        "name": "set_amount_per_cycle",
        "params": "$amount_per_cycle",
        "description": [
            "Sets the paypal amount_per_cycle",
            "@param string $amount_per_cycle the new amount_per_cycle",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getProfileStatus": {
        "name": "getProfileStatus",
        "params": "",
        "description": [
            "Gets the paypal profile_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setProfileStatus": {
        "name": "setProfileStatus",
        "params": "$profile_status",
        "description": [
            "Sets the paypal profile_status",
            "@param string $profile_status the new profile_status",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_profile_status": {
        "name": "get_profile_status",
        "params": "",
        "description": [
            "Gets the paypal profile_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_profile_status": {
        "name": "set_profile_status",
        "params": "$profile_status",
        "description": [
            "Sets the paypal profile_status",
            "@param string $profile_status the new profile_status",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getOutstandingBalance": {
        "name": "getOutstandingBalance",
        "params": "",
        "description": [
            "Gets the paypal outstanding_balance",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setOutstandingBalance": {
        "name": "setOutstandingBalance",
        "params": "$outstanding_balance",
        "description": [
            "Sets the paypal outstanding_balance",
            "@param string $outstanding_balance the new outstanding_balance",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_outstanding_balance": {
        "name": "get_outstanding_balance",
        "params": "",
        "description": [
            "Gets the paypal outstanding_balance",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_outstanding_balance": {
        "name": "set_outstanding_balance",
        "params": "$outstanding_balance",
        "description": [
            "Sets the paypal outstanding_balance",
            "@param string $outstanding_balance the new outstanding_balance",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getRecurringPaymentId": {
        "name": "getRecurringPaymentId",
        "params": "",
        "description": [
            "Gets the paypal recurring_payment_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRecurringPaymentId": {
        "name": "setRecurringPaymentId",
        "params": "$recurring_payment_id",
        "description": [
            "Sets the paypal recurring_payment_id",
            "@param string $recurring_payment_id the new recurring_payment_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_recurring_payment_id": {
        "name": "get_recurring_payment_id",
        "params": "",
        "description": [
            "Gets the paypal recurring_payment_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_recurring_payment_id": {
        "name": "set_recurring_payment_id",
        "params": "$recurring_payment_id",
        "description": [
            "Sets the paypal recurring_payment_id",
            "@param string $recurring_payment_id the new recurring_payment_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getProductName": {
        "name": "getProductName",
        "params": "",
        "description": [
            "Gets the paypal product_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setProductName": {
        "name": "setProductName",
        "params": "$product_name",
        "description": [
            "Sets the paypal product_name",
            "@param string $product_name the new product_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_product_name": {
        "name": "get_product_name",
        "params": "",
        "description": [
            "Gets the paypal product_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_product_name": {
        "name": "set_product_name",
        "params": "$product_name",
        "description": [
            "Sets the paypal product_name",
            "@param string $product_name the new product_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPendingReason": {
        "name": "getPendingReason",
        "params": "",
        "description": [
            "Gets the paypal pending_reason",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPendingReason": {
        "name": "setPendingReason",
        "params": "$pending_reason",
        "description": [
            "Sets the paypal pending_reason",
            "@param string $pending_reason the new pending_reason",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_pending_reason": {
        "name": "get_pending_reason",
        "params": "",
        "description": [
            "Gets the paypal pending_reason",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_pending_reason": {
        "name": "set_pending_reason",
        "params": "$pending_reason",
        "description": [
            "Sets the paypal pending_reason",
            "@param string $pending_reason the new pending_reason",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAmount3": {
        "name": "getAmount3",
        "params": "",
        "description": [
            "Gets the paypal amount3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAmount3": {
        "name": "setAmount3",
        "params": "$amount3",
        "description": [
            "Sets the paypal amount3",
            "@param string $amount3 the new amount3",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_amount3": {
        "name": "get_amount3",
        "params": "",
        "description": [
            "Gets the paypal amount3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_amount3": {
        "name": "set_amount3",
        "params": "$amount3",
        "description": [
            "Sets the paypal amount3",
            "@param string $amount3 the new amount3",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getRecurring": {
        "name": "getRecurring",
        "params": "",
        "description": [
            "Gets the paypal recurring",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRecurring": {
        "name": "setRecurring",
        "params": "$recurring",
        "description": [
            "Sets the paypal recurring",
            "@param string $recurring the new recurring",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_recurring": {
        "name": "get_recurring",
        "params": "",
        "description": [
            "Gets the paypal recurring",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_recurring": {
        "name": "set_recurring",
        "params": "$recurring",
        "description": [
            "Sets the paypal recurring",
            "@param string $recurring the new recurring",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getReattempt": {
        "name": "getReattempt",
        "params": "",
        "description": [
            "Gets the paypal reattempt",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setReattempt": {
        "name": "setReattempt",
        "params": "$reattempt",
        "description": [
            "Sets the paypal reattempt",
            "@param string $reattempt the new reattempt",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_reattempt": {
        "name": "get_reattempt",
        "params": "",
        "description": [
            "Gets the paypal reattempt",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_reattempt": {
        "name": "set_reattempt",
        "params": "$reattempt",
        "description": [
            "Sets the paypal reattempt",
            "@param string $reattempt the new reattempt",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getSubscrDate": {
        "name": "getSubscrDate",
        "params": "",
        "description": [
            "Gets the paypal subscr_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSubscrDate": {
        "name": "setSubscrDate",
        "params": "$subscr_date",
        "description": [
            "Sets the paypal subscr_date",
            "@param string $subscr_date the new subscr_date",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_subscr_date": {
        "name": "get_subscr_date",
        "params": "",
        "description": [
            "Gets the paypal subscr_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_subscr_date": {
        "name": "set_subscr_date",
        "params": "$subscr_date",
        "description": [
            "Sets the paypal subscr_date",
            "@param string $subscr_date the new subscr_date",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPeriod3": {
        "name": "getPeriod3",
        "params": "",
        "description": [
            "Gets the paypal period3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPeriod3": {
        "name": "setPeriod3",
        "params": "$period3",
        "description": [
            "Sets the paypal period3",
            "@param string $period3 the new period3",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_period3": {
        "name": "get_period3",
        "params": "",
        "description": [
            "Gets the paypal period3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_period3": {
        "name": "set_period3",
        "params": "$period3",
        "description": [
            "Sets the paypal period3",
            "@param string $period3 the new period3",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcAmount3": {
        "name": "getMcAmount3",
        "params": "",
        "description": [
            "Gets the paypal mc_amount3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcAmount3": {
        "name": "setMcAmount3",
        "params": "$mc_amount3",
        "description": [
            "Sets the paypal mc_amount3",
            "@param string $mc_amount3 the new mc_amount3",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_amount3": {
        "name": "get_mc_amount3",
        "params": "",
        "description": [
            "Gets the paypal mc_amount3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_amount3": {
        "name": "set_mc_amount3",
        "params": "$mc_amount3",
        "description": [
            "Sets the paypal mc_amount3",
            "@param string $mc_amount3 the new mc_amount3",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getCaseId": {
        "name": "getCaseId",
        "params": "",
        "description": [
            "Gets the paypal case_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCaseId": {
        "name": "setCaseId",
        "params": "$case_id",
        "description": [
            "Sets the paypal case_id",
            "@param string $case_id the new case_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_case_id": {
        "name": "get_case_id",
        "params": "",
        "description": [
            "Gets the paypal case_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_case_id": {
        "name": "set_case_id",
        "params": "$case_id",
        "description": [
            "Sets the paypal case_id",
            "@param string $case_id the new case_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getCaseType": {
        "name": "getCaseType",
        "params": "",
        "description": [
            "Gets the paypal case_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCaseType": {
        "name": "setCaseType",
        "params": "$case_type",
        "description": [
            "Sets the paypal case_type",
            "@param string $case_type the new case_type",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_case_type": {
        "name": "get_case_type",
        "params": "",
        "description": [
            "Gets the paypal case_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_case_type": {
        "name": "set_case_type",
        "params": "$case_type",
        "description": [
            "Sets the paypal case_type",
            "@param string $case_type the new case_type",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getCaseCreationDate": {
        "name": "getCaseCreationDate",
        "params": "",
        "description": [
            "Gets the paypal case_creation_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCaseCreationDate": {
        "name": "setCaseCreationDate",
        "params": "$case_creation_date",
        "description": [
            "Sets the paypal case_creation_date",
            "@param string $case_creation_date the new case_creation_date",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_case_creation_date": {
        "name": "get_case_creation_date",
        "params": "",
        "description": [
            "Gets the paypal case_creation_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_case_creation_date": {
        "name": "set_case_creation_date",
        "params": "$case_creation_date",
        "description": [
            "Sets the paypal case_creation_date",
            "@param string $case_creation_date the new case_creation_date",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getRetryAt": {
        "name": "getRetryAt",
        "params": "",
        "description": [
            "Gets the paypal retry_at",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRetryAt": {
        "name": "setRetryAt",
        "params": "$retry_at",
        "description": [
            "Sets the paypal retry_at",
            "@param string $retry_at the new retry_at",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_retry_at": {
        "name": "get_retry_at",
        "params": "",
        "description": [
            "Gets the paypal retry_at",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_retry_at": {
        "name": "set_retry_at",
        "params": "$retry_at",
        "description": [
            "Sets the paypal retry_at",
            "@param string $retry_at the new retry_at",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemMpn1": {
        "name": "getItemMpn1",
        "params": "",
        "description": [
            "Gets the paypal item_mpn1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemMpn1": {
        "name": "setItemMpn1",
        "params": "$item_mpn1",
        "description": [
            "Sets the paypal item_mpn1",
            "@param string $item_mpn1 the new item_mpn1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_mpn1": {
        "name": "get_item_mpn1",
        "params": "",
        "description": [
            "Gets the paypal item_mpn1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_mpn1": {
        "name": "set_item_mpn1",
        "params": "$item_mpn1",
        "description": [
            "Sets the paypal item_mpn1",
            "@param string $item_mpn1 the new item_mpn1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemCountUnit1": {
        "name": "getItemCountUnit1",
        "params": "",
        "description": [
            "Gets the paypal item_count_unit1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemCountUnit1": {
        "name": "setItemCountUnit1",
        "params": "$item_count_unit1",
        "description": [
            "Sets the paypal item_count_unit1",
            "@param string $item_count_unit1 the new item_count_unit1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_count_unit1": {
        "name": "get_item_count_unit1",
        "params": "",
        "description": [
            "Gets the paypal item_count_unit1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_count_unit1": {
        "name": "set_item_count_unit1",
        "params": "$item_count_unit1",
        "description": [
            "Sets the paypal item_count_unit1",
            "@param string $item_count_unit1 the new item_count_unit1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemTaxRate1": {
        "name": "getItemTaxRate1",
        "params": "",
        "description": [
            "Gets the paypal item_tax_rate1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemTaxRate1": {
        "name": "setItemTaxRate1",
        "params": "$item_tax_rate1",
        "description": [
            "Sets the paypal item_tax_rate1",
            "@param string $item_tax_rate1 the new item_tax_rate1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_tax_rate1": {
        "name": "get_item_tax_rate1",
        "params": "",
        "description": [
            "Gets the paypal item_tax_rate1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_tax_rate1": {
        "name": "set_item_tax_rate1",
        "params": "$item_tax_rate1",
        "description": [
            "Sets the paypal item_tax_rate1",
            "@param string $item_tax_rate1 the new item_tax_rate1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcShipping": {
        "name": "getMcShipping",
        "params": "",
        "description": [
            "Gets the paypal mc_shipping",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcShipping": {
        "name": "setMcShipping",
        "params": "$mc_shipping",
        "description": [
            "Sets the paypal mc_shipping",
            "@param string $mc_shipping the new mc_shipping",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_shipping": {
        "name": "get_mc_shipping",
        "params": "",
        "description": [
            "Gets the paypal mc_shipping",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_shipping": {
        "name": "set_mc_shipping",
        "params": "$mc_shipping",
        "description": [
            "Sets the paypal mc_shipping",
            "@param string $mc_shipping the new mc_shipping",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemTaxRateDouble1": {
        "name": "getItemTaxRateDouble1",
        "params": "",
        "description": [
            "Gets the paypal item_tax_rate_double1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemTaxRateDouble1": {
        "name": "setItemTaxRateDouble1",
        "params": "$item_tax_rate_double1",
        "description": [
            "Sets the paypal item_tax_rate_double1",
            "@param string $item_tax_rate_double1 the new item_tax_rate_double1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_tax_rate_double1": {
        "name": "get_item_tax_rate_double1",
        "params": "",
        "description": [
            "Gets the paypal item_tax_rate_double1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_tax_rate_double1": {
        "name": "set_item_tax_rate_double1",
        "params": "$item_tax_rate_double1",
        "description": [
            "Sets the paypal item_tax_rate_double1",
            "@param string $item_tax_rate_double1 the new item_tax_rate_double1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcHandling": {
        "name": "getMcHandling",
        "params": "",
        "description": [
            "Gets the paypal mc_handling",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcHandling": {
        "name": "setMcHandling",
        "params": "$mc_handling",
        "description": [
            "Sets the paypal mc_handling",
            "@param string $mc_handling the new mc_handling",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_handling": {
        "name": "get_mc_handling",
        "params": "",
        "description": [
            "Gets the paypal mc_handling",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_handling": {
        "name": "set_mc_handling",
        "params": "$mc_handling",
        "description": [
            "Sets the paypal mc_handling",
            "@param string $mc_handling the new mc_handling",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcHandling1": {
        "name": "getMcHandling1",
        "params": "",
        "description": [
            "Gets the paypal mc_handling1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcHandling1": {
        "name": "setMcHandling1",
        "params": "$mc_handling1",
        "description": [
            "Sets the paypal mc_handling1",
            "@param string $mc_handling1 the new mc_handling1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_handling1": {
        "name": "get_mc_handling1",
        "params": "",
        "description": [
            "Gets the paypal mc_handling1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_handling1": {
        "name": "set_mc_handling1",
        "params": "$mc_handling1",
        "description": [
            "Sets the paypal mc_handling1",
            "@param string $mc_handling1 the new mc_handling1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcShipping1": {
        "name": "getMcShipping1",
        "params": "",
        "description": [
            "Gets the paypal mc_shipping1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcShipping1": {
        "name": "setMcShipping1",
        "params": "$mc_shipping1",
        "description": [
            "Sets the paypal mc_shipping1",
            "@param string $mc_shipping1 the new mc_shipping1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_shipping1": {
        "name": "get_mc_shipping1",
        "params": "",
        "description": [
            "Gets the paypal mc_shipping1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_shipping1": {
        "name": "set_mc_shipping1",
        "params": "$mc_shipping1",
        "description": [
            "Sets the paypal mc_shipping1",
            "@param string $mc_shipping1 the new mc_shipping1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemStyleNumber1": {
        "name": "getItemStyleNumber1",
        "params": "",
        "description": [
            "Gets the paypal item_style_number1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemStyleNumber1": {
        "name": "setItemStyleNumber1",
        "params": "$item_style_number1",
        "description": [
            "Sets the paypal item_style_number1",
            "@param string $item_style_number1 the new item_style_number1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_style_number1": {
        "name": "get_item_style_number1",
        "params": "",
        "description": [
            "Gets the paypal item_style_number1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_style_number1": {
        "name": "set_item_style_number1",
        "params": "$item_style_number1",
        "description": [
            "Sets the paypal item_style_number1",
            "@param string $item_style_number1 the new item_style_number1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getTax1": {
        "name": "getTax1",
        "params": "",
        "description": [
            "Gets the paypal tax1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTax1": {
        "name": "setTax1",
        "params": "$tax1",
        "description": [
            "Sets the paypal tax1",
            "@param string $tax1 the new tax1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_tax1": {
        "name": "get_tax1",
        "params": "",
        "description": [
            "Gets the paypal tax1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_tax1": {
        "name": "set_tax1",
        "params": "$tax1",
        "description": [
            "Sets the paypal tax1",
            "@param string $tax1 the new tax1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemPlu1": {
        "name": "getItemPlu1",
        "params": "",
        "description": [
            "Gets the paypal item_plu1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemPlu1": {
        "name": "setItemPlu1",
        "params": "$item_plu1",
        "description": [
            "Sets the paypal item_plu1",
            "@param string $item_plu1 the new item_plu1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_plu1": {
        "name": "get_item_plu1",
        "params": "",
        "description": [
            "Gets the paypal item_plu1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_plu1": {
        "name": "set_item_plu1",
        "params": "$item_plu1",
        "description": [
            "Sets the paypal item_plu1",
            "@param string $item_plu1 the new item_plu1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemIsbn1": {
        "name": "getItemIsbn1",
        "params": "",
        "description": [
            "Gets the paypal item_isbn1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemIsbn1": {
        "name": "setItemIsbn1",
        "params": "$item_isbn1",
        "description": [
            "Sets the paypal item_isbn1",
            "@param string $item_isbn1 the new item_isbn1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_isbn1": {
        "name": "get_item_isbn1",
        "params": "",
        "description": [
            "Gets the paypal item_isbn1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_isbn1": {
        "name": "set_item_isbn1",
        "params": "$item_isbn1",
        "description": [
            "Sets the paypal item_isbn1",
            "@param string $item_isbn1 the new item_isbn1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemModelNumber1": {
        "name": "getItemModelNumber1",
        "params": "",
        "description": [
            "Gets the paypal item_model_number1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemModelNumber1": {
        "name": "setItemModelNumber1",
        "params": "$item_model_number1",
        "description": [
            "Sets the paypal item_model_number1",
            "@param string $item_model_number1 the new item_model_number1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_model_number1": {
        "name": "get_item_model_number1",
        "params": "",
        "description": [
            "Gets the paypal item_model_number1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_model_number1": {
        "name": "set_item_model_number1",
        "params": "$item_model_number1",
        "description": [
            "Sets the paypal item_model_number1",
            "@param string $item_model_number1 the new item_model_number1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemTaxable1": {
        "name": "getItemTaxable1",
        "params": "",
        "description": [
            "Gets the paypal item_taxable1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemTaxable1": {
        "name": "setItemTaxable1",
        "params": "$item_taxable1",
        "description": [
            "Sets the paypal item_taxable1",
            "@param string $item_taxable1 the new item_taxable1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_taxable1": {
        "name": "get_item_taxable1",
        "params": "",
        "description": [
            "Gets the paypal item_taxable1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_taxable1": {
        "name": "set_item_taxable1",
        "params": "$item_taxable1",
        "description": [
            "Sets the paypal item_taxable1",
            "@param string $item_taxable1 the new item_taxable1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getRecurTimes": {
        "name": "getRecurTimes",
        "params": "",
        "description": [
            "Gets the paypal recur_times",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRecurTimes": {
        "name": "setRecurTimes",
        "params": "$recur_times",
        "description": [
            "Sets the paypal recur_times",
            "@param string $recur_times the new recur_times",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_recur_times": {
        "name": "get_recur_times",
        "params": "",
        "description": [
            "Gets the paypal recur_times",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_recur_times": {
        "name": "set_recur_times",
        "params": "$recur_times",
        "description": [
            "Sets the paypal recur_times",
            "@param string $recur_times the new recur_times",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getSubscrEffective": {
        "name": "getSubscrEffective",
        "params": "",
        "description": [
            "Gets the paypal subscr_effective",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSubscrEffective": {
        "name": "setSubscrEffective",
        "params": "$subscr_effective",
        "description": [
            "Sets the paypal subscr_effective",
            "@param string $subscr_effective the new subscr_effective",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_subscr_effective": {
        "name": "get_subscr_effective",
        "params": "",
        "description": [
            "Gets the paypal subscr_effective",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_subscr_effective": {
        "name": "set_subscr_effective",
        "params": "$subscr_effective",
        "description": [
            "Sets the paypal subscr_effective",
            "@param string $subscr_effective the new subscr_effective",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getShippingDiscount": {
        "name": "getShippingDiscount",
        "params": "",
        "description": [
            "Gets the paypal shipping_discount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setShippingDiscount": {
        "name": "setShippingDiscount",
        "params": "$shipping_discount",
        "description": [
            "Sets the paypal shipping_discount",
            "@param string $shipping_discount the new shipping_discount",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_shipping_discount": {
        "name": "get_shipping_discount",
        "params": "",
        "description": [
            "Gets the paypal shipping_discount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_shipping_discount": {
        "name": "set_shipping_discount",
        "params": "$shipping_discount",
        "description": [
            "Sets the paypal shipping_discount",
            "@param string $shipping_discount the new shipping_discount",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getShippingMethod": {
        "name": "getShippingMethod",
        "params": "",
        "description": [
            "Gets the paypal shipping_method",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setShippingMethod": {
        "name": "setShippingMethod",
        "params": "$shipping_method",
        "description": [
            "Sets the paypal shipping_method",
            "@param string $shipping_method the new shipping_method",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_shipping_method": {
        "name": "get_shipping_method",
        "params": "",
        "description": [
            "Gets the paypal shipping_method",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_shipping_method": {
        "name": "set_shipping_method",
        "params": "$shipping_method",
        "description": [
            "Sets the paypal shipping_method",
            "@param string $shipping_method the new shipping_method",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemNumber2": {
        "name": "getItemNumber2",
        "params": "",
        "description": [
            "Gets the paypal item_number2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemNumber2": {
        "name": "setItemNumber2",
        "params": "$item_number2",
        "description": [
            "Sets the paypal item_number2",
            "@param string $item_number2 the new item_number2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_number2": {
        "name": "get_item_number2",
        "params": "",
        "description": [
            "Gets the paypal item_number2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_number2": {
        "name": "set_item_number2",
        "params": "$item_number2",
        "description": [
            "Sets the paypal item_number2",
            "@param string $item_number2 the new item_number2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcHandling2": {
        "name": "getMcHandling2",
        "params": "",
        "description": [
            "Gets the paypal mc_handling2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcHandling2": {
        "name": "setMcHandling2",
        "params": "$mc_handling2",
        "description": [
            "Sets the paypal mc_handling2",
            "@param string $mc_handling2 the new mc_handling2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_handling2": {
        "name": "get_mc_handling2",
        "params": "",
        "description": [
            "Gets the paypal mc_handling2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_handling2": {
        "name": "set_mc_handling2",
        "params": "$mc_handling2",
        "description": [
            "Sets the paypal mc_handling2",
            "@param string $mc_handling2 the new mc_handling2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcShipping2": {
        "name": "getMcShipping2",
        "params": "",
        "description": [
            "Gets the paypal mc_shipping2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcShipping2": {
        "name": "setMcShipping2",
        "params": "$mc_shipping2",
        "description": [
            "Sets the paypal mc_shipping2",
            "@param string $mc_shipping2 the new mc_shipping2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_shipping2": {
        "name": "get_mc_shipping2",
        "params": "",
        "description": [
            "Gets the paypal mc_shipping2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_shipping2": {
        "name": "set_mc_shipping2",
        "params": "$mc_shipping2",
        "description": [
            "Sets the paypal mc_shipping2",
            "@param string $mc_shipping2 the new mc_shipping2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getTax2": {
        "name": "getTax2",
        "params": "",
        "description": [
            "Gets the paypal tax2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTax2": {
        "name": "setTax2",
        "params": "$tax2",
        "description": [
            "Sets the paypal tax2",
            "@param string $tax2 the new tax2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_tax2": {
        "name": "get_tax2",
        "params": "",
        "description": [
            "Gets the paypal tax2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_tax2": {
        "name": "set_tax2",
        "params": "$tax2",
        "description": [
            "Sets the paypal tax2",
            "@param string $tax2 the new tax2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemName2": {
        "name": "getItemName2",
        "params": "",
        "description": [
            "Gets the paypal item_name2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemName2": {
        "name": "setItemName2",
        "params": "$item_name2",
        "description": [
            "Sets the paypal item_name2",
            "@param string $item_name2 the new item_name2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_name2": {
        "name": "get_item_name2",
        "params": "",
        "description": [
            "Gets the paypal item_name2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_name2": {
        "name": "set_item_name2",
        "params": "$item_name2",
        "description": [
            "Sets the paypal item_name2",
            "@param string $item_name2 the new item_name2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getQuantity2": {
        "name": "getQuantity2",
        "params": "",
        "description": [
            "Gets the paypal quantity2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setQuantity2": {
        "name": "setQuantity2",
        "params": "$quantity2",
        "description": [
            "Sets the paypal quantity2",
            "@param string $quantity2 the new quantity2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_quantity2": {
        "name": "get_quantity2",
        "params": "",
        "description": [
            "Gets the paypal quantity2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_quantity2": {
        "name": "set_quantity2",
        "params": "$quantity2",
        "description": [
            "Sets the paypal quantity2",
            "@param string $quantity2 the new quantity2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcGross2": {
        "name": "getMcGross2",
        "params": "",
        "description": [
            "Gets the paypal mc_gross_2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcGross2": {
        "name": "setMcGross2",
        "params": "$mc_gross_2",
        "description": [
            "Sets the paypal mc_gross_2",
            "@param string $mc_gross_2 the new mc_gross_2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_gross_2": {
        "name": "get_mc_gross_2",
        "params": "",
        "description": [
            "Gets the paypal mc_gross_2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_gross_2": {
        "name": "set_mc_gross_2",
        "params": "$mc_gross_2",
        "description": [
            "Sets the paypal mc_gross_2",
            "@param string $mc_gross_2 the new mc_gross_2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getBuyerAdditionalInformation": {
        "name": "getBuyerAdditionalInformation",
        "params": "",
        "description": [
            "Gets the paypal buyer_additional_information",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setBuyerAdditionalInformation": {
        "name": "setBuyerAdditionalInformation",
        "params": "$buyer_additional_information",
        "description": [
            "Sets the paypal buyer_additional_information",
            "@param string $buyer_additional_information the new buyer_additional_information",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_buyer_additional_information": {
        "name": "get_buyer_additional_information",
        "params": "",
        "description": [
            "Gets the paypal buyer_additional_information",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_buyer_additional_information": {
        "name": "set_buyer_additional_information",
        "params": "$buyer_additional_information",
        "description": [
            "Sets the paypal buyer_additional_information",
            "@param string $buyer_additional_information the new buyer_additional_information",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAmount1": {
        "name": "getAmount1",
        "params": "",
        "description": [
            "Gets the paypal amount1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAmount1": {
        "name": "setAmount1",
        "params": "$amount1",
        "description": [
            "Sets the paypal amount1",
            "@param string $amount1 the new amount1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_amount1": {
        "name": "get_amount1",
        "params": "",
        "description": [
            "Gets the paypal amount1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_amount1": {
        "name": "set_amount1",
        "params": "$amount1",
        "description": [
            "Sets the paypal amount1",
            "@param string $amount1 the new amount1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcAmount1": {
        "name": "getMcAmount1",
        "params": "",
        "description": [
            "Gets the paypal mc_amount1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcAmount1": {
        "name": "setMcAmount1",
        "params": "$mc_amount1",
        "description": [
            "Sets the paypal mc_amount1",
            "@param string $mc_amount1 the new mc_amount1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_amount1": {
        "name": "get_mc_amount1",
        "params": "",
        "description": [
            "Gets the paypal mc_amount1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_amount1": {
        "name": "set_mc_amount1",
        "params": "$mc_amount1",
        "description": [
            "Sets the paypal mc_amount1",
            "@param string $mc_amount1 the new mc_amount1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPeriod1": {
        "name": "getPeriod1",
        "params": "",
        "description": [
            "Gets the paypal period1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPeriod1": {
        "name": "setPeriod1",
        "params": "$period1",
        "description": [
            "Sets the paypal period1",
            "@param string $period1 the new period1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_period1": {
        "name": "get_period1",
        "params": "",
        "description": [
            "Gets the paypal period1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_period1": {
        "name": "set_period1",
        "params": "$period1",
        "description": [
            "Sets the paypal period1",
            "@param string $period1 the new period1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getExchangeRate": {
        "name": "getExchangeRate",
        "params": "",
        "description": [
            "Gets the paypal exchange_rate",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setExchangeRate": {
        "name": "setExchangeRate",
        "params": "$exchange_rate",
        "description": [
            "Sets the paypal exchange_rate",
            "@param string $exchange_rate the new exchange_rate",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_exchange_rate": {
        "name": "get_exchange_rate",
        "params": "",
        "description": [
            "Gets the paypal exchange_rate",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_exchange_rate": {
        "name": "set_exchange_rate",
        "params": "$exchange_rate",
        "description": [
            "Sets the paypal exchange_rate",
            "@param string $exchange_rate the new exchange_rate",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getSettleAmount": {
        "name": "getSettleAmount",
        "params": "",
        "description": [
            "Gets the paypal settle_amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSettleAmount": {
        "name": "setSettleAmount",
        "params": "$settle_amount",
        "description": [
            "Sets the paypal settle_amount",
            "@param string $settle_amount the new settle_amount",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_settle_amount": {
        "name": "get_settle_amount",
        "params": "",
        "description": [
            "Gets the paypal settle_amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_settle_amount": {
        "name": "set_settle_amount",
        "params": "$settle_amount",
        "description": [
            "Sets the paypal settle_amount",
            "@param string $settle_amount the new settle_amount",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getSettleCurrency": {
        "name": "getSettleCurrency",
        "params": "",
        "description": [
            "Gets the paypal settle_currency",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSettleCurrency": {
        "name": "setSettleCurrency",
        "params": "$settle_currency",
        "description": [
            "Sets the paypal settle_currency",
            "@param string $settle_currency the new settle_currency",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_settle_currency": {
        "name": "get_settle_currency",
        "params": "",
        "description": [
            "Gets the paypal settle_currency",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_settle_currency": {
        "name": "set_settle_currency",
        "params": "$settle_currency",
        "description": [
            "Sets the paypal settle_currency",
            "@param string $settle_currency the new settle_currency",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getInitialPaymentStatus": {
        "name": "getInitialPaymentStatus",
        "params": "",
        "description": [
            "Gets the paypal initial_payment_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setInitialPaymentStatus": {
        "name": "setInitialPaymentStatus",
        "params": "$initial_payment_status",
        "description": [
            "Sets the paypal initial_payment_status",
            "@param string $initial_payment_status the new initial_payment_status",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_initial_payment_status": {
        "name": "get_initial_payment_status",
        "params": "",
        "description": [
            "Gets the paypal initial_payment_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_initial_payment_status": {
        "name": "set_initial_payment_status",
        "params": "$initial_payment_status",
        "description": [
            "Sets the paypal initial_payment_status",
            "@param string $initial_payment_status the new initial_payment_status",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getInitialPaymentTxnId": {
        "name": "getInitialPaymentTxnId",
        "params": "",
        "description": [
            "Gets the paypal initial_payment_txn_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setInitialPaymentTxnId": {
        "name": "setInitialPaymentTxnId",
        "params": "$initial_payment_txn_id",
        "description": [
            "Sets the paypal initial_payment_txn_id",
            "@param string $initial_payment_txn_id the new initial_payment_txn_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_initial_payment_txn_id": {
        "name": "get_initial_payment_txn_id",
        "params": "",
        "description": [
            "Gets the paypal initial_payment_txn_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_initial_payment_txn_id": {
        "name": "set_initial_payment_txn_id",
        "params": "$initial_payment_txn_id",
        "description": [
            "Sets the paypal initial_payment_txn_id",
            "@param string $initial_payment_txn_id the new initial_payment_txn_id",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getMcTax1": {
        "name": "getMcTax1",
        "params": "",
        "description": [
            "Gets the paypal mc_tax1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMcTax1": {
        "name": "setMcTax1",
        "params": "$mc_tax1",
        "description": [
            "Sets the paypal mc_tax1",
            "@param string $mc_tax1 the new mc_tax1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_mc_tax1": {
        "name": "get_mc_tax1",
        "params": "",
        "description": [
            "Gets the paypal mc_tax1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mc_tax1": {
        "name": "set_mc_tax1",
        "params": "$mc_tax1",
        "description": [
            "Sets the paypal mc_tax1",
            "@param string $mc_tax1 the new mc_tax1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getFulfillmentAddressName": {
        "name": "getFulfillmentAddressName",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFulfillmentAddressName": {
        "name": "setFulfillmentAddressName",
        "params": "$fulfillment_address_name",
        "description": [
            "Sets the paypal fulfillment_address_name",
            "@param string $fulfillment_address_name the new fulfillment_address_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_fulfillment_address_name": {
        "name": "get_fulfillment_address_name",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fulfillment_address_name": {
        "name": "set_fulfillment_address_name",
        "params": "$fulfillment_address_name",
        "description": [
            "Sets the paypal fulfillment_address_name",
            "@param string $fulfillment_address_name the new fulfillment_address_name",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getFulfillmentAddressLine1": {
        "name": "getFulfillmentAddressLine1",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_line1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFulfillmentAddressLine1": {
        "name": "setFulfillmentAddressLine1",
        "params": "$fulfillment_address_line1",
        "description": [
            "Sets the paypal fulfillment_address_line1",
            "@param string $fulfillment_address_line1 the new fulfillment_address_line1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_fulfillment_address_line1": {
        "name": "get_fulfillment_address_line1",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_line1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fulfillment_address_line1": {
        "name": "set_fulfillment_address_line1",
        "params": "$fulfillment_address_line1",
        "description": [
            "Sets the paypal fulfillment_address_line1",
            "@param string $fulfillment_address_line1 the new fulfillment_address_line1",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getFulfillmentAddressLine2": {
        "name": "getFulfillmentAddressLine2",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_line2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFulfillmentAddressLine2": {
        "name": "setFulfillmentAddressLine2",
        "params": "$fulfillment_address_line2",
        "description": [
            "Sets the paypal fulfillment_address_line2",
            "@param string $fulfillment_address_line2 the new fulfillment_address_line2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_fulfillment_address_line2": {
        "name": "get_fulfillment_address_line2",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_line2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fulfillment_address_line2": {
        "name": "set_fulfillment_address_line2",
        "params": "$fulfillment_address_line2",
        "description": [
            "Sets the paypal fulfillment_address_line2",
            "@param string $fulfillment_address_line2 the new fulfillment_address_line2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getFulfillmentAddressCity": {
        "name": "getFulfillmentAddressCity",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFulfillmentAddressCity": {
        "name": "setFulfillmentAddressCity",
        "params": "$fulfillment_address_city",
        "description": [
            "Sets the paypal fulfillment_address_city",
            "@param string $fulfillment_address_city the new fulfillment_address_city",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_fulfillment_address_city": {
        "name": "get_fulfillment_address_city",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_city",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fulfillment_address_city": {
        "name": "set_fulfillment_address_city",
        "params": "$fulfillment_address_city",
        "description": [
            "Sets the paypal fulfillment_address_city",
            "@param string $fulfillment_address_city the new fulfillment_address_city",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getFulfillmentAddressZip": {
        "name": "getFulfillmentAddressZip",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFulfillmentAddressZip": {
        "name": "setFulfillmentAddressZip",
        "params": "$fulfillment_address_zip",
        "description": [
            "Sets the paypal fulfillment_address_zip",
            "@param string $fulfillment_address_zip the new fulfillment_address_zip",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_fulfillment_address_zip": {
        "name": "get_fulfillment_address_zip",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_zip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fulfillment_address_zip": {
        "name": "set_fulfillment_address_zip",
        "params": "$fulfillment_address_zip",
        "description": [
            "Sets the paypal fulfillment_address_zip",
            "@param string $fulfillment_address_zip the new fulfillment_address_zip",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getFulfillmentAddressCountry": {
        "name": "getFulfillmentAddressCountry",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFulfillmentAddressCountry": {
        "name": "setFulfillmentAddressCountry",
        "params": "$fulfillment_address_country",
        "description": [
            "Sets the paypal fulfillment_address_country",
            "@param string $fulfillment_address_country the new fulfillment_address_country",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_fulfillment_address_country": {
        "name": "get_fulfillment_address_country",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_country",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fulfillment_address_country": {
        "name": "set_fulfillment_address_country",
        "params": "$fulfillment_address_country",
        "description": [
            "Sets the paypal fulfillment_address_country",
            "@param string $fulfillment_address_country the new fulfillment_address_country",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getFulfillmentAddressState": {
        "name": "getFulfillmentAddressState",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFulfillmentAddressState": {
        "name": "setFulfillmentAddressState",
        "params": "$fulfillment_address_state",
        "description": [
            "Sets the paypal fulfillment_address_state",
            "@param string $fulfillment_address_state the new fulfillment_address_state",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_fulfillment_address_state": {
        "name": "get_fulfillment_address_state",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_state",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fulfillment_address_state": {
        "name": "set_fulfillment_address_state",
        "params": "$fulfillment_address_state",
        "description": [
            "Sets the paypal fulfillment_address_state",
            "@param string $fulfillment_address_state the new fulfillment_address_state",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getFulfillmentAddressCountryCode": {
        "name": "getFulfillmentAddressCountryCode",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_country_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFulfillmentAddressCountryCode": {
        "name": "setFulfillmentAddressCountryCode",
        "params": "$fulfillment_address_country_code",
        "description": [
            "Sets the paypal fulfillment_address_country_code",
            "@param string $fulfillment_address_country_code the new fulfillment_address_country_code",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_fulfillment_address_country_code": {
        "name": "get_fulfillment_address_country_code",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_address_country_code",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fulfillment_address_country_code": {
        "name": "set_fulfillment_address_country_code",
        "params": "$fulfillment_address_country_code",
        "description": [
            "Sets the paypal fulfillment_address_country_code",
            "@param string $fulfillment_address_country_code the new fulfillment_address_country_code",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getFulfillmentOrderReferenceNumber": {
        "name": "getFulfillmentOrderReferenceNumber",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_order_reference_number",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFulfillmentOrderReferenceNumber": {
        "name": "setFulfillmentOrderReferenceNumber",
        "params": "$fulfillment_order_reference_number",
        "description": [
            "Sets the paypal fulfillment_order_reference_number",
            "@param string $fulfillment_order_reference_number the new fulfillment_order_reference_number",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_fulfillment_order_reference_number": {
        "name": "get_fulfillment_order_reference_number",
        "params": "",
        "description": [
            "Gets the paypal fulfillment_order_reference_number",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fulfillment_order_reference_number": {
        "name": "set_fulfillment_order_reference_number",
        "params": "$fulfillment_order_reference_number",
        "description": [
            "Sets the paypal fulfillment_order_reference_number",
            "@param string $fulfillment_order_reference_number the new fulfillment_order_reference_number",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getEbayTxnId2": {
        "name": "getEbayTxnId2",
        "params": "",
        "description": [
            "Gets the paypal ebay_txn_id2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEbayTxnId2": {
        "name": "setEbayTxnId2",
        "params": "$ebay_txn_id2",
        "description": [
            "Sets the paypal ebay_txn_id2",
            "@param string $ebay_txn_id2 the new ebay_txn_id2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_ebay_txn_id2": {
        "name": "get_ebay_txn_id2",
        "params": "",
        "description": [
            "Gets the paypal ebay_txn_id2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ebay_txn_id2": {
        "name": "set_ebay_txn_id2",
        "params": "$ebay_txn_id2",
        "description": [
            "Sets the paypal ebay_txn_id2",
            "@param string $ebay_txn_id2 the new ebay_txn_id2",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getAuctionMultiItem": {
        "name": "getAuctionMultiItem",
        "params": "",
        "description": [
            "Gets the paypal auction_multi_item",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAuctionMultiItem": {
        "name": "setAuctionMultiItem",
        "params": "$auction_multi_item",
        "description": [
            "Sets the paypal auction_multi_item",
            "@param string $auction_multi_item the new auction_multi_item",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_auction_multi_item": {
        "name": "get_auction_multi_item",
        "params": "",
        "description": [
            "Gets the paypal auction_multi_item",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_auction_multi_item": {
        "name": "set_auction_multi_item",
        "params": "$auction_multi_item",
        "description": [
            "Sets the paypal auction_multi_item",
            "@param string $auction_multi_item the new auction_multi_item",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemName3": {
        "name": "getItemName3",
        "params": "",
        "description": [
            "Gets the paypal item_name3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemName3": {
        "name": "setItemName3",
        "params": "$item_name3",
        "description": [
            "Sets the paypal item_name3",
            "@param string $item_name3 the new item_name3",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_name3": {
        "name": "get_item_name3",
        "params": "",
        "description": [
            "Gets the paypal item_name3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_name3": {
        "name": "set_item_name3",
        "params": "$item_name3",
        "description": [
            "Sets the paypal item_name3",
            "@param string $item_name3 the new item_name3",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getItemName4": {
        "name": "getItemName4",
        "params": "",
        "description": [
            "Gets the paypal item_name4",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setItemName4": {
        "name": "setItemName4",
        "params": "$item_name4",
        "description": [
            "Sets the paypal item_name4",
            "@param string $item_name4 the new item_name4",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_item_name4": {
        "name": "get_item_name4",
        "params": "",
        "description": [
            "Gets the paypal item_name4",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_item_name4": {
        "name": "set_item_name4",
        "params": "$item_name4",
        "description": [
            "Sets the paypal item_name4",
            "@param string $item_name4 the new item_name4",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getEbayTxnId3": {
        "name": "getEbayTxnId3",
        "params": "",
        "description": [
            "Gets the paypal ebay_txn_id3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEbayTxnId3": {
        "name": "setEbayTxnId3",
        "params": "$ebay_txn_id3",
        "description": [
            "Sets the paypal ebay_txn_id3",
            "@param string $ebay_txn_id3 the new ebay_txn_id3",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "get_ebay_txn_id3": {
        "name": "get_ebay_txn_id3",
        "params": "",
        "description": [
            "Gets the paypal ebay_txn_id3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ebay_txn_id3": {
        "name": "set_ebay_txn_id3",
        "params": "$ebay_txn_id3",
        "description": [
            "Sets the paypal ebay_txn_id3",
            "@param string $ebay_txn_id3 the new ebay_txn_id3",
            "@return \\MyAdmin\\Orm\\Paypal"
        ],
        "fieldtexts": []
    },
    "getPaymentId": {
        "name": "getPaymentId",
        "params": "",
        "description": [
            "Gets the paypal_recurring_payments payment_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPaymentId": {
        "name": "setPaymentId",
        "params": "$payment_id",
        "description": [
            "Sets the paypal_recurring_payments payment_id",
            "@param string $payment_id the new payment_id",
            "@return \\MyAdmin\\Orm\\Paypal_Recurring_Payment"
        ],
        "fieldtexts": []
    },
    "get_payment_id": {
        "name": "get_payment_id",
        "params": "",
        "description": [
            "Gets the paypal_recurring_payments payment_id",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_payment_id": {
        "name": "set_payment_id",
        "params": "$payment_id",
        "description": [
            "Sets the paypal_recurring_payments payment_id",
            "@param string $payment_id the new payment_id",
            "@return \\MyAdmin\\Orm\\Paypal_Recurring_Payment"
        ],
        "fieldtexts": []
    },
    "getOrder": {
        "name": "getOrder",
        "params": "",
        "description": [
            "Gets the payza order",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setOrder": {
        "name": "setOrder",
        "params": "$order",
        "description": [
            "Sets the payza order",
            "@param int $order the new order",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_order": {
        "name": "get_order",
        "params": "",
        "description": [
            "Gets the payza order",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_order": {
        "name": "set_order",
        "params": "$order",
        "description": [
            "Sets the payza order",
            "@param int $order the new order",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApMerchant": {
        "name": "getApMerchant",
        "params": "",
        "description": [
            "Gets the payza ap_merchant",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApMerchant": {
        "name": "setApMerchant",
        "params": "$ap_merchant",
        "description": [
            "Sets the payza ap_merchant",
            "@param string $ap_merchant the new ap_merchant",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_merchant": {
        "name": "get_ap_merchant",
        "params": "",
        "description": [
            "Gets the payza ap_merchant",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_merchant": {
        "name": "set_ap_merchant",
        "params": "$ap_merchant",
        "description": [
            "Sets the payza ap_merchant",
            "@param string $ap_merchant the new ap_merchant",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApCustfirstname": {
        "name": "getApCustfirstname",
        "params": "",
        "description": [
            "Gets the payza ap_custfirstname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApCustfirstname": {
        "name": "setApCustfirstname",
        "params": "$ap_custfirstname",
        "description": [
            "Sets the payza ap_custfirstname",
            "@param string $ap_custfirstname the new ap_custfirstname",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_custfirstname": {
        "name": "get_ap_custfirstname",
        "params": "",
        "description": [
            "Gets the payza ap_custfirstname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_custfirstname": {
        "name": "set_ap_custfirstname",
        "params": "$ap_custfirstname",
        "description": [
            "Sets the payza ap_custfirstname",
            "@param string $ap_custfirstname the new ap_custfirstname",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApCustlastname": {
        "name": "getApCustlastname",
        "params": "",
        "description": [
            "Gets the payza ap_custlastname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApCustlastname": {
        "name": "setApCustlastname",
        "params": "$ap_custlastname",
        "description": [
            "Sets the payza ap_custlastname",
            "@param string $ap_custlastname the new ap_custlastname",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_custlastname": {
        "name": "get_ap_custlastname",
        "params": "",
        "description": [
            "Gets the payza ap_custlastname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_custlastname": {
        "name": "set_ap_custlastname",
        "params": "$ap_custlastname",
        "description": [
            "Sets the payza ap_custlastname",
            "@param string $ap_custlastname the new ap_custlastname",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApCustaddress": {
        "name": "getApCustaddress",
        "params": "",
        "description": [
            "Gets the payza ap_custaddress",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApCustaddress": {
        "name": "setApCustaddress",
        "params": "$ap_custaddress",
        "description": [
            "Sets the payza ap_custaddress",
            "@param string $ap_custaddress the new ap_custaddress",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_custaddress": {
        "name": "get_ap_custaddress",
        "params": "",
        "description": [
            "Gets the payza ap_custaddress",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_custaddress": {
        "name": "set_ap_custaddress",
        "params": "$ap_custaddress",
        "description": [
            "Sets the payza ap_custaddress",
            "@param string $ap_custaddress the new ap_custaddress",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApCustcity": {
        "name": "getApCustcity",
        "params": "",
        "description": [
            "Gets the payza ap_custcity",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApCustcity": {
        "name": "setApCustcity",
        "params": "$ap_custcity",
        "description": [
            "Sets the payza ap_custcity",
            "@param string $ap_custcity the new ap_custcity",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_custcity": {
        "name": "get_ap_custcity",
        "params": "",
        "description": [
            "Gets the payza ap_custcity",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_custcity": {
        "name": "set_ap_custcity",
        "params": "$ap_custcity",
        "description": [
            "Sets the payza ap_custcity",
            "@param string $ap_custcity the new ap_custcity",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApCuststate": {
        "name": "getApCuststate",
        "params": "",
        "description": [
            "Gets the payza ap_custstate",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApCuststate": {
        "name": "setApCuststate",
        "params": "$ap_custstate",
        "description": [
            "Sets the payza ap_custstate",
            "@param string $ap_custstate the new ap_custstate",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_custstate": {
        "name": "get_ap_custstate",
        "params": "",
        "description": [
            "Gets the payza ap_custstate",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_custstate": {
        "name": "set_ap_custstate",
        "params": "$ap_custstate",
        "description": [
            "Sets the payza ap_custstate",
            "@param string $ap_custstate the new ap_custstate",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApCustcountry": {
        "name": "getApCustcountry",
        "params": "",
        "description": [
            "Gets the payza ap_custcountry",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApCustcountry": {
        "name": "setApCustcountry",
        "params": "$ap_custcountry",
        "description": [
            "Sets the payza ap_custcountry",
            "@param string $ap_custcountry the new ap_custcountry",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_custcountry": {
        "name": "get_ap_custcountry",
        "params": "",
        "description": [
            "Gets the payza ap_custcountry",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_custcountry": {
        "name": "set_ap_custcountry",
        "params": "$ap_custcountry",
        "description": [
            "Sets the payza ap_custcountry",
            "@param string $ap_custcountry the new ap_custcountry",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApCustzip": {
        "name": "getApCustzip",
        "params": "",
        "description": [
            "Gets the payza ap_custzip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApCustzip": {
        "name": "setApCustzip",
        "params": "$ap_custzip",
        "description": [
            "Sets the payza ap_custzip",
            "@param string $ap_custzip the new ap_custzip",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_custzip": {
        "name": "get_ap_custzip",
        "params": "",
        "description": [
            "Gets the payza ap_custzip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_custzip": {
        "name": "set_ap_custzip",
        "params": "$ap_custzip",
        "description": [
            "Sets the payza ap_custzip",
            "@param string $ap_custzip the new ap_custzip",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApCustemailaddress": {
        "name": "getApCustemailaddress",
        "params": "",
        "description": [
            "Gets the payza ap_custemailaddress",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApCustemailaddress": {
        "name": "setApCustemailaddress",
        "params": "$ap_custemailaddress",
        "description": [
            "Sets the payza ap_custemailaddress",
            "@param string $ap_custemailaddress the new ap_custemailaddress",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_custemailaddress": {
        "name": "get_ap_custemailaddress",
        "params": "",
        "description": [
            "Gets the payza ap_custemailaddress",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_custemailaddress": {
        "name": "set_ap_custemailaddress",
        "params": "$ap_custemailaddress",
        "description": [
            "Sets the payza ap_custemailaddress",
            "@param string $ap_custemailaddress the new ap_custemailaddress",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApc1": {
        "name": "getApc1",
        "params": "",
        "description": [
            "Gets the payza apc_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApc1": {
        "name": "setApc1",
        "params": "$apc_1",
        "description": [
            "Sets the payza apc_1",
            "@param string $apc_1 the new apc_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_apc_1": {
        "name": "get_apc_1",
        "params": "",
        "description": [
            "Gets the payza apc_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_apc_1": {
        "name": "set_apc_1",
        "params": "$apc_1",
        "description": [
            "Sets the payza apc_1",
            "@param string $apc_1 the new apc_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApc2": {
        "name": "getApc2",
        "params": "",
        "description": [
            "Gets the payza apc_2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApc2": {
        "name": "setApc2",
        "params": "$apc_2",
        "description": [
            "Sets the payza apc_2",
            "@param string $apc_2 the new apc_2",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_apc_2": {
        "name": "get_apc_2",
        "params": "",
        "description": [
            "Gets the payza apc_2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_apc_2": {
        "name": "set_apc_2",
        "params": "$apc_2",
        "description": [
            "Sets the payza apc_2",
            "@param string $apc_2 the new apc_2",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApc3": {
        "name": "getApc3",
        "params": "",
        "description": [
            "Gets the payza apc_3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApc3": {
        "name": "setApc3",
        "params": "$apc_3",
        "description": [
            "Sets the payza apc_3",
            "@param string $apc_3 the new apc_3",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_apc_3": {
        "name": "get_apc_3",
        "params": "",
        "description": [
            "Gets the payza apc_3",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_apc_3": {
        "name": "set_apc_3",
        "params": "$apc_3",
        "description": [
            "Sets the payza apc_3",
            "@param string $apc_3 the new apc_3",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApc4": {
        "name": "getApc4",
        "params": "",
        "description": [
            "Gets the payza apc_4",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApc4": {
        "name": "setApc4",
        "params": "$apc_4",
        "description": [
            "Sets the payza apc_4",
            "@param string $apc_4 the new apc_4",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_apc_4": {
        "name": "get_apc_4",
        "params": "",
        "description": [
            "Gets the payza apc_4",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_apc_4": {
        "name": "set_apc_4",
        "params": "$apc_4",
        "description": [
            "Sets the payza apc_4",
            "@param string $apc_4 the new apc_4",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApc5": {
        "name": "getApc5",
        "params": "",
        "description": [
            "Gets the payza apc_5",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApc5": {
        "name": "setApc5",
        "params": "$apc_5",
        "description": [
            "Sets the payza apc_5",
            "@param string $apc_5 the new apc_5",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_apc_5": {
        "name": "get_apc_5",
        "params": "",
        "description": [
            "Gets the payza apc_5",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_apc_5": {
        "name": "set_apc_5",
        "params": "$apc_5",
        "description": [
            "Sets the payza apc_5",
            "@param string $apc_5 the new apc_5",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApc6": {
        "name": "getApc6",
        "params": "",
        "description": [
            "Gets the payza apc_6",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApc6": {
        "name": "setApc6",
        "params": "$apc_6",
        "description": [
            "Sets the payza apc_6",
            "@param string $apc_6 the new apc_6",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_apc_6": {
        "name": "get_apc_6",
        "params": "",
        "description": [
            "Gets the payza apc_6",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_apc_6": {
        "name": "set_apc_6",
        "params": "$apc_6",
        "description": [
            "Sets the payza apc_6",
            "@param string $apc_6 the new apc_6",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApTest": {
        "name": "getApTest",
        "params": "",
        "description": [
            "Gets the payza ap_test",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApTest": {
        "name": "setApTest",
        "params": "$ap_test",
        "description": [
            "Sets the payza ap_test",
            "@param string $ap_test the new ap_test",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_test": {
        "name": "get_ap_test",
        "params": "",
        "description": [
            "Gets the payza ap_test",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_test": {
        "name": "set_ap_test",
        "params": "$ap_test",
        "description": [
            "Sets the payza ap_test",
            "@param string $ap_test the new ap_test",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApPurchasetype": {
        "name": "getApPurchasetype",
        "params": "",
        "description": [
            "Gets the payza ap_purchasetype",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApPurchasetype": {
        "name": "setApPurchasetype",
        "params": "$ap_purchasetype",
        "description": [
            "Sets the payza ap_purchasetype",
            "@param string $ap_purchasetype the new ap_purchasetype",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_purchasetype": {
        "name": "get_ap_purchasetype",
        "params": "",
        "description": [
            "Gets the payza ap_purchasetype",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_purchasetype": {
        "name": "set_ap_purchasetype",
        "params": "$ap_purchasetype",
        "description": [
            "Sets the payza ap_purchasetype",
            "@param string $ap_purchasetype the new ap_purchasetype",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApReferencenumber": {
        "name": "getApReferencenumber",
        "params": "",
        "description": [
            "Gets the payza ap_referencenumber",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApReferencenumber": {
        "name": "setApReferencenumber",
        "params": "$ap_referencenumber",
        "description": [
            "Sets the payza ap_referencenumber",
            "@param string $ap_referencenumber the new ap_referencenumber",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_referencenumber": {
        "name": "get_ap_referencenumber",
        "params": "",
        "description": [
            "Gets the payza ap_referencenumber",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_referencenumber": {
        "name": "set_ap_referencenumber",
        "params": "$ap_referencenumber",
        "description": [
            "Sets the payza ap_referencenumber",
            "@param string $ap_referencenumber the new ap_referencenumber",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApAmount": {
        "name": "getApAmount",
        "params": "",
        "description": [
            "Gets the payza ap_amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApAmount": {
        "name": "setApAmount",
        "params": "$ap_amount",
        "description": [
            "Sets the payza ap_amount",
            "@param string $ap_amount the new ap_amount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_amount": {
        "name": "get_ap_amount",
        "params": "",
        "description": [
            "Gets the payza ap_amount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_amount": {
        "name": "set_ap_amount",
        "params": "$ap_amount",
        "description": [
            "Sets the payza ap_amount",
            "@param string $ap_amount the new ap_amount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApQuantity": {
        "name": "getApQuantity",
        "params": "",
        "description": [
            "Gets the payza ap_quantity",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApQuantity": {
        "name": "setApQuantity",
        "params": "$ap_quantity",
        "description": [
            "Sets the payza ap_quantity",
            "@param string $ap_quantity the new ap_quantity",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_quantity": {
        "name": "get_ap_quantity",
        "params": "",
        "description": [
            "Gets the payza ap_quantity",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_quantity": {
        "name": "set_ap_quantity",
        "params": "$ap_quantity",
        "description": [
            "Sets the payza ap_quantity",
            "@param string $ap_quantity the new ap_quantity",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApCurrency": {
        "name": "getApCurrency",
        "params": "",
        "description": [
            "Gets the payza ap_currency",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApCurrency": {
        "name": "setApCurrency",
        "params": "$ap_currency",
        "description": [
            "Sets the payza ap_currency",
            "@param string $ap_currency the new ap_currency",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_currency": {
        "name": "get_ap_currency",
        "params": "",
        "description": [
            "Gets the payza ap_currency",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_currency": {
        "name": "set_ap_currency",
        "params": "$ap_currency",
        "description": [
            "Sets the payza ap_currency",
            "@param string $ap_currency the new ap_currency",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApDescription": {
        "name": "getApDescription",
        "params": "",
        "description": [
            "Gets the payza ap_description",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApDescription": {
        "name": "setApDescription",
        "params": "$ap_description",
        "description": [
            "Sets the payza ap_description",
            "@param string $ap_description the new ap_description",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_description": {
        "name": "get_ap_description",
        "params": "",
        "description": [
            "Gets the payza ap_description",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_description": {
        "name": "set_ap_description",
        "params": "$ap_description",
        "description": [
            "Sets the payza ap_description",
            "@param string $ap_description the new ap_description",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApItemcode": {
        "name": "getApItemcode",
        "params": "",
        "description": [
            "Gets the payza ap_itemcode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApItemcode": {
        "name": "setApItemcode",
        "params": "$ap_itemcode",
        "description": [
            "Sets the payza ap_itemcode",
            "@param string $ap_itemcode the new ap_itemcode",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_itemcode": {
        "name": "get_ap_itemcode",
        "params": "",
        "description": [
            "Gets the payza ap_itemcode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_itemcode": {
        "name": "set_ap_itemcode",
        "params": "$ap_itemcode",
        "description": [
            "Sets the payza ap_itemcode",
            "@param string $ap_itemcode the new ap_itemcode",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApItemname": {
        "name": "getApItemname",
        "params": "",
        "description": [
            "Gets the payza ap_itemname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApItemname": {
        "name": "setApItemname",
        "params": "$ap_itemname",
        "description": [
            "Sets the payza ap_itemname",
            "@param string $ap_itemname the new ap_itemname",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_itemname": {
        "name": "get_ap_itemname",
        "params": "",
        "description": [
            "Gets the payza ap_itemname",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_itemname": {
        "name": "set_ap_itemname",
        "params": "$ap_itemname",
        "description": [
            "Sets the payza ap_itemname",
            "@param string $ap_itemname the new ap_itemname",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApShippingcharges": {
        "name": "getApShippingcharges",
        "params": "",
        "description": [
            "Gets the payza ap_shippingcharges",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApShippingcharges": {
        "name": "setApShippingcharges",
        "params": "$ap_shippingcharges",
        "description": [
            "Sets the payza ap_shippingcharges",
            "@param string $ap_shippingcharges the new ap_shippingcharges",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_shippingcharges": {
        "name": "get_ap_shippingcharges",
        "params": "",
        "description": [
            "Gets the payza ap_shippingcharges",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_shippingcharges": {
        "name": "set_ap_shippingcharges",
        "params": "$ap_shippingcharges",
        "description": [
            "Sets the payza ap_shippingcharges",
            "@param string $ap_shippingcharges the new ap_shippingcharges",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApAdditionalcharges": {
        "name": "getApAdditionalcharges",
        "params": "",
        "description": [
            "Gets the payza ap_additionalcharges",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApAdditionalcharges": {
        "name": "setApAdditionalcharges",
        "params": "$ap_additionalcharges",
        "description": [
            "Sets the payza ap_additionalcharges",
            "@param string $ap_additionalcharges the new ap_additionalcharges",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_additionalcharges": {
        "name": "get_ap_additionalcharges",
        "params": "",
        "description": [
            "Gets the payza ap_additionalcharges",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_additionalcharges": {
        "name": "set_ap_additionalcharges",
        "params": "$ap_additionalcharges",
        "description": [
            "Sets the payza ap_additionalcharges",
            "@param string $ap_additionalcharges the new ap_additionalcharges",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApTaxamount": {
        "name": "getApTaxamount",
        "params": "",
        "description": [
            "Gets the payza ap_taxamount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApTaxamount": {
        "name": "setApTaxamount",
        "params": "$ap_taxamount",
        "description": [
            "Sets the payza ap_taxamount",
            "@param string $ap_taxamount the new ap_taxamount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_taxamount": {
        "name": "get_ap_taxamount",
        "params": "",
        "description": [
            "Gets the payza ap_taxamount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_taxamount": {
        "name": "set_ap_taxamount",
        "params": "$ap_taxamount",
        "description": [
            "Sets the payza ap_taxamount",
            "@param string $ap_taxamount the new ap_taxamount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApDiscountamount": {
        "name": "getApDiscountamount",
        "params": "",
        "description": [
            "Gets the payza ap_discountamount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApDiscountamount": {
        "name": "setApDiscountamount",
        "params": "$ap_discountamount",
        "description": [
            "Sets the payza ap_discountamount",
            "@param string $ap_discountamount the new ap_discountamount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_discountamount": {
        "name": "get_ap_discountamount",
        "params": "",
        "description": [
            "Gets the payza ap_discountamount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_discountamount": {
        "name": "set_ap_discountamount",
        "params": "$ap_discountamount",
        "description": [
            "Sets the payza ap_discountamount",
            "@param string $ap_discountamount the new ap_discountamount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApTotalamount": {
        "name": "getApTotalamount",
        "params": "",
        "description": [
            "Gets the payza ap_totalamount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApTotalamount": {
        "name": "setApTotalamount",
        "params": "$ap_totalamount",
        "description": [
            "Sets the payza ap_totalamount",
            "@param string $ap_totalamount the new ap_totalamount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_totalamount": {
        "name": "get_ap_totalamount",
        "params": "",
        "description": [
            "Gets the payza ap_totalamount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_totalamount": {
        "name": "set_ap_totalamount",
        "params": "$ap_totalamount",
        "description": [
            "Sets the payza ap_totalamount",
            "@param string $ap_totalamount the new ap_totalamount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApIpnversion": {
        "name": "getApIpnversion",
        "params": "",
        "description": [
            "Gets the payza ap_ipnversion",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApIpnversion": {
        "name": "setApIpnversion",
        "params": "$ap_ipnversion",
        "description": [
            "Sets the payza ap_ipnversion",
            "@param string $ap_ipnversion the new ap_ipnversion",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_ipnversion": {
        "name": "get_ap_ipnversion",
        "params": "",
        "description": [
            "Gets the payza ap_ipnversion",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_ipnversion": {
        "name": "set_ap_ipnversion",
        "params": "$ap_ipnversion",
        "description": [
            "Sets the payza ap_ipnversion",
            "@param string $ap_ipnversion the new ap_ipnversion",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApFeeamount": {
        "name": "getApFeeamount",
        "params": "",
        "description": [
            "Gets the payza ap_feeamount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApFeeamount": {
        "name": "setApFeeamount",
        "params": "$ap_feeamount",
        "description": [
            "Sets the payza ap_feeamount",
            "@param string $ap_feeamount the new ap_feeamount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_feeamount": {
        "name": "get_ap_feeamount",
        "params": "",
        "description": [
            "Gets the payza ap_feeamount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_feeamount": {
        "name": "set_ap_feeamount",
        "params": "$ap_feeamount",
        "description": [
            "Sets the payza ap_feeamount",
            "@param string $ap_feeamount the new ap_feeamount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApNetamount": {
        "name": "getApNetamount",
        "params": "",
        "description": [
            "Gets the payza ap_netamount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApNetamount": {
        "name": "setApNetamount",
        "params": "$ap_netamount",
        "description": [
            "Sets the payza ap_netamount",
            "@param string $ap_netamount the new ap_netamount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_netamount": {
        "name": "get_ap_netamount",
        "params": "",
        "description": [
            "Gets the payza ap_netamount",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_netamount": {
        "name": "set_ap_netamount",
        "params": "$ap_netamount",
        "description": [
            "Sets the payza ap_netamount",
            "@param string $ap_netamount the new ap_netamount",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApTransactiontype": {
        "name": "getApTransactiontype",
        "params": "",
        "description": [
            "Gets the payza ap_transactiontype",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApTransactiontype": {
        "name": "setApTransactiontype",
        "params": "$ap_transactiontype",
        "description": [
            "Sets the payza ap_transactiontype",
            "@param string $ap_transactiontype the new ap_transactiontype",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_transactiontype": {
        "name": "get_ap_transactiontype",
        "params": "",
        "description": [
            "Gets the payza ap_transactiontype",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_transactiontype": {
        "name": "set_ap_transactiontype",
        "params": "$ap_transactiontype",
        "description": [
            "Sets the payza ap_transactiontype",
            "@param string $ap_transactiontype the new ap_transactiontype",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApAlerturl": {
        "name": "getApAlerturl",
        "params": "",
        "description": [
            "Gets the payza ap_alerturl",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApAlerturl": {
        "name": "setApAlerturl",
        "params": "$ap_alerturl",
        "description": [
            "Sets the payza ap_alerturl",
            "@param string $ap_alerturl the new ap_alerturl",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_alerturl": {
        "name": "get_ap_alerturl",
        "params": "",
        "description": [
            "Gets the payza ap_alerturl",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_alerturl": {
        "name": "set_ap_alerturl",
        "params": "$ap_alerturl",
        "description": [
            "Sets the payza ap_alerturl",
            "@param string $ap_alerturl the new ap_alerturl",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApTransactiondate": {
        "name": "getApTransactiondate",
        "params": "",
        "description": [
            "Gets the payza ap_transactiondate",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApTransactiondate": {
        "name": "setApTransactiondate",
        "params": "$ap_transactiondate",
        "description": [
            "Sets the payza ap_transactiondate",
            "@param string $ap_transactiondate the new ap_transactiondate",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_transactiondate": {
        "name": "get_ap_transactiondate",
        "params": "",
        "description": [
            "Gets the payza ap_transactiondate",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_transactiondate": {
        "name": "set_ap_transactiondate",
        "params": "$ap_transactiondate",
        "description": [
            "Sets the payza ap_transactiondate",
            "@param string $ap_transactiondate the new ap_transactiondate",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApStatus": {
        "name": "getApStatus",
        "params": "",
        "description": [
            "Gets the payza ap_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApStatus": {
        "name": "setApStatus",
        "params": "$ap_status",
        "description": [
            "Sets the payza ap_status",
            "@param string $ap_status the new ap_status",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_status": {
        "name": "get_ap_status",
        "params": "",
        "description": [
            "Gets the payza ap_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_status": {
        "name": "set_ap_status",
        "params": "$ap_status",
        "description": [
            "Sets the payza ap_status",
            "@param string $ap_status the new ap_status",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApAmount1": {
        "name": "getApAmount1",
        "params": "",
        "description": [
            "Gets the payza ap_amount_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApAmount1": {
        "name": "setApAmount1",
        "params": "$ap_amount_1",
        "description": [
            "Sets the payza ap_amount_1",
            "@param string $ap_amount_1 the new ap_amount_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_amount_1": {
        "name": "get_ap_amount_1",
        "params": "",
        "description": [
            "Gets the payza ap_amount_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_amount_1": {
        "name": "set_ap_amount_1",
        "params": "$ap_amount_1",
        "description": [
            "Sets the payza ap_amount_1",
            "@param string $ap_amount_1 the new ap_amount_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApQuantity1": {
        "name": "getApQuantity1",
        "params": "",
        "description": [
            "Gets the payza ap_quantity_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApQuantity1": {
        "name": "setApQuantity1",
        "params": "$ap_quantity_1",
        "description": [
            "Sets the payza ap_quantity_1",
            "@param string $ap_quantity_1 the new ap_quantity_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_quantity_1": {
        "name": "get_ap_quantity_1",
        "params": "",
        "description": [
            "Gets the payza ap_quantity_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_quantity_1": {
        "name": "set_ap_quantity_1",
        "params": "$ap_quantity_1",
        "description": [
            "Sets the payza ap_quantity_1",
            "@param string $ap_quantity_1 the new ap_quantity_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApDescription1": {
        "name": "getApDescription1",
        "params": "",
        "description": [
            "Gets the payza ap_description_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApDescription1": {
        "name": "setApDescription1",
        "params": "$ap_description_1",
        "description": [
            "Sets the payza ap_description_1",
            "@param string $ap_description_1 the new ap_description_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_description_1": {
        "name": "get_ap_description_1",
        "params": "",
        "description": [
            "Gets the payza ap_description_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_description_1": {
        "name": "set_ap_description_1",
        "params": "$ap_description_1",
        "description": [
            "Sets the payza ap_description_1",
            "@param string $ap_description_1 the new ap_description_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApItemcode1": {
        "name": "getApItemcode1",
        "params": "",
        "description": [
            "Gets the payza ap_itemcode_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApItemcode1": {
        "name": "setApItemcode1",
        "params": "$ap_itemcode_1",
        "description": [
            "Sets the payza ap_itemcode_1",
            "@param string $ap_itemcode_1 the new ap_itemcode_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_itemcode_1": {
        "name": "get_ap_itemcode_1",
        "params": "",
        "description": [
            "Gets the payza ap_itemcode_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_itemcode_1": {
        "name": "set_ap_itemcode_1",
        "params": "$ap_itemcode_1",
        "description": [
            "Sets the payza ap_itemcode_1",
            "@param string $ap_itemcode_1 the new ap_itemcode_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApItemname1": {
        "name": "getApItemname1",
        "params": "",
        "description": [
            "Gets the payza ap_itemname_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApItemname1": {
        "name": "setApItemname1",
        "params": "$ap_itemname_1",
        "description": [
            "Sets the payza ap_itemname_1",
            "@param string $ap_itemname_1 the new ap_itemname_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_itemname_1": {
        "name": "get_ap_itemname_1",
        "params": "",
        "description": [
            "Gets the payza ap_itemname_1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_itemname_1": {
        "name": "set_ap_itemname_1",
        "params": "$ap_itemname_1",
        "description": [
            "Sets the payza ap_itemname_1",
            "@param string $ap_itemname_1 the new ap_itemname_1",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApShipaddress": {
        "name": "getApShipaddress",
        "params": "",
        "description": [
            "Gets the payza ap_shipaddress",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApShipaddress": {
        "name": "setApShipaddress",
        "params": "$ap_shipaddress",
        "description": [
            "Sets the payza ap_shipaddress",
            "@param string $ap_shipaddress the new ap_shipaddress",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_shipaddress": {
        "name": "get_ap_shipaddress",
        "params": "",
        "description": [
            "Gets the payza ap_shipaddress",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_shipaddress": {
        "name": "set_ap_shipaddress",
        "params": "$ap_shipaddress",
        "description": [
            "Sets the payza ap_shipaddress",
            "@param string $ap_shipaddress the new ap_shipaddress",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApShipcity": {
        "name": "getApShipcity",
        "params": "",
        "description": [
            "Gets the payza ap_shipcity",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApShipcity": {
        "name": "setApShipcity",
        "params": "$ap_shipcity",
        "description": [
            "Sets the payza ap_shipcity",
            "@param string $ap_shipcity the new ap_shipcity",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_shipcity": {
        "name": "get_ap_shipcity",
        "params": "",
        "description": [
            "Gets the payza ap_shipcity",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_shipcity": {
        "name": "set_ap_shipcity",
        "params": "$ap_shipcity",
        "description": [
            "Sets the payza ap_shipcity",
            "@param string $ap_shipcity the new ap_shipcity",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApShipstate": {
        "name": "getApShipstate",
        "params": "",
        "description": [
            "Gets the payza ap_shipstate",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApShipstate": {
        "name": "setApShipstate",
        "params": "$ap_shipstate",
        "description": [
            "Sets the payza ap_shipstate",
            "@param string $ap_shipstate the new ap_shipstate",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_shipstate": {
        "name": "get_ap_shipstate",
        "params": "",
        "description": [
            "Gets the payza ap_shipstate",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_shipstate": {
        "name": "set_ap_shipstate",
        "params": "$ap_shipstate",
        "description": [
            "Sets the payza ap_shipstate",
            "@param string $ap_shipstate the new ap_shipstate",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApShipcountry": {
        "name": "getApShipcountry",
        "params": "",
        "description": [
            "Gets the payza ap_shipcountry",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApShipcountry": {
        "name": "setApShipcountry",
        "params": "$ap_shipcountry",
        "description": [
            "Sets the payza ap_shipcountry",
            "@param string $ap_shipcountry the new ap_shipcountry",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_shipcountry": {
        "name": "get_ap_shipcountry",
        "params": "",
        "description": [
            "Gets the payza ap_shipcountry",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_shipcountry": {
        "name": "set_ap_shipcountry",
        "params": "$ap_shipcountry",
        "description": [
            "Sets the payza ap_shipcountry",
            "@param string $ap_shipcountry the new ap_shipcountry",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getApShipzip": {
        "name": "getApShipzip",
        "params": "",
        "description": [
            "Gets the payza ap_shipzip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApShipzip": {
        "name": "setApShipzip",
        "params": "$ap_shipzip",
        "description": [
            "Sets the payza ap_shipzip",
            "@param string $ap_shipzip the new ap_shipzip",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "get_ap_shipzip": {
        "name": "get_ap_shipzip",
        "params": "",
        "description": [
            "Gets the payza ap_shipzip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ap_shipzip": {
        "name": "set_ap_shipzip",
        "params": "$ap_shipzip",
        "description": [
            "Sets the payza ap_shipzip",
            "@param string $ap_shipzip the new ap_shipzip",
            "@return \\MyAdmin\\Orm\\Payza"
        ],
        "fieldtexts": []
    },
    "getChoice": {
        "name": "getChoice",
        "params": "",
        "description": [
            "Gets the pending_orders choice",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setChoice": {
        "name": "setChoice",
        "params": "$choice",
        "description": [
            "Sets the pending_orders choice",
            "@param string $choice the new choice",
            "@return \\MyAdmin\\Orm\\Pending_Order"
        ],
        "fieldtexts": []
    },
    "get_choice": {
        "name": "get_choice",
        "params": "",
        "description": [
            "Gets the pending_orders choice",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_choice": {
        "name": "set_choice",
        "params": "$choice",
        "description": [
            "sets the choice for this form",
            "@param string $choice set a specific choice for this form overwriding default",
            "@return void"
        ],
        "fieldtexts": []
    },
    "getVersion": {
        "name": "getVersion",
        "params": "",
        "description": [
            "Gets the vps_templates version",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setVersion": {
        "name": "setVersion",
        "params": "$version",
        "description": [
            "Sets the vps_templates version",
            "@param string $version the new version",
            "@return \\MyAdmin\\Orm\\Vps_Template"
        ],
        "fieldtexts": []
    },
    "get_version": {
        "name": "get_version",
        "params": "",
        "description": [
            "Gets the vps_templates version",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_version": {
        "name": "set_version",
        "params": "$version",
        "description": [
            "Sets the vps_templates version",
            "@param string $version the new version",
            "@return \\MyAdmin\\Orm\\Vps_Template"
        ],
        "fieldtexts": []
    },
    "getMigrationName": {
        "name": "getMigrationName",
        "params": "",
        "description": [
            "Gets the phinxlog migration_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMigrationName": {
        "name": "setMigrationName",
        "params": "$migration_name",
        "description": [
            "Sets the phinxlog migration_name",
            "@param string $migration_name the new migration_name",
            "@return \\MyAdmin\\Orm\\Phinxlog"
        ],
        "fieldtexts": []
    },
    "get_migration_name": {
        "name": "get_migration_name",
        "params": "",
        "description": [
            "Gets the phinxlog migration_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_migration_name": {
        "name": "set_migration_name",
        "params": "$migration_name",
        "description": [
            "Sets the phinxlog migration_name",
            "@param string $migration_name the new migration_name",
            "@return \\MyAdmin\\Orm\\Phinxlog"
        ],
        "fieldtexts": []
    },
    "getStartTime": {
        "name": "getStartTime",
        "params": "",
        "description": [
            "Gets the phinxlog start_time",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setStartTime": {
        "name": "setStartTime",
        "params": "$start_time",
        "description": [
            "Sets the phinxlog start_time",
            "@param string $start_time the new start_time",
            "@return \\MyAdmin\\Orm\\Phinxlog"
        ],
        "fieldtexts": []
    },
    "get_start_time": {
        "name": "get_start_time",
        "params": "",
        "description": [
            "Gets the phinxlog start_time",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_start_time": {
        "name": "set_start_time",
        "params": "$start_time",
        "description": [
            "Sets the phinxlog start_time",
            "@param string $start_time the new start_time",
            "@return \\MyAdmin\\Orm\\Phinxlog"
        ],
        "fieldtexts": []
    },
    "getEndTime": {
        "name": "getEndTime",
        "params": "",
        "description": [
            "Gets the phinxlog end_time",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEndTime": {
        "name": "setEndTime",
        "params": "$end_time",
        "description": [
            "Sets the phinxlog end_time",
            "@param string $end_time the new end_time",
            "@return \\MyAdmin\\Orm\\Phinxlog"
        ],
        "fieldtexts": []
    },
    "get_end_time": {
        "name": "get_end_time",
        "params": "",
        "description": [
            "Gets the phinxlog end_time",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_end_time": {
        "name": "set_end_time",
        "params": "$end_time",
        "description": [
            "Sets the phinxlog end_time",
            "@param string $end_time the new end_time",
            "@return \\MyAdmin\\Orm\\Phinxlog"
        ],
        "fieldtexts": []
    },
    "getBreakpoint": {
        "name": "getBreakpoint",
        "params": "",
        "description": [
            "Gets the phinxlog breakpoint",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setBreakpoint": {
        "name": "setBreakpoint",
        "params": "$breakpoint",
        "description": [
            "Sets the phinxlog breakpoint",
            "@param int $breakpoint the new breakpoint",
            "@return \\MyAdmin\\Orm\\Phinxlog"
        ],
        "fieldtexts": []
    },
    "get_breakpoint": {
        "name": "get_breakpoint",
        "params": "",
        "description": [
            "Gets the phinxlog breakpoint",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_breakpoint": {
        "name": "set_breakpoint",
        "params": "$breakpoint",
        "description": [
            "Sets the phinxlog breakpoint",
            "@param int $breakpoint the new breakpoint",
            "@return \\MyAdmin\\Orm\\Phinxlog"
        ],
        "fieldtexts": []
    },
    "getRemaining": {
        "name": "getRemaining",
        "params": "",
        "description": [
            "Gets the prepays remaining",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setRemaining": {
        "name": "setRemaining",
        "params": "$remaining",
        "description": [
            "Sets the prepays remaining",
            "@param float $remaining the new remaining",
            "@return \\MyAdmin\\Orm\\Prepay"
        ],
        "fieldtexts": []
    },
    "get_remaining": {
        "name": "get_remaining",
        "params": "",
        "description": [
            "Gets the prepays remaining",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_remaining": {
        "name": "set_remaining",
        "params": "$remaining",
        "description": [
            "Sets the prepays remaining",
            "@param float $remaining the new remaining",
            "@return \\MyAdmin\\Orm\\Prepay"
        ],
        "fieldtexts": []
    },
    "getAutomaticUse": {
        "name": "getAutomaticUse",
        "params": "",
        "description": [
            "Gets the prepays automatic_use",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setAutomaticUse": {
        "name": "setAutomaticUse",
        "params": "$automatic_use",
        "description": [
            "Sets the prepays automatic_use",
            "@param int $automatic_use the new automatic_use",
            "@return \\MyAdmin\\Orm\\Prepay"
        ],
        "fieldtexts": []
    },
    "get_automatic_use": {
        "name": "get_automatic_use",
        "params": "",
        "description": [
            "Gets the prepays automatic_use",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_automatic_use": {
        "name": "set_automatic_use",
        "params": "$automatic_use",
        "description": [
            "Sets the prepays automatic_use",
            "@param int $automatic_use the new automatic_use",
            "@return \\MyAdmin\\Orm\\Prepay"
        ],
        "fieldtexts": []
    },
    "getVpsId": {
        "name": "getVpsId",
        "params": "",
        "description": [
            "Gets the vps_stats vps_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setVpsId": {
        "name": "setVpsId",
        "params": "$vps_id",
        "description": [
            "Sets the vps_stats vps_id",
            "@param int $vps_id the new vps_id",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_vps_id": {
        "name": "get_vps_id",
        "params": "",
        "description": [
            "Gets the vps_stats vps_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_vps_id": {
        "name": "set_vps_id",
        "params": "$vps_id",
        "description": [
            "Sets the vps_stats vps_id",
            "@param int $vps_id the new vps_id",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getIn": {
        "name": "getIn",
        "params": "",
        "description": [
            "Gets the vps_bandwidth in",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setIn": {
        "name": "setIn",
        "params": "$in",
        "description": [
            "Sets the vps_bandwidth in",
            "@param int $in the new in",
            "@return \\MyAdmin\\Orm\\Vps_Bandwidth"
        ],
        "fieldtexts": []
    },
    "get_in": {
        "name": "get_in",
        "params": "",
        "description": [
            "Gets the vps_bandwidth in",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_in": {
        "name": "set_in",
        "params": "$in",
        "description": [
            "Sets the vps_bandwidth in",
            "@param int $in the new in",
            "@return \\MyAdmin\\Orm\\Vps_Bandwidth"
        ],
        "fieldtexts": []
    },
    "getOut": {
        "name": "getOut",
        "params": "",
        "description": [
            "Gets the vps_bandwidth out",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setOut": {
        "name": "setOut",
        "params": "$out",
        "description": [
            "Sets the vps_bandwidth out",
            "@param int $out the new out",
            "@return \\MyAdmin\\Orm\\Vps_Bandwidth"
        ],
        "fieldtexts": []
    },
    "get_out": {
        "name": "get_out",
        "params": "",
        "description": [
            "Gets the vps_bandwidth out",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_out": {
        "name": "set_out",
        "params": "$out",
        "description": [
            "Sets the vps_bandwidth out",
            "@param int $out the new out",
            "@return \\MyAdmin\\Orm\\Vps_Bandwidth"
        ],
        "fieldtexts": []
    },
    "getQs": {
        "name": "getQs",
        "params": "",
        "description": [
            "Gets the qs_shots qs",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setQs": {
        "name": "setQs",
        "params": "$qs",
        "description": [
            "Sets the qs_shots qs",
            "@param int $qs the new qs",
            "@return \\MyAdmin\\Orm\\Qs_Shot"
        ],
        "fieldtexts": []
    },
    "get_qs": {
        "name": "get_qs",
        "params": "",
        "description": [
            "Gets the qs_shots qs",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_qs": {
        "name": "set_qs",
        "params": "$qs",
        "description": [
            "Sets the qs_shots qs",
            "@param int $qs the new qs",
            "@return \\MyAdmin\\Orm\\Qs_Shot"
        ],
        "fieldtexts": []
    },
    "getUsed": {
        "name": "getUsed",
        "params": "",
        "description": [
            "Gets the vps_ips6 used",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setUsed": {
        "name": "setUsed",
        "params": "$used",
        "description": [
            "Sets the vps_ips6 used",
            "@param int $used the new used",
            "@return \\MyAdmin\\Orm\\Vps_Ips6"
        ],
        "fieldtexts": []
    },
    "get_used": {
        "name": "get_used",
        "params": "",
        "description": [
            "Gets the vps_ips6 used",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_used": {
        "name": "set_used",
        "params": "$used",
        "description": [
            "Sets the vps_ips6 used",
            "@param int $used the new used",
            "@return \\MyAdmin\\Orm\\Vps_Ips6"
        ],
        "fieldtexts": []
    },
    "getMain": {
        "name": "getMain",
        "params": "",
        "description": [
            "Gets the vps_ips6 main",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setMain": {
        "name": "setMain",
        "params": "$main",
        "description": [
            "Sets the vps_ips6 main",
            "@param int $main the new main",
            "@return \\MyAdmin\\Orm\\Vps_Ips6"
        ],
        "fieldtexts": []
    },
    "get_main": {
        "name": "get_main",
        "params": "",
        "description": [
            "Gets the vps_ips6 main",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_main": {
        "name": "set_main",
        "params": "$main",
        "description": [
            "Sets the vps_ips6 main",
            "@param int $main the new main",
            "@return \\MyAdmin\\Orm\\Vps_Ips6"
        ],
        "fieldtexts": []
    },
    "getCpuFlags": {
        "name": "getCpuFlags",
        "params": "",
        "description": [
            "Gets the vps_master_details cpu_flags",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setCpuFlags": {
        "name": "setCpuFlags",
        "params": "$cpu_flags",
        "description": [
            "Sets the vps_master_details cpu_flags",
            "@param mixed $cpu_flags the new cpu_flags",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_cpu_flags": {
        "name": "get_cpu_flags",
        "params": "",
        "description": [
            "Gets the vps_master_details cpu_flags",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_cpu_flags": {
        "name": "set_cpu_flags",
        "params": "$cpu_flags",
        "description": [
            "Sets the vps_master_details cpu_flags",
            "@param mixed $cpu_flags the new cpu_flags",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getIoping": {
        "name": "getIoping",
        "params": "",
        "description": [
            "Gets the vps_master_details ioping",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setIoping": {
        "name": "setIoping",
        "params": "$ioping",
        "description": [
            "Sets the vps_master_details ioping",
            "@param int $ioping the new ioping",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_ioping": {
        "name": "get_ioping",
        "params": "",
        "description": [
            "Gets the vps_master_details ioping",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ioping": {
        "name": "set_ioping",
        "params": "$ioping",
        "description": [
            "Sets the vps_master_details ioping",
            "@param int $ioping the new ioping",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getBits": {
        "name": "getBits",
        "params": "",
        "description": [
            "Gets the vps_templates bits",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setBits": {
        "name": "setBits",
        "params": "$bits",
        "description": [
            "Sets the vps_templates bits",
            "@param int $bits the new bits",
            "@return \\MyAdmin\\Orm\\Vps_Template"
        ],
        "fieldtexts": []
    },
    "get_bits": {
        "name": "get_bits",
        "params": "",
        "description": [
            "Gets the vps_templates bits",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_bits": {
        "name": "set_bits",
        "params": "$bits",
        "description": [
            "Sets the vps_templates bits",
            "@param int $bits the new bits",
            "@return \\MyAdmin\\Orm\\Vps_Template"
        ],
        "fieldtexts": []
    },
    "getLoad": {
        "name": "getLoad",
        "params": "",
        "description": [
            "Gets the website_masters load",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setLoad": {
        "name": "setLoad",
        "params": "$load",
        "description": [
            "Sets the website_masters load",
            "@param float $load the new load",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "get_load": {
        "name": "get_load",
        "params": "",
        "description": [
            "Gets the website_masters load",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_load": {
        "name": "set_load",
        "params": "$load",
        "description": [
            "Sets the website_masters load",
            "@param float $load the new load",
            "@return \\MyAdmin\\Orm\\Website_Master"
        ],
        "fieldtexts": []
    },
    "getRam": {
        "name": "getRam",
        "params": "",
        "description": [
            "Gets the vps_masters ram",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setRam": {
        "name": "setRam",
        "params": "$ram",
        "description": [
            "Sets the vps_masters ram",
            "@param int $ram the new ram",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_ram": {
        "name": "get_ram",
        "params": "",
        "description": [
            "Gets the vps_masters ram",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ram": {
        "name": "set_ram",
        "params": "$ram",
        "description": [
            "Sets the vps_masters ram",
            "@param int $ram the new ram",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getCpuModel": {
        "name": "getCpuModel",
        "params": "",
        "description": [
            "Gets the vps_masters cpu_model",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCpuModel": {
        "name": "setCpuModel",
        "params": "$cpu_model",
        "description": [
            "Sets the vps_masters cpu_model",
            "@param string $cpu_model the new cpu_model",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_cpu_model": {
        "name": "get_cpu_model",
        "params": "",
        "description": [
            "Gets the vps_masters cpu_model",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_cpu_model": {
        "name": "set_cpu_model",
        "params": "$cpu_model",
        "description": [
            "Sets the vps_masters cpu_model",
            "@param string $cpu_model the new cpu_model",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getCpuMhz": {
        "name": "getCpuMhz",
        "params": "",
        "description": [
            "Gets the vps_masters cpu_mhz",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setCpuMhz": {
        "name": "setCpuMhz",
        "params": "$cpu_mhz",
        "description": [
            "Sets the vps_masters cpu_mhz",
            "@param float $cpu_mhz the new cpu_mhz",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_cpu_mhz": {
        "name": "get_cpu_mhz",
        "params": "",
        "description": [
            "Gets the vps_masters cpu_mhz",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_cpu_mhz": {
        "name": "set_cpu_mhz",
        "params": "$cpu_mhz",
        "description": [
            "Sets the vps_masters cpu_mhz",
            "@param float $cpu_mhz the new cpu_mhz",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getCores": {
        "name": "getCores",
        "params": "",
        "description": [
            "Gets the vps_masters cores",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setCores": {
        "name": "setCores",
        "params": "$cores",
        "description": [
            "Sets the vps_masters cores",
            "@param int $cores the new cores",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_cores": {
        "name": "get_cores",
        "params": "",
        "description": [
            "Gets the vps_masters cores",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_cores": {
        "name": "set_cores",
        "params": "$cores",
        "description": [
            "Sets the vps_masters cores",
            "@param int $cores the new cores",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getRaidStatus": {
        "name": "getRaidStatus",
        "params": "",
        "description": [
            "Gets the vps_masters raid_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRaidStatus": {
        "name": "setRaidStatus",
        "params": "$raid_status",
        "description": [
            "Sets the vps_masters raid_status",
            "@param string $raid_status the new raid_status",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_raid_status": {
        "name": "get_raid_status",
        "params": "",
        "description": [
            "Gets the vps_masters raid_status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_raid_status": {
        "name": "set_raid_status",
        "params": "$raid_status",
        "description": [
            "Sets the vps_masters raid_status",
            "@param string $raid_status the new raid_status",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getMounts": {
        "name": "getMounts",
        "params": "",
        "description": [
            "Gets the vps_masters mounts",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMounts": {
        "name": "setMounts",
        "params": "$mounts",
        "description": [
            "Sets the vps_masters mounts",
            "@param string $mounts the new mounts",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_mounts": {
        "name": "get_mounts",
        "params": "",
        "description": [
            "Gets the vps_masters mounts",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mounts": {
        "name": "set_mounts",
        "params": "$mounts",
        "description": [
            "Sets the vps_masters mounts",
            "@param string $mounts the new mounts",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getDriveType": {
        "name": "getDriveType",
        "params": "",
        "description": [
            "Gets the vps_masters drive_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDriveType": {
        "name": "setDriveType",
        "params": "$drive_type",
        "description": [
            "Sets the vps_masters drive_type",
            "@param string $drive_type the new drive_type",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_drive_type": {
        "name": "get_drive_type",
        "params": "",
        "description": [
            "Gets the vps_masters drive_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_drive_type": {
        "name": "set_drive_type",
        "params": "$drive_type",
        "description": [
            "Sets the vps_masters drive_type",
            "@param string $drive_type the new drive_type",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getImage": {
        "name": "getImage",
        "params": "",
        "description": [
            "Gets the vps_shots image",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setImage": {
        "name": "setImage",
        "params": "$image",
        "description": [
            "Sets the vps_shots image",
            "@param mixed $image the new image",
            "@return \\MyAdmin\\Orm\\Vps_Shot"
        ],
        "fieldtexts": []
    },
    "get_image": {
        "name": "get_image",
        "params": "",
        "description": [
            "Gets the vps_shots image",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_image": {
        "name": "set_image",
        "params": "$image",
        "description": [
            "Sets the vps_shots image",
            "@param mixed $image the new image",
            "@return \\MyAdmin\\Orm\\Vps_Shot"
        ],
        "fieldtexts": []
    },
    "getVzid": {
        "name": "getVzid",
        "params": "",
        "description": [
            "Gets the vps vzid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setVzid": {
        "name": "setVzid",
        "params": "$vzid",
        "description": [
            "Sets the vps vzid",
            "@param string $vzid the new vzid",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "get_vzid": {
        "name": "get_vzid",
        "params": "",
        "description": [
            "Gets the vps vzid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_vzid": {
        "name": "set_vzid",
        "params": "$vzid",
        "description": [
            "Sets the vps vzid",
            "@param string $vzid the new vzid",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "getSlices": {
        "name": "getSlices",
        "params": "",
        "description": [
            "Gets the vps slices",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSlices": {
        "name": "setSlices",
        "params": "$slices",
        "description": [
            "Sets the vps slices",
            "@param int $slices the new slices",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "get_slices": {
        "name": "get_slices",
        "params": "",
        "description": [
            "Gets the vps slices",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_slices": {
        "name": "set_slices",
        "params": "$slices",
        "description": [
            "Sets the vps slices",
            "@param int $slices the new slices",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "getVnc": {
        "name": "getVnc",
        "params": "",
        "description": [
            "Gets the vps vnc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setVnc": {
        "name": "setVnc",
        "params": "$vnc",
        "description": [
            "Sets the vps vnc",
            "@param string $vnc the new vnc",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "get_vnc": {
        "name": "get_vnc",
        "params": "",
        "description": [
            "Gets the vps vnc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_vnc": {
        "name": "set_vnc",
        "params": "$vnc",
        "description": [
            "Sets the vps vnc",
            "@param string $vnc the new vnc",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "getVncPort": {
        "name": "getVncPort",
        "params": "",
        "description": [
            "Gets the vps vnc_port",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setVncPort": {
        "name": "setVncPort",
        "params": "$vnc_port",
        "description": [
            "Sets the vps vnc_port",
            "@param int $vnc_port the new vnc_port",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "get_vnc_port": {
        "name": "get_vnc_port",
        "params": "",
        "description": [
            "Gets the vps vnc_port",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_vnc_port": {
        "name": "set_vnc_port",
        "params": "$vnc_port",
        "description": [
            "Sets the vps vnc_port",
            "@param int $vnc_port the new vnc_port",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "getRootpass": {
        "name": "getRootpass",
        "params": "",
        "description": [
            "Gets the vps rootpass",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRootpass": {
        "name": "setRootpass",
        "params": "$rootpass",
        "description": [
            "Sets the vps rootpass",
            "@param string $rootpass the new rootpass",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "get_rootpass": {
        "name": "get_rootpass",
        "params": "",
        "description": [
            "Gets the vps rootpass",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_rootpass": {
        "name": "set_rootpass",
        "params": "$rootpass",
        "description": [
            "Sets the vps rootpass",
            "@param string $rootpass the new rootpass",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "getMac": {
        "name": "getMac",
        "params": "",
        "description": [
            "Gets the vps mac",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMac": {
        "name": "setMac",
        "params": "$mac",
        "description": [
            "Sets the vps mac",
            "@param string $mac the new mac",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "get_mac": {
        "name": "get_mac",
        "params": "",
        "description": [
            "Gets the vps mac",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mac": {
        "name": "set_mac",
        "params": "$mac",
        "description": [
            "Sets the vps mac",
            "@param string $mac the new mac",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "getOs": {
        "name": "getOs",
        "params": "",
        "description": [
            "Gets the vps_templates os",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setOs": {
        "name": "setOs",
        "params": "$os",
        "description": [
            "Sets the vps_templates os",
            "@param string $os the new os",
            "@return \\MyAdmin\\Orm\\Vps_Template"
        ],
        "fieldtexts": []
    },
    "get_os": {
        "name": "get_os",
        "params": "",
        "description": [
            "Gets the vps_templates os",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_os": {
        "name": "set_os",
        "params": "$os",
        "description": [
            "Sets the vps_templates os",
            "@param string $os the new os",
            "@return \\MyAdmin\\Orm\\Vps_Template"
        ],
        "fieldtexts": []
    },
    "getPlatform": {
        "name": "getPlatform",
        "params": "",
        "description": [
            "Gets the vps platform",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPlatform": {
        "name": "setPlatform",
        "params": "$platform",
        "description": [
            "Sets the vps platform",
            "@param string $platform the new platform",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "get_platform": {
        "name": "get_platform",
        "params": "",
        "description": [
            "Gets the vps platform",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_platform": {
        "name": "set_platform",
        "params": "$platform",
        "description": [
            "Sets the vps platform",
            "@param string $platform the new platform",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "getHttpref": {
        "name": "getHttpref",
        "params": "",
        "description": [
            "Gets the referrer_log httpref",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setHttpref": {
        "name": "setHttpref",
        "params": "$httpref",
        "description": [
            "Sets the referrer_log httpref",
            "@param mixed $httpref the new httpref",
            "@return \\MyAdmin\\Orm\\Referrer_Log"
        ],
        "fieldtexts": []
    },
    "get_httpref": {
        "name": "get_httpref",
        "params": "",
        "description": [
            "Gets the referrer_log httpref",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_httpref": {
        "name": "set_httpref",
        "params": "$httpref",
        "description": [
            "Sets the referrer_log httpref",
            "@param mixed $httpref the new httpref",
            "@return \\MyAdmin\\Orm\\Referrer_Log"
        ],
        "fieldtexts": []
    },
    "getAdreferrer": {
        "name": "getAdreferrer",
        "params": "",
        "description": [
            "Gets the referrer_log adreferrer",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setAdreferrer": {
        "name": "setAdreferrer",
        "params": "$adreferrer",
        "description": [
            "Sets the referrer_log adreferrer",
            "@param mixed $adreferrer the new adreferrer",
            "@return \\MyAdmin\\Orm\\Referrer_Log"
        ],
        "fieldtexts": []
    },
    "get_adreferrer": {
        "name": "get_adreferrer",
        "params": "",
        "description": [
            "Gets the referrer_log adreferrer",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_adreferrer": {
        "name": "set_adreferrer",
        "params": "$adreferrer",
        "description": [
            "Sets the referrer_log adreferrer",
            "@param mixed $adreferrer the new adreferrer",
            "@return \\MyAdmin\\Orm\\Referrer_Log"
        ],
        "fieldtexts": []
    },
    "needs_invoiced": {
        "name": "needs_invoiced",
        "params": "",
        "description": [
            "detremines if its time to invoice it again",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "invoice": {
        "name": "invoice",
        "params": "$current_date = false, $cost = false, $post_handling = true, $mail_invoice = true",
        "description": [
            "generates an invoice",
            "@param false|string $current_date optional current date or FALSE\/default is now",
            "@param false|bool $cost optional amount for the invoice or default is repeat_invoice listed amount",
            "@param bool $post_handling whether or not to run post invoice handling on it , defaults to TRUE",
            "@param bool $mail_invoice whether or not to mail the invoice, defaults to TRUE",
            "@return Invoice the created invoice"
        ],
        "fieldtexts": []
    },
    "getLastDate": {
        "name": "getLastDate",
        "params": "",
        "description": [
            "Gets the repeat_invoices last_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLastDate": {
        "name": "setLastDate",
        "params": "$last_date",
        "description": [
            "Sets the repeat_invoices last_date",
            "@param string $last_date the new last_date",
            "@return \\MyAdmin\\Orm\\Repeat_Invoice"
        ],
        "fieldtexts": []
    },
    "get_last_date": {
        "name": "get_last_date",
        "params": "",
        "description": [
            "Gets the repeat_invoices last_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_last_date": {
        "name": "set_last_date",
        "params": "$last_date",
        "description": [
            "Sets the repeat_invoices last_date",
            "@param string $last_date the new last_date",
            "@return \\MyAdmin\\Orm\\Repeat_Invoice"
        ],
        "fieldtexts": []
    },
    "getNextDate": {
        "name": "getNextDate",
        "params": "",
        "description": [
            "Gets the repeat_invoices next_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setNextDate": {
        "name": "setNextDate",
        "params": "$next_date",
        "description": [
            "Sets the repeat_invoices next_date",
            "@param string $next_date the new next_date",
            "@return \\MyAdmin\\Orm\\Repeat_Invoice"
        ],
        "fieldtexts": []
    },
    "get_next_date": {
        "name": "get_next_date",
        "params": "",
        "description": [
            "Gets the repeat_invoices next_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_next_date": {
        "name": "set_next_date",
        "params": "$next_date",
        "description": [
            "Sets the repeat_invoices next_date",
            "@param string $next_date the new next_date",
            "@return \\MyAdmin\\Orm\\Repeat_Invoice"
        ],
        "fieldtexts": []
    },
    "getQuery": {
        "name": "getQuery",
        "params": "",
        "description": [
            "Gets the reports query",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setQuery": {
        "name": "setQuery",
        "params": "$query",
        "description": [
            "Sets the reports query",
            "@param mixed $query the new query",
            "@return \\MyAdmin\\Orm\\Report"
        ],
        "fieldtexts": []
    },
    "get_query": {
        "name": "get_query",
        "params": "",
        "description": [
            "Gets the reports query",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_query": {
        "name": "set_query",
        "params": "$query",
        "description": [
            "Sets the reports query",
            "@param mixed $query the new query",
            "@return \\MyAdmin\\Orm\\Report"
        ],
        "fieldtexts": []
    },
    "getSettings": {
        "name": "getSettings",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "getFunction": {
        "name": "getFunction",
        "params": "",
        "description": [
            "Gets the request_log function",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setFunction": {
        "name": "setFunction",
        "params": "$function",
        "description": [
            "Sets the request_log function",
            "@param string $function the new function",
            "@return \\MyAdmin\\Orm\\Request_Log"
        ],
        "fieldtexts": []
    },
    "get_function": {
        "name": "get_function",
        "params": "",
        "description": [
            "Gets the request_log function",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_function": {
        "name": "set_function",
        "params": "$function",
        "description": [
            "Sets the request_log function",
            "@param string $function the new function",
            "@return \\MyAdmin\\Orm\\Request_Log"
        ],
        "fieldtexts": []
    },
    "getCategory": {
        "name": "getCategory",
        "params": "",
        "description": [
            "Gets the service_types category",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setCategory": {
        "name": "setCategory",
        "params": "$category",
        "description": [
            "Sets the service_types category",
            "@param int $category the new category",
            "@return \\MyAdmin\\Orm\\Service_Type"
        ],
        "fieldtexts": []
    },
    "get_category": {
        "name": "get_category",
        "params": "",
        "description": [
            "Gets the service_types category",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_category": {
        "name": "set_category",
        "params": "$category",
        "description": [
            "Sets the service_types category",
            "@param int $category the new category",
            "@return \\MyAdmin\\Orm\\Service_Type"
        ],
        "fieldtexts": []
    },
    "getAction": {
        "name": "getAction",
        "params": "",
        "description": [
            "convert the class name back to the original action",
            "which is a snake_case formatted version of the class name.",
            "@return string the action in snake_case"
        ],
        "fieldtexts": []
    },
    "setAction": {
        "name": "setAction",
        "params": "$action",
        "description": [
            "sets the action",
            "@param string $action sets the action",
            "@return \\MyAdmin\\Services\\ServiceQueueHandler"
        ],
        "fieldtexts": []
    },
    "get_action": {
        "name": "get_action",
        "params": "",
        "description": [
            "Gets the request_log action",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_action": {
        "name": "set_action",
        "params": "$action",
        "description": [
            "Sets the request_log action",
            "@param string $action the new action",
            "@return \\MyAdmin\\Orm\\Request_Log"
        ],
        "fieldtexts": []
    },
    "getRequest": {
        "name": "getRequest",
        "params": "",
        "description": [
            "Gets the request_log request",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setRequest": {
        "name": "setRequest",
        "params": "$request",
        "description": [
            "Sets the request_log request",
            "@param mixed $request the new request",
            "@return \\MyAdmin\\Orm\\Request_Log"
        ],
        "fieldtexts": []
    },
    "get_request": {
        "name": "get_request",
        "params": "",
        "description": [
            "Gets the request_log request",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_request": {
        "name": "set_request",
        "params": "$request",
        "description": [
            "Sets the request_log request",
            "@param mixed $request the new request",
            "@return \\MyAdmin\\Orm\\Request_Log"
        ],
        "fieldtexts": []
    },
    "getResult": {
        "name": "getResult",
        "params": "",
        "description": [
            "Gets the search result",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setResult": {
        "name": "setResult",
        "params": "$result",
        "description": [
            "Sets the search result",
            "@param mixed $result the new result",
            "@return \\MyAdmin\\Orm\\Search"
        ],
        "fieldtexts": []
    },
    "get_result": {
        "name": "get_result",
        "params": "",
        "description": [
            "Gets the search result",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_result": {
        "name": "set_result",
        "params": "$result",
        "description": [
            "Sets the search result",
            "@param mixed $result the new result",
            "@return \\MyAdmin\\Orm\\Search"
        ],
        "fieldtexts": []
    },
    "getSaleId": {
        "name": "getSaleId",
        "params": "",
        "description": [
            "Gets the salesmanager_items sale_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSaleId": {
        "name": "setSaleId",
        "params": "$sale_id",
        "description": [
            "Sets the salesmanager_items sale_id",
            "@param int $sale_id the new sale_id",
            "@return \\MyAdmin\\Orm\\Salesmanager_Item"
        ],
        "fieldtexts": []
    },
    "get_sale_id": {
        "name": "get_sale_id",
        "params": "",
        "description": [
            "Gets the salesmanager_items sale_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_sale_id": {
        "name": "set_sale_id",
        "params": "$sale_id",
        "description": [
            "Sets the salesmanager_items sale_id",
            "@param int $sale_id the new sale_id",
            "@return \\MyAdmin\\Orm\\Salesmanager_Item"
        ],
        "fieldtexts": []
    },
    "getSubtotal": {
        "name": "getSubtotal",
        "params": "",
        "description": [
            "Gets the salesmanager_items subtotal",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setSubtotal": {
        "name": "setSubtotal",
        "params": "$subtotal",
        "description": [
            "Sets the salesmanager_items subtotal",
            "@param float $subtotal the new subtotal",
            "@return \\MyAdmin\\Orm\\Salesmanager_Item"
        ],
        "fieldtexts": []
    },
    "get_subtotal": {
        "name": "get_subtotal",
        "params": "",
        "description": [
            "Gets the salesmanager_items subtotal",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_subtotal": {
        "name": "set_subtotal",
        "params": "$subtotal",
        "description": [
            "Sets the salesmanager_items subtotal",
            "@param float $subtotal the new subtotal",
            "@return \\MyAdmin\\Orm\\Salesmanager_Item"
        ],
        "fieldtexts": []
    },
    "getAddress1": {
        "name": "getAddress1",
        "params": "",
        "description": [
            "Gets the salesmanager address1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAddress1": {
        "name": "setAddress1",
        "params": "$address1",
        "description": [
            "Sets the salesmanager address1",
            "@param string $address1 the new address1",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "get_address1": {
        "name": "get_address1",
        "params": "",
        "description": [
            "Gets the salesmanager address1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_address1": {
        "name": "set_address1",
        "params": "$address1",
        "description": [
            "Sets the salesmanager address1",
            "@param string $address1 the new address1",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "getZipcode": {
        "name": "getZipcode",
        "params": "",
        "description": [
            "Gets the salesmanager zipcode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setZipcode": {
        "name": "setZipcode",
        "params": "$zipcode",
        "description": [
            "Sets the salesmanager zipcode",
            "@param string $zipcode the new zipcode",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "get_zipcode": {
        "name": "get_zipcode",
        "params": "",
        "description": [
            "Gets the salesmanager zipcode",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_zipcode": {
        "name": "set_zipcode",
        "params": "$zipcode",
        "description": [
            "Sets the salesmanager zipcode",
            "@param string $zipcode the new zipcode",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "getCc": {
        "name": "getCc",
        "params": "",
        "description": [
            "Gets the salesmanager cc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCc": {
        "name": "setCc",
        "params": "$cc",
        "description": [
            "Sets the salesmanager cc",
            "@param string $cc the new cc",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "get_cc": {
        "name": "get_cc",
        "params": "",
        "description": [
            "Gets the salesmanager cc",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_cc": {
        "name": "set_cc",
        "params": "$cc",
        "description": [
            "Sets the salesmanager cc",
            "@param string $cc the new cc",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "getUpdateDate": {
        "name": "getUpdateDate",
        "params": "",
        "description": [
            "Gets the salesmanager update_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setUpdateDate": {
        "name": "setUpdateDate",
        "params": "$update_date",
        "description": [
            "Sets the salesmanager update_date",
            "@param string $update_date the new update_date",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "get_update_date": {
        "name": "get_update_date",
        "params": "",
        "description": [
            "Gets the salesmanager update_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_update_date": {
        "name": "set_update_date",
        "params": "$update_date",
        "description": [
            "Sets the salesmanager update_date",
            "@param string $update_date the new update_date",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "getTotal": {
        "name": "getTotal",
        "params": "",
        "description": [
            "Gets the salesmanager total",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setTotal": {
        "name": "setTotal",
        "params": "$total",
        "description": [
            "Sets the salesmanager total",
            "@param float $total the new total",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "get_total": {
        "name": "get_total",
        "params": "",
        "description": [
            "Gets the salesmanager total",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_total": {
        "name": "set_total",
        "params": "$total",
        "description": [
            "Sets the salesmanager total",
            "@param float $total the new total",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "getLogo": {
        "name": "getLogo",
        "params": "",
        "description": [
            "Gets the salesmanager logo",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setLogo": {
        "name": "setLogo",
        "params": "$logo",
        "description": [
            "Sets the salesmanager logo",
            "@param string $logo the new logo",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "get_logo": {
        "name": "get_logo",
        "params": "",
        "description": [
            "Gets the salesmanager logo",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_logo": {
        "name": "set_logo",
        "params": "$logo",
        "description": [
            "Sets the salesmanager logo",
            "@param string $logo the new logo",
            "@return \\MyAdmin\\Orm\\Salesmanager"
        ],
        "fieldtexts": []
    },
    "getTerm": {
        "name": "getTerm",
        "params": "",
        "description": [
            "Gets the tld_info term",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTerm": {
        "name": "setTerm",
        "params": "$term",
        "description": [
            "Sets the tld_info term",
            "@param string $term the new term",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_term": {
        "name": "get_term",
        "params": "",
        "description": [
            "Gets the tld_info term",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_term": {
        "name": "set_term",
        "params": "$term",
        "description": [
            "Sets the tld_info term",
            "@param string $term the new term",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getPriority": {
        "name": "getPriority",
        "params": "",
        "description": [
            "Gets the search priority",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPriority": {
        "name": "setPriority",
        "params": "$priority",
        "description": [
            "Sets the search priority",
            "@param int $priority the new priority",
            "@return \\MyAdmin\\Orm\\Search"
        ],
        "fieldtexts": []
    },
    "get_priority": {
        "name": "get_priority",
        "params": "",
        "description": [
            "Gets the search priority",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_priority": {
        "name": "set_priority",
        "params": "$priority",
        "description": [
            "Sets the search priority",
            "@param int $priority the new priority",
            "@return \\MyAdmin\\Orm\\Search"
        ],
        "fieldtexts": []
    },
    "getPartialPriority": {
        "name": "getPartialPriority",
        "params": "",
        "description": [
            "Gets the search partial_priority",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPartialPriority": {
        "name": "setPartialPriority",
        "params": "$partial_priority",
        "description": [
            "Sets the search partial_priority",
            "@param int $partial_priority the new partial_priority",
            "@return \\MyAdmin\\Orm\\Search"
        ],
        "fieldtexts": []
    },
    "get_partial_priority": {
        "name": "get_partial_priority",
        "params": "",
        "description": [
            "Gets the search partial_priority",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_partial_priority": {
        "name": "set_partial_priority",
        "params": "$partial_priority",
        "description": [
            "Sets the search partial_priority",
            "@param int $partial_priority the new partial_priority",
            "@return \\MyAdmin\\Orm\\Search"
        ],
        "fieldtexts": []
    },
    "getRoot": {
        "name": "getRoot",
        "params": "",
        "description": [
            "Gets the vps_master_details root",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRoot": {
        "name": "setRoot",
        "params": "$root",
        "description": [
            "Sets the vps_master_details root",
            "@param string $root the new root",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_root": {
        "name": "get_root",
        "params": "",
        "description": [
            "Gets the vps_master_details root",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_root": {
        "name": "set_root",
        "params": "$root",
        "description": [
            "Sets the vps_master_details root",
            "@param string $root the new root",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getCustomTag": {
        "name": "getCustomTag",
        "params": "",
        "description": [
            "Gets the servers custom_tag",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCustomTag": {
        "name": "setCustomTag",
        "params": "$custom_tag",
        "description": [
            "Sets the servers custom_tag",
            "@param string $custom_tag the new custom_tag",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_custom_tag": {
        "name": "get_custom_tag",
        "params": "",
        "description": [
            "Gets the servers custom_tag",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_custom_tag": {
        "name": "set_custom_tag",
        "params": "$custom_tag",
        "description": [
            "Sets the servers custom_tag",
            "@param string $custom_tag the new custom_tag",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getInitialBill": {
        "name": "getInitialBill",
        "params": "",
        "description": [
            "Gets the servers initial_bill",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setInitialBill": {
        "name": "setInitialBill",
        "params": "$initial_bill",
        "description": [
            "Sets the servers initial_bill",
            "@param int $initial_bill the new initial_bill",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_initial_bill": {
        "name": "get_initial_bill",
        "params": "",
        "description": [
            "Gets the servers initial_bill",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_initial_bill": {
        "name": "set_initial_bill",
        "params": "$initial_bill",
        "description": [
            "Sets the servers initial_bill",
            "@param int $initial_bill the new initial_bill",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getHardware": {
        "name": "getHardware",
        "params": "",
        "description": [
            "Gets the servers hardware",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setHardware": {
        "name": "setHardware",
        "params": "$hardware",
        "description": [
            "Sets the servers hardware",
            "@param int $hardware the new hardware",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_hardware": {
        "name": "get_hardware",
        "params": "",
        "description": [
            "Gets the servers hardware",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_hardware": {
        "name": "set_hardware",
        "params": "$hardware",
        "description": [
            "Sets the servers hardware",
            "@param int $hardware the new hardware",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getIps": {
        "name": "getIps",
        "params": "",
        "description": [
            "Gets the servers ips",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setIps": {
        "name": "setIps",
        "params": "$ips",
        "description": [
            "Sets the servers ips",
            "@param int $ips the new ips",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_ips": {
        "name": "get_ips",
        "params": "",
        "description": [
            "Gets the servers ips",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_ips": {
        "name": "set_ips",
        "params": "$ips",
        "description": [
            "Sets the servers ips",
            "@param int $ips the new ips",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getMonthlyBill": {
        "name": "getMonthlyBill",
        "params": "",
        "description": [
            "Gets the servers monthly_bill",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setMonthlyBill": {
        "name": "setMonthlyBill",
        "params": "$monthly_bill",
        "description": [
            "Sets the servers monthly_bill",
            "@param int $monthly_bill the new monthly_bill",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_monthly_bill": {
        "name": "get_monthly_bill",
        "params": "",
        "description": [
            "Gets the servers monthly_bill",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_monthly_bill": {
        "name": "set_monthly_bill",
        "params": "$monthly_bill",
        "description": [
            "Sets the servers monthly_bill",
            "@param int $monthly_bill the new monthly_bill",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getSetup": {
        "name": "getSetup",
        "params": "",
        "description": [
            "Gets the servers setup",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSetup": {
        "name": "setSetup",
        "params": "$setup",
        "description": [
            "Sets the servers setup",
            "@param int $setup the new setup",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_setup": {
        "name": "get_setup",
        "params": "",
        "description": [
            "Gets the servers setup",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_setup": {
        "name": "set_setup",
        "params": "$setup",
        "description": [
            "Sets the servers setup",
            "@param int $setup the new setup",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getRep": {
        "name": "getRep",
        "params": "",
        "description": [
            "Gets the servers rep",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setRep": {
        "name": "setRep",
        "params": "$rep",
        "description": [
            "Sets the servers rep",
            "@param int $rep the new rep",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_rep": {
        "name": "get_rep",
        "params": "",
        "description": [
            "Gets the servers rep",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_rep": {
        "name": "set_rep",
        "params": "$rep",
        "description": [
            "Sets the servers rep",
            "@param int $rep the new rep",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getTotalCost": {
        "name": "getTotalCost",
        "params": "",
        "description": [
            "Gets the servers total_cost",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setTotalCost": {
        "name": "setTotalCost",
        "params": "$total_cost",
        "description": [
            "Sets the servers total_cost",
            "@param float $total_cost the new total_cost",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_total_cost": {
        "name": "get_total_cost",
        "params": "",
        "description": [
            "Gets the servers total_cost",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_total_cost": {
        "name": "set_total_cost",
        "params": "$total_cost",
        "description": [
            "Sets the servers total_cost",
            "@param float $total_cost the new total_cost",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getHardwareOrdered": {
        "name": "getHardwareOrdered",
        "params": "",
        "description": [
            "Gets the servers hardware_ordered",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setHardwareOrdered": {
        "name": "setHardwareOrdered",
        "params": "$hardware_ordered",
        "description": [
            "Sets the servers hardware_ordered",
            "@param int $hardware_ordered the new hardware_ordered",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_hardware_ordered": {
        "name": "get_hardware_ordered",
        "params": "",
        "description": [
            "Gets the servers hardware_ordered",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_hardware_ordered": {
        "name": "set_hardware_ordered",
        "params": "$hardware_ordered",
        "description": [
            "Sets the servers hardware_ordered",
            "@param int $hardware_ordered the new hardware_ordered",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getBilled": {
        "name": "getBilled",
        "params": "",
        "description": [
            "Gets the servers billed",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setBilled": {
        "name": "setBilled",
        "params": "$billed",
        "description": [
            "Sets the servers billed",
            "@param int $billed the new billed",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_billed": {
        "name": "get_billed",
        "params": "",
        "description": [
            "Gets the servers billed",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_billed": {
        "name": "set_billed",
        "params": "$billed",
        "description": [
            "Sets the servers billed",
            "@param int $billed the new billed",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getWelcomeEmail": {
        "name": "getWelcomeEmail",
        "params": "",
        "description": [
            "Gets the servers welcome_email",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setWelcomeEmail": {
        "name": "setWelcomeEmail",
        "params": "$welcome_email",
        "description": [
            "Sets the servers welcome_email",
            "@param int $welcome_email the new welcome_email",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_welcome_email": {
        "name": "get_welcome_email",
        "params": "",
        "description": [
            "Gets the servers welcome_email",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_welcome_email": {
        "name": "set_welcome_email",
        "params": "$welcome_email",
        "description": [
            "Sets the servers welcome_email",
            "@param int $welcome_email the new welcome_email",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getDedicatedCpu": {
        "name": "getDedicatedCpu",
        "params": "",
        "description": [
            "Gets the servers dedicated_cpu",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDedicatedCpu": {
        "name": "setDedicatedCpu",
        "params": "$dedicated_cpu",
        "description": [
            "Sets the servers dedicated_cpu",
            "@param int $dedicated_cpu the new dedicated_cpu",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_dedicated_cpu": {
        "name": "get_dedicated_cpu",
        "params": "",
        "description": [
            "Gets the servers dedicated_cpu",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dedicated_cpu": {
        "name": "set_dedicated_cpu",
        "params": "$dedicated_cpu",
        "description": [
            "Sets the servers dedicated_cpu",
            "@param int $dedicated_cpu the new dedicated_cpu",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getDedicatedMemory": {
        "name": "getDedicatedMemory",
        "params": "",
        "description": [
            "Gets the servers dedicated_memory",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDedicatedMemory": {
        "name": "setDedicatedMemory",
        "params": "$dedicated_memory",
        "description": [
            "Sets the servers dedicated_memory",
            "@param int $dedicated_memory the new dedicated_memory",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_dedicated_memory": {
        "name": "get_dedicated_memory",
        "params": "",
        "description": [
            "Gets the servers dedicated_memory",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dedicated_memory": {
        "name": "set_dedicated_memory",
        "params": "$dedicated_memory",
        "description": [
            "Sets the servers dedicated_memory",
            "@param int $dedicated_memory the new dedicated_memory",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getDedicatedHd1": {
        "name": "getDedicatedHd1",
        "params": "",
        "description": [
            "Gets the servers dedicated_hd1",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDedicatedHd1": {
        "name": "setDedicatedHd1",
        "params": "$dedicated_hd1",
        "description": [
            "Sets the servers dedicated_hd1",
            "@param int $dedicated_hd1 the new dedicated_hd1",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_dedicated_hd1": {
        "name": "get_dedicated_hd1",
        "params": "",
        "description": [
            "Gets the servers dedicated_hd1",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dedicated_hd1": {
        "name": "set_dedicated_hd1",
        "params": "$dedicated_hd1",
        "description": [
            "Sets the servers dedicated_hd1",
            "@param int $dedicated_hd1 the new dedicated_hd1",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getDedicatedHd2": {
        "name": "getDedicatedHd2",
        "params": "",
        "description": [
            "Gets the servers dedicated_hd2",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDedicatedHd2": {
        "name": "setDedicatedHd2",
        "params": "$dedicated_hd2",
        "description": [
            "Sets the servers dedicated_hd2",
            "@param int $dedicated_hd2 the new dedicated_hd2",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_dedicated_hd2": {
        "name": "get_dedicated_hd2",
        "params": "",
        "description": [
            "Gets the servers dedicated_hd2",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dedicated_hd2": {
        "name": "set_dedicated_hd2",
        "params": "$dedicated_hd2",
        "description": [
            "Sets the servers dedicated_hd2",
            "@param int $dedicated_hd2 the new dedicated_hd2",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getDedicatedBandwidth": {
        "name": "getDedicatedBandwidth",
        "params": "",
        "description": [
            "Gets the servers dedicated_bandwidth",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDedicatedBandwidth": {
        "name": "setDedicatedBandwidth",
        "params": "$dedicated_bandwidth",
        "description": [
            "Sets the servers dedicated_bandwidth",
            "@param int $dedicated_bandwidth the new dedicated_bandwidth",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_dedicated_bandwidth": {
        "name": "get_dedicated_bandwidth",
        "params": "",
        "description": [
            "Gets the servers dedicated_bandwidth",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dedicated_bandwidth": {
        "name": "set_dedicated_bandwidth",
        "params": "$dedicated_bandwidth",
        "description": [
            "Sets the servers dedicated_bandwidth",
            "@param int $dedicated_bandwidth the new dedicated_bandwidth",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getDedicatedIps": {
        "name": "getDedicatedIps",
        "params": "",
        "description": [
            "Gets the servers dedicated_ips",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDedicatedIps": {
        "name": "setDedicatedIps",
        "params": "$dedicated_ips",
        "description": [
            "Sets the servers dedicated_ips",
            "@param int $dedicated_ips the new dedicated_ips",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_dedicated_ips": {
        "name": "get_dedicated_ips",
        "params": "",
        "description": [
            "Gets the servers dedicated_ips",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dedicated_ips": {
        "name": "set_dedicated_ips",
        "params": "$dedicated_ips",
        "description": [
            "Sets the servers dedicated_ips",
            "@param int $dedicated_ips the new dedicated_ips",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getDedicatedOs": {
        "name": "getDedicatedOs",
        "params": "",
        "description": [
            "Gets the servers dedicated_os",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDedicatedOs": {
        "name": "setDedicatedOs",
        "params": "$dedicated_os",
        "description": [
            "Sets the servers dedicated_os",
            "@param int $dedicated_os the new dedicated_os",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_dedicated_os": {
        "name": "get_dedicated_os",
        "params": "",
        "description": [
            "Gets the servers dedicated_os",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dedicated_os": {
        "name": "set_dedicated_os",
        "params": "$dedicated_os",
        "description": [
            "Sets the servers dedicated_os",
            "@param int $dedicated_os the new dedicated_os",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getDedicatedCp": {
        "name": "getDedicatedCp",
        "params": "",
        "description": [
            "Gets the servers dedicated_cp",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDedicatedCp": {
        "name": "setDedicatedCp",
        "params": "$dedicated_cp",
        "description": [
            "Sets the servers dedicated_cp",
            "@param int $dedicated_cp the new dedicated_cp",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_dedicated_cp": {
        "name": "get_dedicated_cp",
        "params": "",
        "description": [
            "Gets the servers dedicated_cp",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dedicated_cp": {
        "name": "set_dedicated_cp",
        "params": "$dedicated_cp",
        "description": [
            "Sets the servers dedicated_cp",
            "@param int $dedicated_cp the new dedicated_cp",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getDedicatedRaid": {
        "name": "getDedicatedRaid",
        "params": "",
        "description": [
            "Gets the servers dedicated_raid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDedicatedRaid": {
        "name": "setDedicatedRaid",
        "params": "$dedicated_raid",
        "description": [
            "Sets the servers dedicated_raid",
            "@param string $dedicated_raid the new dedicated_raid",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "get_dedicated_raid": {
        "name": "get_dedicated_raid",
        "params": "",
        "description": [
            "Gets the servers dedicated_raid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_dedicated_raid": {
        "name": "set_dedicated_raid",
        "params": "$dedicated_raid",
        "description": [
            "Sets the servers dedicated_raid",
            "@param string $dedicated_raid the new dedicated_raid",
            "@return \\MyAdmin\\Orm\\Server"
        ],
        "fieldtexts": []
    },
    "getDId": {
        "name": "getDId",
        "params": "",
        "description": [
            "Gets the service_details d_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDId": {
        "name": "setDId",
        "params": "$d_id",
        "description": [
            "Sets the service_details d_id",
            "@param int $d_id the new d_id",
            "@return \\MyAdmin\\Orm\\Service_Detail"
        ],
        "fieldtexts": []
    },
    "get_d_id": {
        "name": "get_d_id",
        "params": "",
        "description": [
            "Gets the service_details d_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_d_id": {
        "name": "set_d_id",
        "params": "$d_id",
        "description": [
            "Sets the service_details d_id",
            "@param int $d_id the new d_id",
            "@return \\MyAdmin\\Orm\\Service_Detail"
        ],
        "fieldtexts": []
    },
    "getErvicesHtml": {
        "name": "getErvicesHtml",
        "params": "",
        "description": [
            "Gets the service_details ervices_html",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setErvicesHtml": {
        "name": "setErvicesHtml",
        "params": "$ervices_html",
        "description": [
            "Sets the service_details ervices_html",
            "@param mixed $ervices_html the new ervices_html",
            "@return \\MyAdmin\\Orm\\Service_Detail"
        ],
        "fieldtexts": []
    },
    "get_ervices_html": {
        "name": "get_ervices_html",
        "params": "",
        "description": [
            "Gets the service_details ervices_html",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_ervices_html": {
        "name": "set_ervices_html",
        "params": "$ervices_html",
        "description": [
            "Sets the service_details ervices_html",
            "@param mixed $ervices_html the new ervices_html",
            "@return \\MyAdmin\\Orm\\Service_Detail"
        ],
        "fieldtexts": []
    },
    "getErvicesDescription": {
        "name": "getErvicesDescription",
        "params": "",
        "description": [
            "Gets the service_details ervices_description",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setErvicesDescription": {
        "name": "setErvicesDescription",
        "params": "$ervices_description",
        "description": [
            "Sets the service_details ervices_description",
            "@param mixed $ervices_description the new ervices_description",
            "@return \\MyAdmin\\Orm\\Service_Detail"
        ],
        "fieldtexts": []
    },
    "get_ervices_description": {
        "name": "get_ervices_description",
        "params": "",
        "description": [
            "Gets the service_details ervices_description",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_ervices_description": {
        "name": "set_ervices_description",
        "params": "$ervices_description",
        "description": [
            "Sets the service_details ervices_description",
            "@param mixed $ervices_description the new ervices_description",
            "@return \\MyAdmin\\Orm\\Service_Detail"
        ],
        "fieldtexts": []
    },
    "getOurcost": {
        "name": "getOurcost",
        "params": "",
        "description": [
            "Gets the services ourcost",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setOurcost": {
        "name": "setOurcost",
        "params": "$ourcost",
        "description": [
            "Sets the services ourcost",
            "@param float $ourcost the new ourcost",
            "@return \\MyAdmin\\Orm\\Service"
        ],
        "fieldtexts": []
    },
    "get_ourcost": {
        "name": "get_ourcost",
        "params": "",
        "description": [
            "Gets the services ourcost",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_ourcost": {
        "name": "set_ourcost",
        "params": "$ourcost",
        "description": [
            "Sets the services ourcost",
            "@param float $ourcost the new ourcost",
            "@return \\MyAdmin\\Orm\\Service"
        ],
        "fieldtexts": []
    },
    "getBuyable": {
        "name": "getBuyable",
        "params": "",
        "description": [
            "Gets the services buyable",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setBuyable": {
        "name": "setBuyable",
        "params": "$buyable",
        "description": [
            "Sets the services buyable",
            "@param int $buyable the new buyable",
            "@return \\MyAdmin\\Orm\\Service"
        ],
        "fieldtexts": []
    },
    "get_buyable": {
        "name": "get_buyable",
        "params": "",
        "description": [
            "Gets the services buyable",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_buyable": {
        "name": "set_buyable",
        "params": "$buyable",
        "description": [
            "Sets the services buyable",
            "@param int $buyable the new buyable",
            "@return \\MyAdmin\\Orm\\Service"
        ],
        "fieldtexts": []
    },
    "getField1": {
        "name": "getField1",
        "params": "",
        "description": [
            "Gets the services field1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setField1": {
        "name": "setField1",
        "params": "$field1",
        "description": [
            "Sets the services field1",
            "@param string $field1 the new field1",
            "@return \\MyAdmin\\Orm\\Service"
        ],
        "fieldtexts": []
    },
    "get_field1": {
        "name": "get_field1",
        "params": "",
        "description": [
            "Gets the services field1",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_field1": {
        "name": "set_field1",
        "params": "$field1",
        "description": [
            "Sets the services field1",
            "@param string $field1 the new field1",
            "@return \\MyAdmin\\Orm\\Service"
        ],
        "fieldtexts": []
    },
    "getField2": {
        "name": "getField2",
        "params": "",
        "description": [
            "Gets the services field2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setField2": {
        "name": "setField2",
        "params": "$field2",
        "description": [
            "Sets the services field2",
            "@param string $field2 the new field2",
            "@return \\MyAdmin\\Orm\\Service"
        ],
        "fieldtexts": []
    },
    "get_field2": {
        "name": "get_field2",
        "params": "",
        "description": [
            "Gets the services field2",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_field2": {
        "name": "set_field2",
        "params": "$field2",
        "description": [
            "Sets the services field2",
            "@param string $field2 the new field2",
            "@return \\MyAdmin\\Orm\\Service"
        ],
        "fieldtexts": []
    },
    "getDepartment": {
        "name": "getDepartment",
        "params": "",
        "description": [
            "Gets the ssl_certs department",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDepartment": {
        "name": "setDepartment",
        "params": "$department",
        "description": [
            "Sets the ssl_certs department",
            "@param string $department the new department",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_department": {
        "name": "get_department",
        "params": "",
        "description": [
            "Gets the ssl_certs department",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_department": {
        "name": "set_department",
        "params": "$department",
        "description": [
            "Sets the ssl_certs department",
            "@param string $department the new department",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getApproverEmail": {
        "name": "getApproverEmail",
        "params": "",
        "description": [
            "Gets the ssl_certs approver_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApproverEmail": {
        "name": "setApproverEmail",
        "params": "$approver_email",
        "description": [
            "Sets the ssl_certs approver_email",
            "@param string $approver_email the new approver_email",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_approver_email": {
        "name": "get_approver_email",
        "params": "",
        "description": [
            "Gets the ssl_certs approver_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_approver_email": {
        "name": "set_approver_email",
        "params": "$approver_email",
        "description": [
            "Sets the ssl_certs approver_email",
            "@param string $approver_email the new approver_email",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getCsr": {
        "name": "getCsr",
        "params": "",
        "description": [
            "Gets the ssl_certs csr",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setCsr": {
        "name": "setCsr",
        "params": "$csr",
        "description": [
            "Sets the ssl_certs csr",
            "@param mixed $csr the new csr",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_csr": {
        "name": "get_csr",
        "params": "",
        "description": [
            "Gets the ssl_certs csr",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_csr": {
        "name": "set_csr",
        "params": "$csr",
        "description": [
            "Sets the ssl_certs csr",
            "@param mixed $csr the new csr",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getX509": {
        "name": "getX509",
        "params": "",
        "description": [
            "Gets the ssl_certs x509",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setX509": {
        "name": "setX509",
        "params": "$x509",
        "description": [
            "Sets the ssl_certs x509",
            "@param mixed $x509 the new x509",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_x509": {
        "name": "get_x509",
        "params": "",
        "description": [
            "Gets the ssl_certs x509",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_x509": {
        "name": "set_x509",
        "params": "$x509",
        "description": [
            "Sets the ssl_certs x509",
            "@param mixed $x509 the new x509",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getCaRoot": {
        "name": "getCaRoot",
        "params": "",
        "description": [
            "Gets the ssl_certs ca_root",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setCaRoot": {
        "name": "setCaRoot",
        "params": "$ca_root",
        "description": [
            "Sets the ssl_certs ca_root",
            "@param mixed $ca_root the new ca_root",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_ca_root": {
        "name": "get_ca_root",
        "params": "",
        "description": [
            "Gets the ssl_certs ca_root",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_ca_root": {
        "name": "set_ca_root",
        "params": "$ca_root",
        "description": [
            "Sets the ssl_certs ca_root",
            "@param mixed $ca_root the new ca_root",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getCaInter": {
        "name": "getCaInter",
        "params": "",
        "description": [
            "Gets the ssl_certs ca_inter",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setCaInter": {
        "name": "setCaInter",
        "params": "$ca_inter",
        "description": [
            "Sets the ssl_certs ca_inter",
            "@param mixed $ca_inter the new ca_inter",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "get_ca_inter": {
        "name": "get_ca_inter",
        "params": "",
        "description": [
            "Gets the ssl_certs ca_inter",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_ca_inter": {
        "name": "set_ca_inter",
        "params": "$ca_inter",
        "description": [
            "Sets the ssl_certs ca_inter",
            "@param mixed $ca_inter the new ca_inter",
            "@return \\MyAdmin\\Orm\\Ssl_Cert"
        ],
        "fieldtexts": []
    },
    "getSwitchid": {
        "name": "getSwitchid",
        "params": "",
        "description": [
            "Gets the switch_macs switchid",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSwitchid": {
        "name": "setSwitchid",
        "params": "$switchid",
        "description": [
            "Sets the switch_macs switchid",
            "@param int $switchid the new switchid",
            "@return \\MyAdmin\\Orm\\Switch_Mac"
        ],
        "fieldtexts": []
    },
    "get_switchid": {
        "name": "get_switchid",
        "params": "",
        "description": [
            "Gets the switch_macs switchid",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_switchid": {
        "name": "set_switchid",
        "params": "$switchid",
        "description": [
            "Sets the switch_macs switchid",
            "@param int $switchid the new switchid",
            "@return \\MyAdmin\\Orm\\Switch_Mac"
        ],
        "fieldtexts": []
    },
    "getPort": {
        "name": "getPort",
        "params": "",
        "description": [
            "Gets the switchports port",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setPort": {
        "name": "setPort",
        "params": "$port",
        "description": [
            "Sets the switchports port",
            "@param string $port the new port",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "get_port": {
        "name": "get_port",
        "params": "",
        "description": [
            "Gets the switchports port",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_port": {
        "name": "set_port",
        "params": "$port",
        "description": [
            "Sets the switchports port",
            "@param string $port the new port",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "getSwitchportId": {
        "name": "getSwitchportId",
        "params": "",
        "description": [
            "Gets the switchports switchport_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSwitchportId": {
        "name": "setSwitchportId",
        "params": "$switchport_id",
        "description": [
            "Sets the switchports switchport_id",
            "@param int $switchport_id the new switchport_id",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "get_switchport_id": {
        "name": "get_switchport_id",
        "params": "",
        "description": [
            "Gets the switchports switchport_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_switchport_id": {
        "name": "set_switchport_id",
        "params": "$switchport_id",
        "description": [
            "Sets the switchports switchport_id",
            "@param int $switchport_id the new switchport_id",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "getSwitch": {
        "name": "getSwitch",
        "params": "",
        "description": [
            "Gets the switchports switch",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setSwitch": {
        "name": "setSwitch",
        "params": "$switch",
        "description": [
            "Sets the switchports switch",
            "@param int $switch the new switch",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "get_switch": {
        "name": "get_switch",
        "params": "",
        "description": [
            "Gets the switchports switch",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_switch": {
        "name": "set_switch",
        "params": "$switch",
        "description": [
            "Sets the switchports switch",
            "@param int $switch the new switch",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "getBlade": {
        "name": "getBlade",
        "params": "",
        "description": [
            "Gets the switchports blade",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setBlade": {
        "name": "setBlade",
        "params": "$blade",
        "description": [
            "Sets the switchports blade",
            "@param string $blade the new blade",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "get_blade": {
        "name": "get_blade",
        "params": "",
        "description": [
            "Gets the switchports blade",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_blade": {
        "name": "set_blade",
        "params": "$blade",
        "description": [
            "Sets the switchports blade",
            "@param string $blade the new blade",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "getJustport": {
        "name": "getJustport",
        "params": "",
        "description": [
            "Gets the switchports justport",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setJustport": {
        "name": "setJustport",
        "params": "$justport",
        "description": [
            "Sets the switchports justport",
            "@param string $justport the new justport",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "get_justport": {
        "name": "get_justport",
        "params": "",
        "description": [
            "Gets the switchports justport",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_justport": {
        "name": "set_justport",
        "params": "$justport",
        "description": [
            "Sets the switchports justport",
            "@param string $justport the new justport",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "getGraphId": {
        "name": "getGraphId",
        "params": "",
        "description": [
            "Gets the switchports graph_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setGraphId": {
        "name": "setGraphId",
        "params": "$graph_id",
        "description": [
            "Sets the switchports graph_id",
            "@param int $graph_id the new graph_id",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "get_graph_id": {
        "name": "get_graph_id",
        "params": "",
        "description": [
            "Gets the switchports graph_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_graph_id": {
        "name": "set_graph_id",
        "params": "$graph_id",
        "description": [
            "Sets the switchports graph_id",
            "@param int $graph_id the new graph_id",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "getVlans": {
        "name": "getVlans",
        "params": "",
        "description": [
            "Gets the switchports vlans",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setVlans": {
        "name": "setVlans",
        "params": "$vlans",
        "description": [
            "Sets the switchports vlans",
            "@param string $vlans the new vlans",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "get_vlans": {
        "name": "get_vlans",
        "params": "",
        "description": [
            "Gets the switchports vlans",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_vlans": {
        "name": "set_vlans",
        "params": "$vlans",
        "description": [
            "Sets the switchports vlans",
            "@param string $vlans the new vlans",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "getServerId": {
        "name": "getServerId",
        "params": "",
        "description": [
            "Gets the switchports server_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setServerId": {
        "name": "setServerId",
        "params": "$server_id",
        "description": [
            "Sets the switchports server_id",
            "@param int $server_id the new server_id",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "get_server_id": {
        "name": "get_server_id",
        "params": "",
        "description": [
            "Gets the switchports server_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_server_id": {
        "name": "set_server_id",
        "params": "$server_id",
        "description": [
            "Sets the switchports server_id",
            "@param int $server_id the new server_id",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "getAssetId": {
        "name": "getAssetId",
        "params": "",
        "description": [
            "Gets the switchports asset_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setAssetId": {
        "name": "setAssetId",
        "params": "$asset_id",
        "description": [
            "Sets the switchports asset_id",
            "@param int $asset_id the new asset_id",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "get_asset_id": {
        "name": "get_asset_id",
        "params": "",
        "description": [
            "Gets the switchports asset_id",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_asset_id": {
        "name": "set_asset_id",
        "params": "$asset_id",
        "description": [
            "Sets the switchports asset_id",
            "@param int $asset_id the new asset_id",
            "@return \\MyAdmin\\Orm\\Switchport"
        ],
        "fieldtexts": []
    },
    "getTheme": {
        "name": "getTheme",
        "params": "",
        "description": [
            "Gets the templates theme",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTheme": {
        "name": "setTheme",
        "params": "$theme",
        "description": [
            "Sets the templates theme",
            "@param string $theme the new theme",
            "@return \\MyAdmin\\Orm\\Template"
        ],
        "fieldtexts": []
    },
    "get_theme": {
        "name": "get_theme",
        "params": "",
        "description": [
            "Gets the templates theme",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_theme": {
        "name": "set_theme",
        "params": "$theme",
        "description": [
            "Sets the templates theme",
            "@param string $theme the new theme",
            "@return \\MyAdmin\\Orm\\Template"
        ],
        "fieldtexts": []
    },
    "getTld": {
        "name": "getTld",
        "params": "",
        "description": [
            "Gets the tld_info tld",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTld": {
        "name": "setTld",
        "params": "$tld",
        "description": [
            "Sets the tld_info tld",
            "@param string $tld the new tld",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_tld": {
        "name": "get_tld",
        "params": "",
        "description": [
            "Gets the tld_info tld",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_tld": {
        "name": "set_tld",
        "params": "$tld",
        "description": [
            "Sets the tld_info tld",
            "@param string $tld the new tld",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getRegistry": {
        "name": "getRegistry",
        "params": "",
        "description": [
            "Gets the tld_info registry",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRegistry": {
        "name": "setRegistry",
        "params": "$registry",
        "description": [
            "Sets the tld_info registry",
            "@param string $registry the new registry",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_registry": {
        "name": "get_registry",
        "params": "",
        "description": [
            "Gets the tld_info registry",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_registry": {
        "name": "set_registry",
        "params": "$registry",
        "description": [
            "Sets the tld_info registry",
            "@param string $registry the new registry",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getTldType": {
        "name": "getTldType",
        "params": "",
        "description": [
            "Gets the tld_info tld_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTldType": {
        "name": "setTldType",
        "params": "$tld_type",
        "description": [
            "Sets the tld_info tld_type",
            "@param string $tld_type the new tld_type",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_tld_type": {
        "name": "get_tld_type",
        "params": "",
        "description": [
            "Gets the tld_info tld_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_tld_type": {
        "name": "set_tld_type",
        "params": "$tld_type",
        "description": [
            "Sets the tld_info tld_type",
            "@param string $tld_type the new tld_type",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getTechnicalProvider": {
        "name": "getTechnicalProvider",
        "params": "",
        "description": [
            "Gets the tld_info technical_provider",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTechnicalProvider": {
        "name": "setTechnicalProvider",
        "params": "$technical_provider",
        "description": [
            "Sets the tld_info technical_provider",
            "@param string $technical_provider the new technical_provider",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_technical_provider": {
        "name": "get_technical_provider",
        "params": "",
        "description": [
            "Gets the tld_info technical_provider",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_technical_provider": {
        "name": "set_technical_provider",
        "params": "$technical_provider",
        "description": [
            "Sets the tld_info technical_provider",
            "@param string $technical_provider the new technical_provider",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getRegLevelsOffered": {
        "name": "getRegLevelsOffered",
        "params": "",
        "description": [
            "Gets the tld_info reg_levels_offered",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRegLevelsOffered": {
        "name": "setRegLevelsOffered",
        "params": "$reg_levels_offered",
        "description": [
            "Sets the tld_info reg_levels_offered",
            "@param string $reg_levels_offered the new reg_levels_offered",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_reg_levels_offered": {
        "name": "get_reg_levels_offered",
        "params": "",
        "description": [
            "Gets the tld_info reg_levels_offered",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_reg_levels_offered": {
        "name": "set_reg_levels_offered",
        "params": "$reg_levels_offered",
        "description": [
            "Sets the tld_info reg_levels_offered",
            "@param string $reg_levels_offered the new reg_levels_offered",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getSpecialRequirements": {
        "name": "getSpecialRequirements",
        "params": "",
        "description": [
            "Gets the tld_info special_requirements",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSpecialRequirements": {
        "name": "setSpecialRequirements",
        "params": "$special_requirements",
        "description": [
            "Sets the tld_info special_requirements",
            "@param string $special_requirements the new special_requirements",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_special_requirements": {
        "name": "get_special_requirements",
        "params": "",
        "description": [
            "Gets the tld_info special_requirements",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_special_requirements": {
        "name": "set_special_requirements",
        "params": "$special_requirements",
        "description": [
            "Sets the tld_info special_requirements",
            "@param string $special_requirements the new special_requirements",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getNameLength": {
        "name": "getNameLength",
        "params": "",
        "description": [
            "Gets the tld_info name_length",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setNameLength": {
        "name": "setNameLength",
        "params": "$name_length",
        "description": [
            "Sets the tld_info name_length",
            "@param string $name_length the new name_length",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_name_length": {
        "name": "get_name_length",
        "params": "",
        "description": [
            "Gets the tld_info name_length",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_name_length": {
        "name": "set_name_length",
        "params": "$name_length",
        "description": [
            "Sets the tld_info name_length",
            "@param string $name_length the new name_length",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getSynchronous": {
        "name": "getSynchronous",
        "params": "",
        "description": [
            "Gets the tld_info synchronous",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setSynchronous": {
        "name": "setSynchronous",
        "params": "$synchronous",
        "description": [
            "Sets the tld_info synchronous",
            "@param string $synchronous the new synchronous",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_synchronous": {
        "name": "get_synchronous",
        "params": "",
        "description": [
            "Gets the tld_info synchronous",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_synchronous": {
        "name": "set_synchronous",
        "params": "$synchronous",
        "description": [
            "Sets the tld_info synchronous",
            "@param string $synchronous the new synchronous",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getDnsRequirements": {
        "name": "getDnsRequirements",
        "params": "",
        "description": [
            "Gets the tld_info dns_requirements",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDnsRequirements": {
        "name": "setDnsRequirements",
        "params": "$dns_requirements",
        "description": [
            "Sets the tld_info dns_requirements",
            "@param string $dns_requirements the new dns_requirements",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_dns_requirements": {
        "name": "get_dns_requirements",
        "params": "",
        "description": [
            "Gets the tld_info dns_requirements",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_dns_requirements": {
        "name": "set_dns_requirements",
        "params": "$dns_requirements",
        "description": [
            "Sets the tld_info dns_requirements",
            "@param string $dns_requirements the new dns_requirements",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getWhoisPrivacyAvailable": {
        "name": "getWhoisPrivacyAvailable",
        "params": "",
        "description": [
            "Gets the tld_info whois_privacy_available",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setWhoisPrivacyAvailable": {
        "name": "setWhoisPrivacyAvailable",
        "params": "$whois_privacy_available",
        "description": [
            "Sets the tld_info whois_privacy_available",
            "@param string $whois_privacy_available the new whois_privacy_available",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_whois_privacy_available": {
        "name": "get_whois_privacy_available",
        "params": "",
        "description": [
            "Gets the tld_info whois_privacy_available",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_whois_privacy_available": {
        "name": "set_whois_privacy_available",
        "params": "$whois_privacy_available",
        "description": [
            "Sets the tld_info whois_privacy_available",
            "@param string $whois_privacy_available the new whois_privacy_available",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getDomainLockingAvailable": {
        "name": "getDomainLockingAvailable",
        "params": "",
        "description": [
            "Gets the tld_info domain_locking_available",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDomainLockingAvailable": {
        "name": "setDomainLockingAvailable",
        "params": "$domain_locking_available",
        "description": [
            "Sets the tld_info domain_locking_available",
            "@param string $domain_locking_available the new domain_locking_available",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_domain_locking_available": {
        "name": "get_domain_locking_available",
        "params": "",
        "description": [
            "Gets the tld_info domain_locking_available",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_domain_locking_available": {
        "name": "set_domain_locking_available",
        "params": "$domain_locking_available",
        "description": [
            "Sets the tld_info domain_locking_available",
            "@param string $domain_locking_available the new domain_locking_available",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getDnssec": {
        "name": "getDnssec",
        "params": "",
        "description": [
            "Gets the tld_info dnssec",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDnssec": {
        "name": "setDnssec",
        "params": "$dnssec",
        "description": [
            "Sets the tld_info dnssec",
            "@param string $dnssec the new dnssec",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_dnssec": {
        "name": "get_dnssec",
        "params": "",
        "description": [
            "Gets the tld_info dnssec",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_dnssec": {
        "name": "set_dnssec",
        "params": "$dnssec",
        "description": [
            "Sets the tld_info dnssec",
            "@param string $dnssec the new dnssec",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getIdnsAvailable": {
        "name": "getIdnsAvailable",
        "params": "",
        "description": [
            "Gets the tld_info idns_available",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setIdnsAvailable": {
        "name": "setIdnsAvailable",
        "params": "$idns_available",
        "description": [
            "Sets the tld_info idns_available",
            "@param mixed $idns_available the new idns_available",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_idns_available": {
        "name": "get_idns_available",
        "params": "",
        "description": [
            "Gets the tld_info idns_available",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_idns_available": {
        "name": "set_idns_available",
        "params": "$idns_available",
        "description": [
            "Sets the tld_info idns_available",
            "@param mixed $idns_available the new idns_available",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getExplicitRenewal": {
        "name": "getExplicitRenewal",
        "params": "",
        "description": [
            "Gets the tld_info explicit_renewal",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setExplicitRenewal": {
        "name": "setExplicitRenewal",
        "params": "$explicit_renewal",
        "description": [
            "Sets the tld_info explicit_renewal",
            "@param string $explicit_renewal the new explicit_renewal",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_explicit_renewal": {
        "name": "get_explicit_renewal",
        "params": "",
        "description": [
            "Gets the tld_info explicit_renewal",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_explicit_renewal": {
        "name": "set_explicit_renewal",
        "params": "$explicit_renewal",
        "description": [
            "Sets the tld_info explicit_renewal",
            "@param string $explicit_renewal the new explicit_renewal",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getAutoRenewByDefault": {
        "name": "getAutoRenewByDefault",
        "params": "",
        "description": [
            "Gets the tld_info auto_renew_by_default",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAutoRenewByDefault": {
        "name": "setAutoRenewByDefault",
        "params": "$auto_renew_by_default",
        "description": [
            "Sets the tld_info auto_renew_by_default",
            "@param string $auto_renew_by_default the new auto_renew_by_default",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_auto_renew_by_default": {
        "name": "get_auto_renew_by_default",
        "params": "",
        "description": [
            "Gets the tld_info auto_renew_by_default",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_auto_renew_by_default": {
        "name": "set_auto_renew_by_default",
        "params": "$auto_renew_by_default",
        "description": [
            "Sets the tld_info auto_renew_by_default",
            "@param string $auto_renew_by_default the new auto_renew_by_default",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getAutoRenewDate": {
        "name": "getAutoRenewDate",
        "params": "",
        "description": [
            "Gets the tld_info auto_renew_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAutoRenewDate": {
        "name": "setAutoRenewDate",
        "params": "$auto_renew_date",
        "description": [
            "Sets the tld_info auto_renew_date",
            "@param string $auto_renew_date the new auto_renew_date",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_auto_renew_date": {
        "name": "get_auto_renew_date",
        "params": "",
        "description": [
            "Gets the tld_info auto_renew_date",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_auto_renew_date": {
        "name": "set_auto_renew_date",
        "params": "$auto_renew_date",
        "description": [
            "Sets the tld_info auto_renew_date",
            "@param string $auto_renew_date the new auto_renew_date",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getChangeRenew": {
        "name": "getChangeRenew",
        "params": "",
        "description": [
            "Gets the tld_info change_renew",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setChangeRenew": {
        "name": "setChangeRenew",
        "params": "$change_renew",
        "description": [
            "Sets the tld_info change_renew",
            "@param string $change_renew the new change_renew",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_change_renew": {
        "name": "get_change_renew",
        "params": "",
        "description": [
            "Gets the tld_info change_renew",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_change_renew": {
        "name": "set_change_renew",
        "params": "$change_renew",
        "description": [
            "Sets the tld_info change_renew",
            "@param string $change_renew the new change_renew",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getGracePeriod": {
        "name": "getGracePeriod",
        "params": "",
        "description": [
            "Gets the tld_info grace_period",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setGracePeriod": {
        "name": "setGracePeriod",
        "params": "$grace_period",
        "description": [
            "Sets the tld_info grace_period",
            "@param string $grace_period the new grace_period",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_grace_period": {
        "name": "get_grace_period",
        "params": "",
        "description": [
            "Gets the tld_info grace_period",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_grace_period": {
        "name": "set_grace_period",
        "params": "$grace_period",
        "description": [
            "Sets the tld_info grace_period",
            "@param string $grace_period the new grace_period",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getRedemptionPeriod": {
        "name": "getRedemptionPeriod",
        "params": "",
        "description": [
            "Gets the tld_info redemption_period",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRedemptionPeriod": {
        "name": "setRedemptionPeriod",
        "params": "$redemption_period",
        "description": [
            "Sets the tld_info redemption_period",
            "@param string $redemption_period the new redemption_period",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_redemption_period": {
        "name": "get_redemption_period",
        "params": "",
        "description": [
            "Gets the tld_info redemption_period",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_redemption_period": {
        "name": "set_redemption_period",
        "params": "$redemption_period",
        "description": [
            "Sets the tld_info redemption_period",
            "@param string $redemption_period the new redemption_period",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getTransfers": {
        "name": "getTransfers",
        "params": "",
        "description": [
            "Gets the tld_info transfers",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTransfers": {
        "name": "setTransfers",
        "params": "$transfers",
        "description": [
            "Sets the tld_info transfers",
            "@param string $transfers the new transfers",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_transfers": {
        "name": "get_transfers",
        "params": "",
        "description": [
            "Gets the tld_info transfers",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_transfers": {
        "name": "set_transfers",
        "params": "$transfers",
        "description": [
            "Sets the tld_info transfers",
            "@param string $transfers the new transfers",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getAuthcodeRequired": {
        "name": "getAuthcodeRequired",
        "params": "",
        "description": [
            "Gets the tld_info authcode_required",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAuthcodeRequired": {
        "name": "setAuthcodeRequired",
        "params": "$authcode_required",
        "description": [
            "Sets the tld_info authcode_required",
            "@param string $authcode_required the new authcode_required",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_authcode_required": {
        "name": "get_authcode_required",
        "params": "",
        "description": [
            "Gets the tld_info authcode_required",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_authcode_required": {
        "name": "set_authcode_required",
        "params": "$authcode_required",
        "description": [
            "Sets the tld_info authcode_required",
            "@param string $authcode_required the new authcode_required",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getAvailableInTestEnvironment": {
        "name": "getAvailableInTestEnvironment",
        "params": "",
        "description": [
            "Gets the tld_info available_in_test_environment",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setAvailableInTestEnvironment": {
        "name": "setAvailableInTestEnvironment",
        "params": "$available_in_test_environment",
        "description": [
            "Sets the tld_info available_in_test_environment",
            "@param string $available_in_test_environment the new available_in_test_environment",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_available_in_test_environment": {
        "name": "get_available_in_test_environment",
        "params": "",
        "description": [
            "Gets the tld_info available_in_test_environment",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_available_in_test_environment": {
        "name": "set_available_in_test_environment",
        "params": "$available_in_test_environment",
        "description": [
            "Sets the tld_info available_in_test_environment",
            "@param string $available_in_test_environment the new available_in_test_environment",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getRegistryPremiumsAllowed": {
        "name": "getRegistryPremiumsAllowed",
        "params": "",
        "description": [
            "Gets the tld_info registry_premiums_allowed",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setRegistryPremiumsAllowed": {
        "name": "setRegistryPremiumsAllowed",
        "params": "$registry_premiums_allowed",
        "description": [
            "Sets the tld_info registry_premiums_allowed",
            "@param string $registry_premiums_allowed the new registry_premiums_allowed",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_registry_premiums_allowed": {
        "name": "get_registry_premiums_allowed",
        "params": "",
        "description": [
            "Gets the tld_info registry_premiums_allowed",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_registry_premiums_allowed": {
        "name": "set_registry_premiums_allowed",
        "params": "$registry_premiums_allowed",
        "description": [
            "Sets the tld_info registry_premiums_allowed",
            "@param string $registry_premiums_allowed the new registry_premiums_allowed",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getApplicableRegistryPremiumGroup": {
        "name": "getApplicableRegistryPremiumGroup",
        "params": "",
        "description": [
            "Gets the tld_info applicable_registry_premium_group",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setApplicableRegistryPremiumGroup": {
        "name": "setApplicableRegistryPremiumGroup",
        "params": "$applicable_registry_premium_group",
        "description": [
            "Sets the tld_info applicable_registry_premium_group",
            "@param string $applicable_registry_premium_group the new applicable_registry_premium_group",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_applicable_registry_premium_group": {
        "name": "get_applicable_registry_premium_group",
        "params": "",
        "description": [
            "Gets the tld_info applicable_registry_premium_group",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_applicable_registry_premium_group": {
        "name": "set_applicable_registry_premium_group",
        "params": "$applicable_registry_premium_group",
        "description": [
            "Sets the tld_info applicable_registry_premium_group",
            "@param string $applicable_registry_premium_group the new applicable_registry_premium_group",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getTldPolicies": {
        "name": "getTldPolicies",
        "params": "",
        "description": [
            "Gets the tld_info tld_policies",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setTldPolicies": {
        "name": "setTldPolicies",
        "params": "$tld_policies",
        "description": [
            "Sets the tld_info tld_policies",
            "@param string $tld_policies the new tld_policies",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_tld_policies": {
        "name": "get_tld_policies",
        "params": "",
        "description": [
            "Gets the tld_info tld_policies",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_tld_policies": {
        "name": "set_tld_policies",
        "params": "$tld_policies",
        "description": [
            "Sets the tld_info tld_policies",
            "@param string $tld_policies the new tld_policies",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "getAdditionalInformation": {
        "name": "getAdditionalInformation",
        "params": "",
        "description": [
            "Gets the tld_info additional_information",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setAdditionalInformation": {
        "name": "setAdditionalInformation",
        "params": "$additional_information",
        "description": [
            "Sets the tld_info additional_information",
            "@param mixed $additional_information the new additional_information",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "get_additional_information": {
        "name": "get_additional_information",
        "params": "",
        "description": [
            "Gets the tld_info additional_information",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_additional_information": {
        "name": "set_additional_information",
        "params": "$additional_information",
        "description": [
            "Sets the tld_info additional_information",
            "@param mixed $additional_information the new additional_information",
            "@return \\MyAdmin\\Orm\\Tld_Info"
        ],
        "fieldtexts": []
    },
    "isOnTrialFor": {
        "name": "isOnTrialFor",
        "params": "$account_info, $type",
        "description": [
            "loads an table by id.  can be called statically",
            "@param array $account_info the clients ata aray or just an rray specificly of what you have fromeither of account_id and account_lid  or an ip",
            "@param string $type the type of problem to check if someone is on trial for",
            "@return Trial|bool false if  not on trial, otherwise retrurns an instance"
        ],
        "fieldtexts": []
    },
    "getStart": {
        "name": "getStart",
        "params": "",
        "description": [
            "Gets the trials start",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setStart": {
        "name": "setStart",
        "params": "$start",
        "description": [
            "Sets the trials start",
            "@param string $start the new start",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "get_start": {
        "name": "get_start",
        "params": "",
        "description": [
            "Gets the trials start",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_start": {
        "name": "set_start",
        "params": "$start",
        "description": [
            "Sets the trials start",
            "@param string $start the new start",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "getEnded": {
        "name": "getEnded",
        "params": "",
        "description": [
            "Gets the trials ended",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setEnded": {
        "name": "setEnded",
        "params": "$ended",
        "description": [
            "Sets the trials ended",
            "@param string $ended the new ended",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "get_ended": {
        "name": "get_ended",
        "params": "",
        "description": [
            "Gets the trials ended",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_ended": {
        "name": "set_ended",
        "params": "$ended",
        "description": [
            "Sets the trials ended",
            "@param string $ended the new ended",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "getFails": {
        "name": "getFails",
        "params": "",
        "description": [
            "Gets the trials fails",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setFails": {
        "name": "setFails",
        "params": "$fails",
        "description": [
            "Sets the trials fails",
            "@param int $fails the new fails",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "get_fails": {
        "name": "get_fails",
        "params": "",
        "description": [
            "Gets the trials fails",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_fails": {
        "name": "set_fails",
        "params": "$fails",
        "description": [
            "Sets the trials fails",
            "@param int $fails the new fails",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "getClientIp": {
        "name": "getClientIp",
        "params": "",
        "description": [
            "Gets the trials client_ip",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setClientIp": {
        "name": "setClientIp",
        "params": "$client_ip",
        "description": [
            "Sets the trials client_ip",
            "@param string $client_ip the new client_ip",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "get_client_ip": {
        "name": "get_client_ip",
        "params": "",
        "description": [
            "returns the clients ip address accounting for forwarded\/proxy addresses if from an allowed source",
            "@return string the clients ip address"
        ],
        "fieldtexts": []
    },
    "set_client_ip": {
        "name": "set_client_ip",
        "params": "$client_ip",
        "description": [
            "Sets the trials client_ip",
            "@param string $client_ip the new client_ip",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "getClientEmail": {
        "name": "getClientEmail",
        "params": "",
        "description": [
            "Gets the trials client_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setClientEmail": {
        "name": "setClientEmail",
        "params": "$client_email",
        "description": [
            "Sets the trials client_email",
            "@param string $client_email the new client_email",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "get_client_email": {
        "name": "get_client_email",
        "params": "",
        "description": [
            "Gets the trials client_email",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_client_email": {
        "name": "set_client_email",
        "params": "$client_email",
        "description": [
            "Sets the trials client_email",
            "@param string $client_email the new client_email",
            "@return \\MyAdmin\\Orm\\Trial"
        ],
        "fieldtexts": []
    },
    "getBlock": {
        "name": "getBlock",
        "params": "",
        "description": [
            "Gets the vlans block",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setBlock": {
        "name": "setBlock",
        "params": "$block",
        "description": [
            "Sets the vlans block",
            "@param int $block the new block",
            "@return \\MyAdmin\\Orm\\Vlan"
        ],
        "fieldtexts": []
    },
    "get_block": {
        "name": "get_block",
        "params": "$title, $data",
        "description": [
            "StatsGraph::get_block()",
            "@param mixed $title",
            "@param mixed $data",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_block": {
        "name": "set_block",
        "params": "$block",
        "description": [
            "Sets the vlans block",
            "@param int $block the new block",
            "@return \\MyAdmin\\Orm\\Vlan"
        ],
        "fieldtexts": []
    },
    "getNetworks": {
        "name": "getNetworks",
        "params": "",
        "description": [
            "Gets the vlans networks",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setNetworks": {
        "name": "setNetworks",
        "params": "$networks",
        "description": [
            "Sets the vlans networks",
            "@param string $networks the new networks",
            "@return \\MyAdmin\\Orm\\Vlan"
        ],
        "fieldtexts": []
    },
    "get_networks": {
        "name": "get_networks",
        "params": "",
        "description": [
            "Gets the vlans networks",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_networks": {
        "name": "set_networks",
        "params": "$networks",
        "description": [
            "Sets the vlans networks",
            "@param string $networks the new networks",
            "@return \\MyAdmin\\Orm\\Vlan"
        ],
        "fieldtexts": []
    },
    "getPrimary": {
        "name": "getPrimary",
        "params": "",
        "description": [
            "Gets the vlans primary",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPrimary": {
        "name": "setPrimary",
        "params": "$primary",
        "description": [
            "Sets the vlans primary",
            "@param int $primary the new primary",
            "@return \\MyAdmin\\Orm\\Vlan"
        ],
        "fieldtexts": []
    },
    "get_primary": {
        "name": "get_primary",
        "params": "",
        "description": [
            "Gets the vlans primary",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_primary": {
        "name": "set_primary",
        "params": "$primary",
        "description": [
            "Sets the vlans primary",
            "@param int $primary the new primary",
            "@return \\MyAdmin\\Orm\\Vlan"
        ],
        "fieldtexts": []
    },
    "getVps": {
        "name": "getVps",
        "params": "",
        "description": [
            "Gets the vps_shots vps",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setVps": {
        "name": "setVps",
        "params": "$vps",
        "description": [
            "Sets the vps_shots vps",
            "@param int $vps the new vps",
            "@return \\MyAdmin\\Orm\\Vps_Shot"
        ],
        "fieldtexts": []
    },
    "get_vps": {
        "name": "get_vps",
        "params": "",
        "description": [
            "Gets the vps_shots vps",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_vps": {
        "name": "set_vps",
        "params": "$vps",
        "description": [
            "Sets the vps_shots vps",
            "@param int $vps the new vps",
            "@return \\MyAdmin\\Orm\\Vps_Shot"
        ],
        "fieldtexts": []
    },
    "getIptext": {
        "name": "getIptext",
        "params": "",
        "description": [
            "Gets the vps_ips6 iptext",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setIptext": {
        "name": "setIptext",
        "params": "$iptext",
        "description": [
            "Sets the vps_ips6 iptext",
            "@param string $iptext the new iptext",
            "@return \\MyAdmin\\Orm\\Vps_Ips6"
        ],
        "fieldtexts": []
    },
    "get_iptext": {
        "name": "get_iptext",
        "params": "",
        "description": [
            "Gets the vps_ips6 iptext",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_iptext": {
        "name": "set_iptext",
        "params": "$iptext",
        "description": [
            "Sets the vps_ips6 iptext",
            "@param string $iptext the new iptext",
            "@return \\MyAdmin\\Orm\\Vps_Ips6"
        ],
        "fieldtexts": []
    },
    "getCpuAvg": {
        "name": "getCpuAvg",
        "params": "",
        "description": [
            "Gets the vps_master_details cpu_avg",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setCpuAvg": {
        "name": "setCpuAvg",
        "params": "$cpu_avg",
        "description": [
            "Sets the vps_master_details cpu_avg",
            "@param float $cpu_avg the new cpu_avg",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_cpu_avg": {
        "name": "get_cpu_avg",
        "params": "",
        "description": [
            "Gets the vps_master_details cpu_avg",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_cpu_avg": {
        "name": "set_cpu_avg",
        "params": "$cpu_avg",
        "description": [
            "Sets the vps_master_details cpu_avg",
            "@param float $cpu_avg the new cpu_avg",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getMemUsage": {
        "name": "getMemUsage",
        "params": "",
        "description": [
            "Gets the vps_master_details mem_usage",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setMemUsage": {
        "name": "setMemUsage",
        "params": "$mem_usage",
        "description": [
            "Sets the vps_master_details mem_usage",
            "@param string $mem_usage the new mem_usage",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_mem_usage": {
        "name": "get_mem_usage",
        "params": "",
        "description": [
            "Gets the vps_master_details mem_usage",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_mem_usage": {
        "name": "set_mem_usage",
        "params": "$mem_usage",
        "description": [
            "Sets the vps_master_details mem_usage",
            "@param string $mem_usage the new mem_usage",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getDistro": {
        "name": "getDistro",
        "params": "",
        "description": [
            "Gets the vps_master_details distro",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDistro": {
        "name": "setDistro",
        "params": "$distro",
        "description": [
            "Sets the vps_master_details distro",
            "@param string $distro the new distro",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_distro": {
        "name": "get_distro",
        "params": "",
        "description": [
            "Gets the vps_master_details distro",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_distro": {
        "name": "set_distro",
        "params": "$distro",
        "description": [
            "Sets the vps_master_details distro",
            "@param string $distro the new distro",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getDistroVersion": {
        "name": "getDistroVersion",
        "params": "",
        "description": [
            "Gets the vps_master_details distro_version",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDistroVersion": {
        "name": "setDistroVersion",
        "params": "$distro_version",
        "description": [
            "Sets the vps_master_details distro_version",
            "@param string $distro_version the new distro_version",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_distro_version": {
        "name": "get_distro_version",
        "params": "",
        "description": [
            "Gets the vps_master_details distro_version",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_distro_version": {
        "name": "set_distro_version",
        "params": "$distro_version",
        "description": [
            "Sets the vps_master_details distro_version",
            "@param string $distro_version the new distro_version",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getBytesSecIn": {
        "name": "getBytesSecIn",
        "params": "",
        "description": [
            "Gets the vps_master_details bytes_sec_in",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setBytesSecIn": {
        "name": "setBytesSecIn",
        "params": "$bytes_sec_in",
        "description": [
            "Sets the vps_master_details bytes_sec_in",
            "@param int $bytes_sec_in the new bytes_sec_in",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_bytes_sec_in": {
        "name": "get_bytes_sec_in",
        "params": "",
        "description": [
            "Gets the vps_master_details bytes_sec_in",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_bytes_sec_in": {
        "name": "set_bytes_sec_in",
        "params": "$bytes_sec_in",
        "description": [
            "Sets the vps_master_details bytes_sec_in",
            "@param int $bytes_sec_in the new bytes_sec_in",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getBytesSecOut": {
        "name": "getBytesSecOut",
        "params": "",
        "description": [
            "Gets the vps_master_details bytes_sec_out",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setBytesSecOut": {
        "name": "setBytesSecOut",
        "params": "$bytes_sec_out",
        "description": [
            "Sets the vps_master_details bytes_sec_out",
            "@param int $bytes_sec_out the new bytes_sec_out",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_bytes_sec_out": {
        "name": "get_bytes_sec_out",
        "params": "",
        "description": [
            "Gets the vps_master_details bytes_sec_out",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_bytes_sec_out": {
        "name": "set_bytes_sec_out",
        "params": "$bytes_sec_out",
        "description": [
            "Sets the vps_master_details bytes_sec_out",
            "@param int $bytes_sec_out the new bytes_sec_out",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getPacketsSecIn": {
        "name": "getPacketsSecIn",
        "params": "",
        "description": [
            "Gets the vps_master_details packets_sec_in",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPacketsSecIn": {
        "name": "setPacketsSecIn",
        "params": "$packets_sec_in",
        "description": [
            "Sets the vps_master_details packets_sec_in",
            "@param int $packets_sec_in the new packets_sec_in",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_packets_sec_in": {
        "name": "get_packets_sec_in",
        "params": "",
        "description": [
            "Gets the vps_master_details packets_sec_in",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_packets_sec_in": {
        "name": "set_packets_sec_in",
        "params": "$packets_sec_in",
        "description": [
            "Sets the vps_master_details packets_sec_in",
            "@param int $packets_sec_in the new packets_sec_in",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getPacketsSecOut": {
        "name": "getPacketsSecOut",
        "params": "",
        "description": [
            "Gets the vps_master_details packets_sec_out",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPacketsSecOut": {
        "name": "setPacketsSecOut",
        "params": "$packets_sec_out",
        "description": [
            "Sets the vps_master_details packets_sec_out",
            "@param int $packets_sec_out the new packets_sec_out",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_packets_sec_out": {
        "name": "get_packets_sec_out",
        "params": "",
        "description": [
            "Gets the vps_master_details packets_sec_out",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_packets_sec_out": {
        "name": "set_packets_sec_out",
        "params": "$packets_sec_out",
        "description": [
            "Sets the vps_master_details packets_sec_out",
            "@param int $packets_sec_out the new packets_sec_out",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getCpuUsage": {
        "name": "getCpuUsage",
        "params": "",
        "description": [
            "Gets the vps_stats cpu_usage",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setCpuUsage": {
        "name": "setCpuUsage",
        "params": "$cpu_usage",
        "description": [
            "Sets the vps_stats cpu_usage",
            "@param string $cpu_usage the new cpu_usage",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_cpu_usage": {
        "name": "get_cpu_usage",
        "params": "",
        "description": [
            "Gets the vps_stats cpu_usage",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_cpu_usage": {
        "name": "set_cpu_usage",
        "params": "$cpu_usage",
        "description": [
            "Sets the vps_stats cpu_usage",
            "@param string $cpu_usage the new cpu_usage",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getLastInstallTime": {
        "name": "getLastInstallTime",
        "params": "",
        "description": [
            "Gets the vps_master_details last_install_time",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setLastInstallTime": {
        "name": "setLastInstallTime",
        "params": "$last_install_time",
        "description": [
            "Sets the vps_master_details last_install_time",
            "@param int $last_install_time the new last_install_time",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "get_last_install_time": {
        "name": "get_last_install_time",
        "params": "",
        "description": [
            "Gets the vps_master_details last_install_time",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_last_install_time": {
        "name": "set_last_install_time",
        "params": "$last_install_time",
        "description": [
            "Sets the vps_master_details last_install_time",
            "@param int $last_install_time the new last_install_time",
            "@return \\MyAdmin\\Orm\\Vps_Master_Detail"
        ],
        "fieldtexts": []
    },
    "getRaidBuilding": {
        "name": "getRaidBuilding",
        "params": "",
        "description": [
            "Gets the vps_masters raid_building",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setRaidBuilding": {
        "name": "setRaidBuilding",
        "params": "$raid_building",
        "description": [
            "Sets the vps_masters raid_building",
            "@param int $raid_building the new raid_building",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_raid_building": {
        "name": "get_raid_building",
        "params": "",
        "description": [
            "Gets the vps_masters raid_building",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_raid_building": {
        "name": "set_raid_building",
        "params": "$raid_building",
        "description": [
            "Sets the vps_masters raid_building",
            "@param int $raid_building the new raid_building",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getKernel": {
        "name": "getKernel",
        "params": "",
        "description": [
            "Gets the vps_masters kernel",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setKernel": {
        "name": "setKernel",
        "params": "$kernel",
        "description": [
            "Sets the vps_masters kernel",
            "@param string $kernel the new kernel",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_kernel": {
        "name": "get_kernel",
        "params": "",
        "description": [
            "Gets the vps_masters kernel",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_kernel": {
        "name": "set_kernel",
        "params": "$kernel",
        "description": [
            "Sets the vps_masters kernel",
            "@param string $kernel the new kernel",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getServerMax": {
        "name": "getServerMax",
        "params": "",
        "description": [
            "Gets the vps_masters server_max",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setServerMax": {
        "name": "setServerMax",
        "params": "$server_max",
        "description": [
            "Sets the vps_masters server_max",
            "@param int $server_max the new server_max",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_server_max": {
        "name": "get_server_max",
        "params": "",
        "description": [
            "Gets the vps_masters server_max",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_server_max": {
        "name": "set_server_max",
        "params": "$server_max",
        "description": [
            "Sets the vps_masters server_max",
            "@param int $server_max the new server_max",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getServerMaxSlices": {
        "name": "getServerMaxSlices",
        "params": "",
        "description": [
            "Gets the vps_masters server_max_slices",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setServerMaxSlices": {
        "name": "setServerMaxSlices",
        "params": "$server_max_slices",
        "description": [
            "Sets the vps_masters server_max_slices",
            "@param int $server_max_slices the new server_max_slices",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "get_server_max_slices": {
        "name": "get_server_max_slices",
        "params": "",
        "description": [
            "Gets the vps_masters server_max_slices",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_server_max_slices": {
        "name": "set_server_max_slices",
        "params": "$server_max_slices",
        "description": [
            "Sets the vps_masters server_max_slices",
            "@param int $server_max_slices the new server_max_slices",
            "@return \\MyAdmin\\Orm\\Vps_Master"
        ],
        "fieldtexts": []
    },
    "getDiskused": {
        "name": "getDiskused",
        "params": "",
        "description": [
            "Gets the vps diskused",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDiskused": {
        "name": "setDiskused",
        "params": "$diskused",
        "description": [
            "Sets the vps diskused",
            "@param int $diskused the new diskused",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "get_diskused": {
        "name": "get_diskused",
        "params": "",
        "description": [
            "Gets the vps diskused",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_diskused": {
        "name": "set_diskused",
        "params": "$diskused",
        "description": [
            "Sets the vps diskused",
            "@param int $diskused the new diskused",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "getDiskmax": {
        "name": "getDiskmax",
        "params": "",
        "description": [
            "Gets the vps diskmax",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDiskmax": {
        "name": "setDiskmax",
        "params": "$diskmax",
        "description": [
            "Sets the vps diskmax",
            "@param int $diskmax the new diskmax",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "get_diskmax": {
        "name": "get_diskmax",
        "params": "",
        "description": [
            "Gets the vps diskmax",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_diskmax": {
        "name": "set_diskmax",
        "params": "$diskmax",
        "description": [
            "Sets the vps diskmax",
            "@param int $diskmax the new diskmax",
            "@return \\MyAdmin\\Orm\\Vps"
        ],
        "fieldtexts": []
    },
    "getNumproc": {
        "name": "getNumproc",
        "params": "",
        "description": [
            "Gets the vps_stats numproc",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumproc": {
        "name": "setNumproc",
        "params": "$numproc",
        "description": [
            "Sets the vps_stats numproc",
            "@param int $numproc the new numproc",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numproc": {
        "name": "get_numproc",
        "params": "",
        "description": [
            "Gets the vps_stats numproc",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numproc": {
        "name": "set_numproc",
        "params": "$numproc",
        "description": [
            "Sets the vps_stats numproc",
            "@param int $numproc the new numproc",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getKmemsize": {
        "name": "getKmemsize",
        "params": "",
        "description": [
            "Gets the vps_stats kmemsize",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setKmemsize": {
        "name": "setKmemsize",
        "params": "$kmemsize",
        "description": [
            "Sets the vps_stats kmemsize",
            "@param int $kmemsize the new kmemsize",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_kmemsize": {
        "name": "get_kmemsize",
        "params": "",
        "description": [
            "Gets the vps_stats kmemsize",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_kmemsize": {
        "name": "set_kmemsize",
        "params": "$kmemsize",
        "description": [
            "Sets the vps_stats kmemsize",
            "@param int $kmemsize the new kmemsize",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getKmemsizeF": {
        "name": "getKmemsizeF",
        "params": "",
        "description": [
            "Gets the vps_stats kmemsize_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setKmemsizeF": {
        "name": "setKmemsizeF",
        "params": "$kmemsize_f",
        "description": [
            "Sets the vps_stats kmemsize_f",
            "@param int $kmemsize_f the new kmemsize_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_kmemsize_f": {
        "name": "get_kmemsize_f",
        "params": "",
        "description": [
            "Gets the vps_stats kmemsize_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_kmemsize_f": {
        "name": "set_kmemsize_f",
        "params": "$kmemsize_f",
        "description": [
            "Sets the vps_stats kmemsize_f",
            "@param int $kmemsize_f the new kmemsize_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getLockedpages": {
        "name": "getLockedpages",
        "params": "",
        "description": [
            "Gets the vps_stats lockedpages",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setLockedpages": {
        "name": "setLockedpages",
        "params": "$lockedpages",
        "description": [
            "Sets the vps_stats lockedpages",
            "@param int $lockedpages the new lockedpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_lockedpages": {
        "name": "get_lockedpages",
        "params": "",
        "description": [
            "Gets the vps_stats lockedpages",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_lockedpages": {
        "name": "set_lockedpages",
        "params": "$lockedpages",
        "description": [
            "Sets the vps_stats lockedpages",
            "@param int $lockedpages the new lockedpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getLockedpagesF": {
        "name": "getLockedpagesF",
        "params": "",
        "description": [
            "Gets the vps_stats lockedpages_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setLockedpagesF": {
        "name": "setLockedpagesF",
        "params": "$lockedpages_f",
        "description": [
            "Sets the vps_stats lockedpages_f",
            "@param int $lockedpages_f the new lockedpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_lockedpages_f": {
        "name": "get_lockedpages_f",
        "params": "",
        "description": [
            "Gets the vps_stats lockedpages_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_lockedpages_f": {
        "name": "set_lockedpages_f",
        "params": "$lockedpages_f",
        "description": [
            "Sets the vps_stats lockedpages_f",
            "@param int $lockedpages_f the new lockedpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getPrivvmpages": {
        "name": "getPrivvmpages",
        "params": "",
        "description": [
            "Gets the vps_stats privvmpages",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setPrivvmpages": {
        "name": "setPrivvmpages",
        "params": "$privvmpages",
        "description": [
            "Sets the vps_stats privvmpages",
            "@param mixed $privvmpages the new privvmpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_privvmpages": {
        "name": "get_privvmpages",
        "params": "",
        "description": [
            "Gets the vps_stats privvmpages",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_privvmpages": {
        "name": "set_privvmpages",
        "params": "$privvmpages",
        "description": [
            "Sets the vps_stats privvmpages",
            "@param mixed $privvmpages the new privvmpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getPrivvmpagesF": {
        "name": "getPrivvmpagesF",
        "params": "",
        "description": [
            "Gets the vps_stats privvmpages_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPrivvmpagesF": {
        "name": "setPrivvmpagesF",
        "params": "$privvmpages_f",
        "description": [
            "Sets the vps_stats privvmpages_f",
            "@param int $privvmpages_f the new privvmpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_privvmpages_f": {
        "name": "get_privvmpages_f",
        "params": "",
        "description": [
            "Gets the vps_stats privvmpages_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_privvmpages_f": {
        "name": "set_privvmpages_f",
        "params": "$privvmpages_f",
        "description": [
            "Sets the vps_stats privvmpages_f",
            "@param int $privvmpages_f the new privvmpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getShmpages": {
        "name": "getShmpages",
        "params": "",
        "description": [
            "Gets the vps_stats shmpages",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setShmpages": {
        "name": "setShmpages",
        "params": "$shmpages",
        "description": [
            "Sets the vps_stats shmpages",
            "@param mixed $shmpages the new shmpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_shmpages": {
        "name": "get_shmpages",
        "params": "",
        "description": [
            "Gets the vps_stats shmpages",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_shmpages": {
        "name": "set_shmpages",
        "params": "$shmpages",
        "description": [
            "Sets the vps_stats shmpages",
            "@param mixed $shmpages the new shmpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getShmpagesF": {
        "name": "getShmpagesF",
        "params": "",
        "description": [
            "Gets the vps_stats shmpages_f",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setShmpagesF": {
        "name": "setShmpagesF",
        "params": "$shmpages_f",
        "description": [
            "Sets the vps_stats shmpages_f",
            "@param mixed $shmpages_f the new shmpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_shmpages_f": {
        "name": "get_shmpages_f",
        "params": "",
        "description": [
            "Gets the vps_stats shmpages_f",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_shmpages_f": {
        "name": "set_shmpages_f",
        "params": "$shmpages_f",
        "description": [
            "Sets the vps_stats shmpages_f",
            "@param mixed $shmpages_f the new shmpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumprocF": {
        "name": "getNumprocF",
        "params": "",
        "description": [
            "Gets the vps_stats numproc_f",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setNumprocF": {
        "name": "setNumprocF",
        "params": "$numproc_f",
        "description": [
            "Sets the vps_stats numproc_f",
            "@param mixed $numproc_f the new numproc_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numproc_f": {
        "name": "get_numproc_f",
        "params": "",
        "description": [
            "Gets the vps_stats numproc_f",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_numproc_f": {
        "name": "set_numproc_f",
        "params": "$numproc_f",
        "description": [
            "Sets the vps_stats numproc_f",
            "@param mixed $numproc_f the new numproc_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getPhyspages": {
        "name": "getPhyspages",
        "params": "",
        "description": [
            "Gets the vps_stats physpages",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setPhyspages": {
        "name": "setPhyspages",
        "params": "$physpages",
        "description": [
            "Sets the vps_stats physpages",
            "@param mixed $physpages the new physpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_physpages": {
        "name": "get_physpages",
        "params": "",
        "description": [
            "Gets the vps_stats physpages",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_physpages": {
        "name": "set_physpages",
        "params": "$physpages",
        "description": [
            "Sets the vps_stats physpages",
            "@param mixed $physpages the new physpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getPhyspagesF": {
        "name": "getPhyspagesF",
        "params": "",
        "description": [
            "Gets the vps_stats physpages_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setPhyspagesF": {
        "name": "setPhyspagesF",
        "params": "$physpages_f",
        "description": [
            "Sets the vps_stats physpages_f",
            "@param int $physpages_f the new physpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_physpages_f": {
        "name": "get_physpages_f",
        "params": "",
        "description": [
            "Gets the vps_stats physpages_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_physpages_f": {
        "name": "set_physpages_f",
        "params": "$physpages_f",
        "description": [
            "Sets the vps_stats physpages_f",
            "@param int $physpages_f the new physpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getVmguarpages": {
        "name": "getVmguarpages",
        "params": "",
        "description": [
            "Gets the vps_stats vmguarpages",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setVmguarpages": {
        "name": "setVmguarpages",
        "params": "$vmguarpages",
        "description": [
            "Sets the vps_stats vmguarpages",
            "@param int $vmguarpages the new vmguarpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_vmguarpages": {
        "name": "get_vmguarpages",
        "params": "",
        "description": [
            "Gets the vps_stats vmguarpages",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_vmguarpages": {
        "name": "set_vmguarpages",
        "params": "$vmguarpages",
        "description": [
            "Sets the vps_stats vmguarpages",
            "@param int $vmguarpages the new vmguarpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getVmguarpagesF": {
        "name": "getVmguarpagesF",
        "params": "",
        "description": [
            "Gets the vps_stats vmguarpages_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setVmguarpagesF": {
        "name": "setVmguarpagesF",
        "params": "$vmguarpages_f",
        "description": [
            "Sets the vps_stats vmguarpages_f",
            "@param int $vmguarpages_f the new vmguarpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_vmguarpages_f": {
        "name": "get_vmguarpages_f",
        "params": "",
        "description": [
            "Gets the vps_stats vmguarpages_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_vmguarpages_f": {
        "name": "set_vmguarpages_f",
        "params": "$vmguarpages_f",
        "description": [
            "Sets the vps_stats vmguarpages_f",
            "@param int $vmguarpages_f the new vmguarpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getOomguarpages": {
        "name": "getOomguarpages",
        "params": "",
        "description": [
            "Gets the vps_stats oomguarpages",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setOomguarpages": {
        "name": "setOomguarpages",
        "params": "$oomguarpages",
        "description": [
            "Sets the vps_stats oomguarpages",
            "@param mixed $oomguarpages the new oomguarpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_oomguarpages": {
        "name": "get_oomguarpages",
        "params": "",
        "description": [
            "Gets the vps_stats oomguarpages",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_oomguarpages": {
        "name": "set_oomguarpages",
        "params": "$oomguarpages",
        "description": [
            "Sets the vps_stats oomguarpages",
            "@param mixed $oomguarpages the new oomguarpages",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getOomguarpagesF": {
        "name": "getOomguarpagesF",
        "params": "",
        "description": [
            "Gets the vps_stats oomguarpages_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setOomguarpagesF": {
        "name": "setOomguarpagesF",
        "params": "$oomguarpages_f",
        "description": [
            "Sets the vps_stats oomguarpages_f",
            "@param int $oomguarpages_f the new oomguarpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_oomguarpages_f": {
        "name": "get_oomguarpages_f",
        "params": "",
        "description": [
            "Gets the vps_stats oomguarpages_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_oomguarpages_f": {
        "name": "set_oomguarpages_f",
        "params": "$oomguarpages_f",
        "description": [
            "Sets the vps_stats oomguarpages_f",
            "@param int $oomguarpages_f the new oomguarpages_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumtcpsock": {
        "name": "getNumtcpsock",
        "params": "",
        "description": [
            "Gets the vps_stats numtcpsock",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumtcpsock": {
        "name": "setNumtcpsock",
        "params": "$numtcpsock",
        "description": [
            "Sets the vps_stats numtcpsock",
            "@param int $numtcpsock the new numtcpsock",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numtcpsock": {
        "name": "get_numtcpsock",
        "params": "",
        "description": [
            "Gets the vps_stats numtcpsock",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numtcpsock": {
        "name": "set_numtcpsock",
        "params": "$numtcpsock",
        "description": [
            "Sets the vps_stats numtcpsock",
            "@param int $numtcpsock the new numtcpsock",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumtcpsockF": {
        "name": "getNumtcpsockF",
        "params": "",
        "description": [
            "Gets the vps_stats numtcpsock_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumtcpsockF": {
        "name": "setNumtcpsockF",
        "params": "$numtcpsock_f",
        "description": [
            "Sets the vps_stats numtcpsock_f",
            "@param int $numtcpsock_f the new numtcpsock_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numtcpsock_f": {
        "name": "get_numtcpsock_f",
        "params": "",
        "description": [
            "Gets the vps_stats numtcpsock_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numtcpsock_f": {
        "name": "set_numtcpsock_f",
        "params": "$numtcpsock_f",
        "description": [
            "Sets the vps_stats numtcpsock_f",
            "@param int $numtcpsock_f the new numtcpsock_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumflock": {
        "name": "getNumflock",
        "params": "",
        "description": [
            "Gets the vps_stats numflock",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumflock": {
        "name": "setNumflock",
        "params": "$numflock",
        "description": [
            "Sets the vps_stats numflock",
            "@param int $numflock the new numflock",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numflock": {
        "name": "get_numflock",
        "params": "",
        "description": [
            "Gets the vps_stats numflock",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numflock": {
        "name": "set_numflock",
        "params": "$numflock",
        "description": [
            "Sets the vps_stats numflock",
            "@param int $numflock the new numflock",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumflockF": {
        "name": "getNumflockF",
        "params": "",
        "description": [
            "Gets the vps_stats numflock_f",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setNumflockF": {
        "name": "setNumflockF",
        "params": "$numflock_f",
        "description": [
            "Sets the vps_stats numflock_f",
            "@param mixed $numflock_f the new numflock_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numflock_f": {
        "name": "get_numflock_f",
        "params": "",
        "description": [
            "Gets the vps_stats numflock_f",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_numflock_f": {
        "name": "set_numflock_f",
        "params": "$numflock_f",
        "description": [
            "Sets the vps_stats numflock_f",
            "@param mixed $numflock_f the new numflock_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumpty": {
        "name": "getNumpty",
        "params": "",
        "description": [
            "Gets the vps_stats numpty",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumpty": {
        "name": "setNumpty",
        "params": "$numpty",
        "description": [
            "Sets the vps_stats numpty",
            "@param int $numpty the new numpty",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numpty": {
        "name": "get_numpty",
        "params": "",
        "description": [
            "Gets the vps_stats numpty",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numpty": {
        "name": "set_numpty",
        "params": "$numpty",
        "description": [
            "Sets the vps_stats numpty",
            "@param int $numpty the new numpty",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumptyF": {
        "name": "getNumptyF",
        "params": "",
        "description": [
            "Gets the vps_stats numpty_f",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setNumptyF": {
        "name": "setNumptyF",
        "params": "$numpty_f",
        "description": [
            "Sets the vps_stats numpty_f",
            "@param mixed $numpty_f the new numpty_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numpty_f": {
        "name": "get_numpty_f",
        "params": "",
        "description": [
            "Gets the vps_stats numpty_f",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_numpty_f": {
        "name": "set_numpty_f",
        "params": "$numpty_f",
        "description": [
            "Sets the vps_stats numpty_f",
            "@param mixed $numpty_f the new numpty_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumsiginfo": {
        "name": "getNumsiginfo",
        "params": "",
        "description": [
            "Gets the vps_stats numsiginfo",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumsiginfo": {
        "name": "setNumsiginfo",
        "params": "$numsiginfo",
        "description": [
            "Sets the vps_stats numsiginfo",
            "@param int $numsiginfo the new numsiginfo",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numsiginfo": {
        "name": "get_numsiginfo",
        "params": "",
        "description": [
            "Gets the vps_stats numsiginfo",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numsiginfo": {
        "name": "set_numsiginfo",
        "params": "$numsiginfo",
        "description": [
            "Sets the vps_stats numsiginfo",
            "@param int $numsiginfo the new numsiginfo",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumsiginfoF": {
        "name": "getNumsiginfoF",
        "params": "",
        "description": [
            "Gets the vps_stats numsiginfo_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumsiginfoF": {
        "name": "setNumsiginfoF",
        "params": "$numsiginfo_f",
        "description": [
            "Sets the vps_stats numsiginfo_f",
            "@param int $numsiginfo_f the new numsiginfo_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numsiginfo_f": {
        "name": "get_numsiginfo_f",
        "params": "",
        "description": [
            "Gets the vps_stats numsiginfo_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numsiginfo_f": {
        "name": "set_numsiginfo_f",
        "params": "$numsiginfo_f",
        "description": [
            "Sets the vps_stats numsiginfo_f",
            "@param int $numsiginfo_f the new numsiginfo_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getTcpsndbuf": {
        "name": "getTcpsndbuf",
        "params": "",
        "description": [
            "Gets the vps_stats tcpsndbuf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setTcpsndbuf": {
        "name": "setTcpsndbuf",
        "params": "$tcpsndbuf",
        "description": [
            "Sets the vps_stats tcpsndbuf",
            "@param int $tcpsndbuf the new tcpsndbuf",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_tcpsndbuf": {
        "name": "get_tcpsndbuf",
        "params": "",
        "description": [
            "Gets the vps_stats tcpsndbuf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_tcpsndbuf": {
        "name": "set_tcpsndbuf",
        "params": "$tcpsndbuf",
        "description": [
            "Sets the vps_stats tcpsndbuf",
            "@param int $tcpsndbuf the new tcpsndbuf",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getTcpsndbufF": {
        "name": "getTcpsndbufF",
        "params": "",
        "description": [
            "Gets the vps_stats tcpsndbuf_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setTcpsndbufF": {
        "name": "setTcpsndbufF",
        "params": "$tcpsndbuf_f",
        "description": [
            "Sets the vps_stats tcpsndbuf_f",
            "@param int $tcpsndbuf_f the new tcpsndbuf_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_tcpsndbuf_f": {
        "name": "get_tcpsndbuf_f",
        "params": "",
        "description": [
            "Gets the vps_stats tcpsndbuf_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_tcpsndbuf_f": {
        "name": "set_tcpsndbuf_f",
        "params": "$tcpsndbuf_f",
        "description": [
            "Sets the vps_stats tcpsndbuf_f",
            "@param int $tcpsndbuf_f the new tcpsndbuf_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getTcprcvbuf": {
        "name": "getTcprcvbuf",
        "params": "",
        "description": [
            "Gets the vps_stats tcprcvbuf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setTcprcvbuf": {
        "name": "setTcprcvbuf",
        "params": "$tcprcvbuf",
        "description": [
            "Sets the vps_stats tcprcvbuf",
            "@param int $tcprcvbuf the new tcprcvbuf",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_tcprcvbuf": {
        "name": "get_tcprcvbuf",
        "params": "",
        "description": [
            "Gets the vps_stats tcprcvbuf",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_tcprcvbuf": {
        "name": "set_tcprcvbuf",
        "params": "$tcprcvbuf",
        "description": [
            "Sets the vps_stats tcprcvbuf",
            "@param int $tcprcvbuf the new tcprcvbuf",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getTcprcvbufF": {
        "name": "getTcprcvbufF",
        "params": "",
        "description": [
            "Gets the vps_stats tcprcvbuf_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setTcprcvbufF": {
        "name": "setTcprcvbufF",
        "params": "$tcprcvbuf_f",
        "description": [
            "Sets the vps_stats tcprcvbuf_f",
            "@param int $tcprcvbuf_f the new tcprcvbuf_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_tcprcvbuf_f": {
        "name": "get_tcprcvbuf_f",
        "params": "",
        "description": [
            "Gets the vps_stats tcprcvbuf_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_tcprcvbuf_f": {
        "name": "set_tcprcvbuf_f",
        "params": "$tcprcvbuf_f",
        "description": [
            "Sets the vps_stats tcprcvbuf_f",
            "@param int $tcprcvbuf_f the new tcprcvbuf_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getOthersockbuf": {
        "name": "getOthersockbuf",
        "params": "",
        "description": [
            "Gets the vps_stats othersockbuf",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setOthersockbuf": {
        "name": "setOthersockbuf",
        "params": "$othersockbuf",
        "description": [
            "Sets the vps_stats othersockbuf",
            "@param mixed $othersockbuf the new othersockbuf",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_othersockbuf": {
        "name": "get_othersockbuf",
        "params": "",
        "description": [
            "Gets the vps_stats othersockbuf",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_othersockbuf": {
        "name": "set_othersockbuf",
        "params": "$othersockbuf",
        "description": [
            "Sets the vps_stats othersockbuf",
            "@param mixed $othersockbuf the new othersockbuf",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getOthersockbufF": {
        "name": "getOthersockbufF",
        "params": "",
        "description": [
            "Gets the vps_stats othersockbuf_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setOthersockbufF": {
        "name": "setOthersockbufF",
        "params": "$othersockbuf_f",
        "description": [
            "Sets the vps_stats othersockbuf_f",
            "@param int $othersockbuf_f the new othersockbuf_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_othersockbuf_f": {
        "name": "get_othersockbuf_f",
        "params": "",
        "description": [
            "Gets the vps_stats othersockbuf_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_othersockbuf_f": {
        "name": "set_othersockbuf_f",
        "params": "$othersockbuf_f",
        "description": [
            "Sets the vps_stats othersockbuf_f",
            "@param int $othersockbuf_f the new othersockbuf_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDgramrcvbuf": {
        "name": "getDgramrcvbuf",
        "params": "",
        "description": [
            "Gets the vps_stats dgramrcvbuf",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setDgramrcvbuf": {
        "name": "setDgramrcvbuf",
        "params": "$dgramrcvbuf",
        "description": [
            "Sets the vps_stats dgramrcvbuf",
            "@param mixed $dgramrcvbuf the new dgramrcvbuf",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_dgramrcvbuf": {
        "name": "get_dgramrcvbuf",
        "params": "",
        "description": [
            "Gets the vps_stats dgramrcvbuf",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_dgramrcvbuf": {
        "name": "set_dgramrcvbuf",
        "params": "$dgramrcvbuf",
        "description": [
            "Sets the vps_stats dgramrcvbuf",
            "@param mixed $dgramrcvbuf the new dgramrcvbuf",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDgramrcvbufF": {
        "name": "getDgramrcvbufF",
        "params": "",
        "description": [
            "Gets the vps_stats dgramrcvbuf_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDgramrcvbufF": {
        "name": "setDgramrcvbufF",
        "params": "$dgramrcvbuf_f",
        "description": [
            "Sets the vps_stats dgramrcvbuf_f",
            "@param int $dgramrcvbuf_f the new dgramrcvbuf_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_dgramrcvbuf_f": {
        "name": "get_dgramrcvbuf_f",
        "params": "",
        "description": [
            "Gets the vps_stats dgramrcvbuf_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dgramrcvbuf_f": {
        "name": "set_dgramrcvbuf_f",
        "params": "$dgramrcvbuf_f",
        "description": [
            "Sets the vps_stats dgramrcvbuf_f",
            "@param int $dgramrcvbuf_f the new dgramrcvbuf_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumothersock": {
        "name": "getNumothersock",
        "params": "",
        "description": [
            "Gets the vps_stats numothersock",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumothersock": {
        "name": "setNumothersock",
        "params": "$numothersock",
        "description": [
            "Sets the vps_stats numothersock",
            "@param int $numothersock the new numothersock",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numothersock": {
        "name": "get_numothersock",
        "params": "",
        "description": [
            "Gets the vps_stats numothersock",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numothersock": {
        "name": "set_numothersock",
        "params": "$numothersock",
        "description": [
            "Sets the vps_stats numothersock",
            "@param int $numothersock the new numothersock",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumothersockF": {
        "name": "getNumothersockF",
        "params": "",
        "description": [
            "Gets the vps_stats numothersock_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumothersockF": {
        "name": "setNumothersockF",
        "params": "$numothersock_f",
        "description": [
            "Sets the vps_stats numothersock_f",
            "@param int $numothersock_f the new numothersock_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numothersock_f": {
        "name": "get_numothersock_f",
        "params": "",
        "description": [
            "Gets the vps_stats numothersock_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numothersock_f": {
        "name": "set_numothersock_f",
        "params": "$numothersock_f",
        "description": [
            "Sets the vps_stats numothersock_f",
            "@param int $numothersock_f the new numothersock_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDcachesize": {
        "name": "getDcachesize",
        "params": "",
        "description": [
            "Gets the vps_stats dcachesize",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDcachesize": {
        "name": "setDcachesize",
        "params": "$dcachesize",
        "description": [
            "Sets the vps_stats dcachesize",
            "@param int $dcachesize the new dcachesize",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_dcachesize": {
        "name": "get_dcachesize",
        "params": "",
        "description": [
            "Gets the vps_stats dcachesize",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dcachesize": {
        "name": "set_dcachesize",
        "params": "$dcachesize",
        "description": [
            "Sets the vps_stats dcachesize",
            "@param int $dcachesize the new dcachesize",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDcachesizeF": {
        "name": "getDcachesizeF",
        "params": "",
        "description": [
            "Gets the vps_stats dcachesize_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDcachesizeF": {
        "name": "setDcachesizeF",
        "params": "$dcachesize_f",
        "description": [
            "Sets the vps_stats dcachesize_f",
            "@param int $dcachesize_f the new dcachesize_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_dcachesize_f": {
        "name": "get_dcachesize_f",
        "params": "",
        "description": [
            "Gets the vps_stats dcachesize_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_dcachesize_f": {
        "name": "set_dcachesize_f",
        "params": "$dcachesize_f",
        "description": [
            "Sets the vps_stats dcachesize_f",
            "@param int $dcachesize_f the new dcachesize_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumfile": {
        "name": "getNumfile",
        "params": "",
        "description": [
            "Gets the vps_stats numfile",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "setNumfile": {
        "name": "setNumfile",
        "params": "$numfile",
        "description": [
            "Sets the vps_stats numfile",
            "@param mixed $numfile the new numfile",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numfile": {
        "name": "get_numfile",
        "params": "",
        "description": [
            "Gets the vps_stats numfile",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "set_numfile": {
        "name": "set_numfile",
        "params": "$numfile",
        "description": [
            "Sets the vps_stats numfile",
            "@param mixed $numfile the new numfile",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumfileF": {
        "name": "getNumfileF",
        "params": "",
        "description": [
            "Gets the vps_stats numfile_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumfileF": {
        "name": "setNumfileF",
        "params": "$numfile_f",
        "description": [
            "Sets the vps_stats numfile_f",
            "@param int $numfile_f the new numfile_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numfile_f": {
        "name": "get_numfile_f",
        "params": "",
        "description": [
            "Gets the vps_stats numfile_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numfile_f": {
        "name": "set_numfile_f",
        "params": "$numfile_f",
        "description": [
            "Sets the vps_stats numfile_f",
            "@param int $numfile_f the new numfile_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumiptent": {
        "name": "getNumiptent",
        "params": "",
        "description": [
            "Gets the vps_stats numiptent",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumiptent": {
        "name": "setNumiptent",
        "params": "$numiptent",
        "description": [
            "Sets the vps_stats numiptent",
            "@param int $numiptent the new numiptent",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numiptent": {
        "name": "get_numiptent",
        "params": "",
        "description": [
            "Gets the vps_stats numiptent",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numiptent": {
        "name": "set_numiptent",
        "params": "$numiptent",
        "description": [
            "Sets the vps_stats numiptent",
            "@param int $numiptent the new numiptent",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getNumiptentF": {
        "name": "getNumiptentF",
        "params": "",
        "description": [
            "Gets the vps_stats numiptent_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setNumiptentF": {
        "name": "setNumiptentF",
        "params": "$numiptent_f",
        "description": [
            "Sets the vps_stats numiptent_f",
            "@param int $numiptent_f the new numiptent_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_numiptent_f": {
        "name": "get_numiptent_f",
        "params": "",
        "description": [
            "Gets the vps_stats numiptent_f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_numiptent_f": {
        "name": "set_numiptent_f",
        "params": "$numiptent_f",
        "description": [
            "Sets the vps_stats numiptent_f",
            "@param int $numiptent_f the new numiptent_f",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDiskspace": {
        "name": "getDiskspace",
        "params": "",
        "description": [
            "Gets the vps_stats diskspace",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDiskspace": {
        "name": "setDiskspace",
        "params": "$diskspace",
        "description": [
            "Sets the vps_stats diskspace",
            "@param int $diskspace the new diskspace",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_diskspace": {
        "name": "get_diskspace",
        "params": "",
        "description": [
            "Gets the vps_stats diskspace",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_diskspace": {
        "name": "set_diskspace",
        "params": "$diskspace",
        "description": [
            "Sets the vps_stats diskspace",
            "@param int $diskspace the new diskspace",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDiskspaceS": {
        "name": "getDiskspaceS",
        "params": "",
        "description": [
            "Gets the vps_stats diskspace_s",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDiskspaceS": {
        "name": "setDiskspaceS",
        "params": "$diskspace_s",
        "description": [
            "Sets the vps_stats diskspace_s",
            "@param int $diskspace_s the new diskspace_s",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_diskspace_s": {
        "name": "get_diskspace_s",
        "params": "",
        "description": [
            "Gets the vps_stats diskspace_s",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_diskspace_s": {
        "name": "set_diskspace_s",
        "params": "$diskspace_s",
        "description": [
            "Sets the vps_stats diskspace_s",
            "@param int $diskspace_s the new diskspace_s",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDiskspaceH": {
        "name": "getDiskspaceH",
        "params": "",
        "description": [
            "Gets the vps_stats diskspace_h",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDiskspaceH": {
        "name": "setDiskspaceH",
        "params": "$diskspace_h",
        "description": [
            "Sets the vps_stats diskspace_h",
            "@param int $diskspace_h the new diskspace_h",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_diskspace_h": {
        "name": "get_diskspace_h",
        "params": "",
        "description": [
            "Gets the vps_stats diskspace_h",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_diskspace_h": {
        "name": "set_diskspace_h",
        "params": "$diskspace_h",
        "description": [
            "Sets the vps_stats diskspace_h",
            "@param int $diskspace_h the new diskspace_h",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDiskinodes": {
        "name": "getDiskinodes",
        "params": "",
        "description": [
            "Gets the vps_stats diskinodes",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDiskinodes": {
        "name": "setDiskinodes",
        "params": "$diskinodes",
        "description": [
            "Sets the vps_stats diskinodes",
            "@param int $diskinodes the new diskinodes",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_diskinodes": {
        "name": "get_diskinodes",
        "params": "",
        "description": [
            "Gets the vps_stats diskinodes",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_diskinodes": {
        "name": "set_diskinodes",
        "params": "$diskinodes",
        "description": [
            "Sets the vps_stats diskinodes",
            "@param int $diskinodes the new diskinodes",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDiskinodesS": {
        "name": "getDiskinodesS",
        "params": "",
        "description": [
            "Gets the vps_stats diskinodes_s",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDiskinodesS": {
        "name": "setDiskinodesS",
        "params": "$diskinodes_s",
        "description": [
            "Sets the vps_stats diskinodes_s",
            "@param int $diskinodes_s the new diskinodes_s",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_diskinodes_s": {
        "name": "get_diskinodes_s",
        "params": "",
        "description": [
            "Gets the vps_stats diskinodes_s",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_diskinodes_s": {
        "name": "set_diskinodes_s",
        "params": "$diskinodes_s",
        "description": [
            "Sets the vps_stats diskinodes_s",
            "@param int $diskinodes_s the new diskinodes_s",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDiskinodesH": {
        "name": "getDiskinodesH",
        "params": "",
        "description": [
            "Gets the vps_stats diskinodes_h",
            "@return int"
        ],
        "fieldtexts": []
    },
    "setDiskinodesH": {
        "name": "setDiskinodesH",
        "params": "$diskinodes_h",
        "description": [
            "Sets the vps_stats diskinodes_h",
            "@param int $diskinodes_h the new diskinodes_h",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_diskinodes_h": {
        "name": "get_diskinodes_h",
        "params": "",
        "description": [
            "Gets the vps_stats diskinodes_h",
            "@return int"
        ],
        "fieldtexts": []
    },
    "set_diskinodes_h": {
        "name": "set_diskinodes_h",
        "params": "$diskinodes_h",
        "description": [
            "Sets the vps_stats diskinodes_h",
            "@param int $diskinodes_h the new diskinodes_h",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getLaverage1": {
        "name": "getLaverage1",
        "params": "",
        "description": [
            "Gets the vps_stats laverage1",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setLaverage1": {
        "name": "setLaverage1",
        "params": "$laverage1",
        "description": [
            "Sets the vps_stats laverage1",
            "@param float $laverage1 the new laverage1",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_laverage1": {
        "name": "get_laverage1",
        "params": "",
        "description": [
            "Gets the vps_stats laverage1",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_laverage1": {
        "name": "set_laverage1",
        "params": "$laverage1",
        "description": [
            "Sets the vps_stats laverage1",
            "@param float $laverage1 the new laverage1",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getLaverage5": {
        "name": "getLaverage5",
        "params": "",
        "description": [
            "Gets the vps_stats laverage5",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setLaverage5": {
        "name": "setLaverage5",
        "params": "$laverage5",
        "description": [
            "Sets the vps_stats laverage5",
            "@param float $laverage5 the new laverage5",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_laverage5": {
        "name": "get_laverage5",
        "params": "",
        "description": [
            "Gets the vps_stats laverage5",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_laverage5": {
        "name": "set_laverage5",
        "params": "$laverage5",
        "description": [
            "Sets the vps_stats laverage5",
            "@param float $laverage5 the new laverage5",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getLaverage10": {
        "name": "getLaverage10",
        "params": "",
        "description": [
            "Gets the vps_stats laverage10",
            "@return float"
        ],
        "fieldtexts": []
    },
    "setLaverage10": {
        "name": "setLaverage10",
        "params": "$laverage10",
        "description": [
            "Sets the vps_stats laverage10",
            "@param float $laverage10 the new laverage10",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "get_laverage10": {
        "name": "get_laverage10",
        "params": "",
        "description": [
            "Gets the vps_stats laverage10",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_laverage10": {
        "name": "set_laverage10",
        "params": "$laverage10",
        "description": [
            "Sets the vps_stats laverage10",
            "@param float $laverage10 the new laverage10",
            "@return \\MyAdmin\\Orm\\Vps_Stat"
        ],
        "fieldtexts": []
    },
    "getDir": {
        "name": "getDir",
        "params": "",
        "description": [
            "Gets the vps_templates dir",
            "@return string"
        ],
        "fieldtexts": []
    },
    "setDir": {
        "name": "setDir",
        "params": "$dir",
        "description": [
            "Sets the vps_templates dir",
            "@param string $dir the new dir",
            "@return \\MyAdmin\\Orm\\Vps_Template"
        ],
        "fieldtexts": []
    },
    "get_dir": {
        "name": "get_dir",
        "params": "",
        "description": [
            "Gets the vps_templates dir",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_dir": {
        "name": "set_dir",
        "params": "$dir",
        "description": [
            "Sets the vps_templates dir",
            "@param string $dir the new dir",
            "@return \\MyAdmin\\Orm\\Vps_Template"
        ],
        "fieldtexts": []
    },
    "addDefine": {
        "name": "addDefine",
        "params": "$setting, $value",
        "description": [
            "@param $setting",
            "@param $value"
        ],
        "fieldtexts": []
    },
    "addServiceCategory": {
        "name": "addServiceCategory",
        "params": "$module, $tag, $name",
        "description": [
            "@param $module",
            "@param $tag",
            "@param $name",
            "@return int"
        ],
        "fieldtexts": []
    },
    "addServiceType": {
        "name": "addServiceType",
        "params": "$category, $module, $name",
        "description": [
            "@param $category",
            "@param $module",
            "@param $name",
            "@return int"
        ],
        "fieldtexts": []
    },
    "addService": {
        "name": "addService",
        "params": "$category, $type, $module, $name, $cost, $ourcost, $buyable, $field1, $field2",
        "description": [
            "@param $category",
            "@param $type",
            "@param $module",
            "@param $name",
            "@param $cost",
            "@param $ourcost",
            "@param $buyable",
            "@param $field1",
            "@param $field2",
            "@return int"
        ],
        "fieldtexts": []
    },
    "disableServiceCategory": {
        "name": "disableServiceCategory",
        "params": "$module, $tag",
        "description": [
            "@param $module",
            "@param $tag"
        ],
        "fieldtexts": []
    },
    "getRelativePath": {
        "name": "getRelativePath",
        "params": "$path, $compareTo",
        "description": [
            "Pre-Config Functions.   This stuff is called almost instantly",
            "so it needs to be defined before any of the rest of the program can go.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Config",
            "define('INSTALL_ROOT', dirname(__DIR__));",
            "getRelativePath()",
            "gets the pathway between 2 given paths",
            "@param mixed $path the start path maybe",
            "@param mixed $compareTo the end path maybe",
            "@return string the relative path between the 2 points"
        ],
        "fieldtexts": []
    },
    "hulk_smash": {
        "name": "hulk_smash",
        "params": "$title, $message",
        "description": [
            "@param $title",
            "@param $message",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "check_auth_limits": {
        "name": "check_auth_limits",
        "params": "$custid = false, $smash = false, $level = 'alert-warning', $template = 'alert.html'",
        "description": [
            "check_auth_limits()",
            "makes sure the account is allowed to login here.",
            "@param false|integer $custid false\/default to use session custid, otherwise the customer id to check the limits on",
            "@param bool $smash",
            "@param string $level",
            "@param string $template",
            "@return bool true if allowed, false if not."
        ],
        "fieldtexts": []
    },
    "queue_ticker": {
        "name": "queue_ticker",
        "params": "",
        "description": [
            "General System Functions And Mapping",
            "This file has the general functions used heavily both by the program and by",
            "the users.   Functions here should be generic enough that they dont fit in",
            "one of the other areas.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category General",
            "queue_ticker()",
            "the queue ticker that displays what actions are pending on the various connected servers, like",
            "for example backup masters or vps masters.   when a client or admin queues something this",
            "will show it in a little html table.",
            "@return string rendered queue ticker",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "queue_ticker_new": {
        "name": "queue_ticker_new",
        "params": "$ajax = false",
        "description": [
            "@param bool $ajax",
            "@return string"
        ],
        "fieldtexts": []
    },
    "buy_qs1": {
        "name": "buy_qs1",
        "params": "",
        "description": [
            "Quick Server Order form",
            "@author Mr.G"
        ],
        "fieldtexts": []
    },
    "buy_qs": {
        "name": "buy_qs",
        "params": "",
        "description": [
            "Quickserver Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Quickservers",
            "purchase a quickserver"
        ],
        "fieldtexts": []
    },
    "get_outofstock_table": {
        "name": "get_outofstock_table",
        "params": "",
        "description": [
            "Function to get stock array",
            "@return Array of stocks based on location and platform",
            "@author Ganesh",
            "*\/",
            "\tpublic function get_outofstock_array()",
            "\t{",
            "\t\t$greenTickMark = '<span style=\"color:green;\">\u2714<\/span>';",
            "\t\t$redCrossMark = '<span style=\"font-weight:bold;color:red;\">X<\/span>';",
            "\t\tfor ($location=1; $location<=3; $location++) {",
            "\t\t\tif (OUTOFSTOCK_KVM_LINUX == 1 && $location == 1) {",
            "\t\t\t\t$result['KVMLinux'][$location] = $redCrossMark;",
            "\t\t\t}",
            "\t\t\tif (OUTOFSTOCK_KVM_LINUX_LA == 1 && $location == 2) {",
            "\t\t\t\t$result['KVMLinux'][$location] = $redCrossMark;",
            "\t\t\t}",
            "\t\t\tif (OUTOFSTOCK_KVM_LINUX_NY == 1 && $location == 3) {",
            "\t\t\t\t$result['KVMLinux'][$location] = $redCrossMark;",
            "\t\t\t}",
            "\t\t\tif (OUTOFSTOCK_KVM_WIN == 1 && $location == 1) {",
            "\t\t\t\t$result['KVMWindows']['1'] = $redCrossMark;",
            "\t\t\t}",
            "\t\t\tif (OUTOFSTOCK_KVM_WIN_LA == 1 && $location == 2) {",
            "\t\t\t\t$result['KVMWindows']['2'] = $redCrossMark;",
            "\t\t\t}",
            "\t\t\tif (OUTOFSTOCK_KVM_WIN_NY == 1 && $location == 3) {",
            "\t\t\t\t$result['KVMWindows']['3'] = $redCrossMark;",
            "\t\t\t}",
            "\t\t}",
            "\t\tif (empty($result['KVMLinux']['1'])) {",
            "\t\t\t$result['KVMLinux']['1'] = $greenTickMark;",
            "\t\t}",
            "\t\tif (empty($result['KVMLinux']['2'])) {",
            "\t\t\t$result['KVMLinux']['2'] = $greenTickMark;",
            "\t\t}",
            "\t\tif (empty($result['KVMLinux']['3'])) {",
            "\t\t\t$result['KVMLinux']['3'] = $greenTickMark;",
            "\t\t}",
            "\t\tif (empty($result['KVMWindows']['1'])) {",
            "\t\t\t$result['KVMWindows']['1'] = $greenTickMark;",
            "\t\t}",
            "\t\tif (empty($result['KVMWindows']['2'])) {",
            "\t\t\t$result['KVMWindows']['2'] = $greenTickMark;",
            "\t\t}",
            "\t\tif (empty($result['KVMWindows']['3'])) {",
            "\t\t\t$result['KVMWindows']['3'] = $greenTickMark;",
            "\t\t}",
            "\t\treturn $result;",
            "\t}",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_available_quickservers_table": {
        "name": "get_available_quickservers_table",
        "params": "",
        "description": [
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "base_os_select": {
        "name": "base_os_select",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "template_select": {
        "name": "template_select",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "qs_add_cpanel": {
        "name": "qs_add_cpanel",
        "params": "",
        "description": [
            "quickservers Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category quickservers",
            "qs_add_cpanel()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "quickservers_cancel_queue": {
        "name": "quickservers_cancel_queue",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category QuickServers"
        ],
        "fieldtexts": []
    },
    "qs_cancel_queue": {
        "name": "qs_cancel_queue",
        "params": "",
        "description": [
            "@return bool"
        ],
        "fieldtexts": []
    },
    "qs_locations": {
        "name": "qs_locations",
        "params": "",
        "description": [
            "QuickServers Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category QuickServers",
            "qs_locations()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "qs_queue_handler": {
        "name": "qs_queue_handler",
        "params": "$serverInfo, $action, $queueData = false",
        "description": [
            "Quickserver Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Quickservers",
            "use MyAdmin\\Services\\ServiceQueueHandler;",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "quickservers queue handler",
            "@param array  $serverInfo",
            "@param string $action",
            "@return bool|string",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "qs_queue": {
        "name": "qs_queue",
        "params": "$id = false",
        "description": [
            "Quickserver Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Quickservers",
            "use MyAdmin\\Services\\ServiceQueue;",
            "@param int|bool $id defaults to false, if specified tries using that id instead of the one passed",
            "@return array|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "qs_raid_status": {
        "name": "qs_raid_status",
        "params": "",
        "description": [
            "quickservers Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category quickservers",
            "qs_raid_status()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "qs_vnc_map": {
        "name": "qs_vnc_map",
        "params": "",
        "description": [
            "quickservers Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category quickservers",
            "qs_vnc_map()",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_qs_platforms": {
        "name": "get_qs_platforms",
        "params": "",
        "description": [
            "VPS related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "\/\/\tinclude_once ('include\/config\/quickservers_config.inc.php');",
            "define('QS_CPANEL_COST', 10);",
            "if (function_exists('register_event')) {",
            "\tregister_event('get_service_types', 'get_qs_types', 'quickservers');",
            "\tregister_event('parse_service_extra', 'parse_qs_extra', 'quickservers');",
            "}",
            "gets the vps platform types.",
            "@return array array of  platform name => description"
        ],
        "fieldtexts": []
    },
    "qs_screenshot": {
        "name": "qs_screenshot",
        "params": "$id",
        "description": [
            "returns a link to an animated screenshot of your VPS.   Only works currently with KVM VPS servers",
            "@param mixed $id",
            "@return array status, status_text, screenshot image link and some html\/js to render and refresh it"
        ],
        "fieldtexts": []
    },
    "qs_get_servers": {
        "name": "qs_get_servers",
        "params": "",
        "description": [
            "gets an array of vps masters",
            "@return array the vps masters"
        ],
        "fieldtexts": []
    },
    "qs_ips_list": {
        "name": "qs_ips_list",
        "params": "$server = false, $service = false, $used = false, $usable = false",
        "description": [
            "@param false|int $server optional server id",
            "@param false|int $service optional service id",
            "@param false|int $used optional used status",
            "@param false|int $usable optional usable status",
            "@return array"
        ],
        "fieldtexts": []
    },
    "qs_get_server_name": {
        "name": "qs_get_server_name",
        "params": "$id",
        "description": [
            "get the name of the vps master\/host server your giving hte id for",
            "@param int $id id of the vps master",
            "@return string vps masters name"
        ],
        "fieldtexts": []
    },
    "get_qs_types": {
        "name": "get_qs_types",
        "params": "$hide_empty = false",
        "description": [
            "get_qs_types()",
            "gets an array of vps package types and returns them",
            "@param bool $hide_empty whether to hide the gaps in service ids",
            "@return array array of service types, standard service_types array"
        ],
        "fieldtexts": []
    },
    "qs_get_password": {
        "name": "qs_get_password",
        "params": "$id",
        "description": [
            "gets the last stored password for the vps server.",
            "@param integer $id the VPS you want the password for",
            "@return bool|string false if failure otherwise returns the last used VPS Password for the given vps"
        ],
        "fieldtexts": []
    },
    "qs_welcome_email": {
        "name": "qs_welcome_email",
        "params": "$id",
        "description": [
            "send\/resend the VPS welcome email for the given VPS.",
            "@param integer $id the VPS to send the welcome email for",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "qs_windows_welcome_email": {
        "name": "qs_windows_welcome_email",
        "params": "$id",
        "description": [
            "send\/resend the VPS welcome email for the given windows VPS.",
            "@param integer $id the VPS to send the welcome email for",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "parse_qs_extra": {
        "name": "parse_qs_extra",
        "params": "$qs_extra",
        "description": [
            "parses the vps extra field, this is just a serialized string",
            "@param string $qs_extra a serialized string",
            "@return array an unserialized array of the vps extra contents"
        ],
        "fieldtexts": []
    },
    "update_qs_info": {
        "name": "update_qs_info",
        "params": "",
        "description": [
            "this is run on the vps masters themselves and builds an array of data on the vps master",
            "and sends the data to my",
            "@return void"
        ],
        "fieldtexts": []
    },
    "select_qs_master": {
        "name": "select_qs_master",
        "params": "$name = 'qs_server', $current = false, $type = false, $location = false, $extra = false",
        "description": [
            "Builds a select box of the qs masters.   Optionally limiting by type and location",
            "@param string      $name     optional name of the select box field",
            "@param bool|int    $current  optional, false if not specifying a current qs server",
            "@param bool|int    $type     optional, false if not specifying a type, the type  otherwise",
            "@param bool|int    $location optional, false if not specifying a location,, limits to location otherwise",
            "@param bool|string $extra    optional, false if not specifying anything extra, or  pass it for additional stuff in the select box",
            "@return string html select box to select a qs master"
        ],
        "fieldtexts": []
    },
    "get_qs_list": {
        "name": "get_qs_list",
        "params": "",
        "description": [
            "this is run on the vps masters themselves and builds an array of data on the vps's",
            "and sends the data to my",
            "@return void"
        ],
        "fieldtexts": []
    },
    "select_qs_type": {
        "name": "select_qs_type",
        "params": "$default = 0, $name = 'qs', $showprice = true, $limittype = false, $javascript = false, $limitprice = false",
        "description": [
            "builds a select box to select hte vps type",
            "@param integer $default",
            "@param string $name",
            "@param bool $showprice",
            "@param bool $limittype",
            "@param bool $javascript",
            "@param bool $limitprice",
            "@return string"
        ],
        "fieldtexts": []
    },
    "qs_create": {
        "name": "qs_create",
        "params": "$id, $ip, $type, $hostname, $rootpass",
        "description": [
            "creates the quickserver",
            "@param int $id service id",
            "@param mixed $ip ip to setup the qs on",
            "@param mixed $type package id it seems",
            "@param mixed $hostname hostname to use for the vps",
            "@param mixed $rootpass password to use",
            "@return string returns the create string needed to create the qs"
        ],
        "fieldtexts": []
    },
    "get_qs_location": {
        "name": "get_qs_location",
        "params": "$location",
        "description": [
            "returns the text name of the vps location given a location id",
            "@param integer $location the vps location integer",
            "@return string the text name of the vps location"
        ],
        "fieldtexts": []
    },
    "qs_get_server_id": {
        "name": "qs_get_server_id",
        "params": "$server",
        "description": [
            "gets a server id from an ip address",
            "@param string $server the ip address of the server",
            "@return integer the server id"
        ],
        "fieldtexts": []
    },
    "qs_get_next_ip": {
        "name": "qs_get_next_ip",
        "params": "$targetserver = null",
        "description": [
            "finds the next available IP address for a VPS server. it checks all the main IPs and additional IPs for the active servers and",
            "compares it against the list of total ips for that vps master and returns the first available one",
            "@param integer $targetserver the target server id",
            "@return bool|string false on failure, or returns the IP Address to assign to it"
        ],
        "fieldtexts": []
    },
    "qs_get_next_id": {
        "name": "qs_get_next_id",
        "params": "$server",
        "description": [
            "gets the next available ID not used on a given server",
            "@param integer $server the server to check IDs for",
            "@return integer the next available ID"
        ],
        "fieldtexts": []
    },
    "admin_email_qs_pending_setup": {
        "name": "admin_email_qs_pending_setup",
        "params": "$id",
        "description": [
            "Emails Admins the VPS is Pending-Setup email template",
            "@param integer $id the vps to email",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "qs_get_masters": {
        "name": "qs_get_masters",
        "params": "",
        "description": [
            "gets a list of all the vps masters",
            "@return array array of records from the qs_masters table"
        ],
        "fieldtexts": []
    },
    "jformer_qs_select_master": {
        "name": "jformer_qs_select_master",
        "params": "$name = 'qs_master', $label = 'Server', $current = false, $type = false, $location = false",
        "description": [
            "Makes A select dropdown box to select the vps host \/ master server for use with JFormer.",
            "@param string $name html name form element for the select box",
            "@param string $label label for the dropdown",
            "@param bool|integer $current the current selected vps master, or false for none selected",
            "@param bool|integer $type optional type limit",
            "@param bool|integer $location optional location limit",
            "@return JFormComponentDropDown select box for the VPS Master server"
        ],
        "fieldtexts": []
    },
    "get_qs_free_ips": {
        "name": "get_qs_free_ips",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "view_qs": {
        "name": "view_qs",
        "params": "$id = false",
        "description": [
            "Quickserver Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Quickserver",
            "view_qs()",
            "@param bool $id",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "resend_welcome_email": {
        "name": "resend_welcome_email",
        "params": "",
        "description": [
            "resends the client welcome email"
        ],
        "fieldtexts": []
    },
    "extra_variable_checks": {
        "name": "extra_variable_checks",
        "params": "",
        "description": [
            "performs additional checks"
        ],
        "fieldtexts": []
    },
    "ip_change_handler": {
        "name": "ip_change_handler",
        "params": "$new_ip, $old_ip",
        "description": [
            "@param $new_ip",
            "@param $old_ip"
        ],
        "fieldtexts": []
    },
    "link_home": {
        "name": "link_home",
        "params": "",
        "description": [
            "the 'home' screen for the view vps page, although a bit dated at this point we use info now"
        ],
        "fieldtexts": []
    },
    "link_novnc": {
        "name": "link_novnc",
        "params": "",
        "description": [
            "the noVNC link providing an HTML5 VNC Client"
        ],
        "fieldtexts": []
    },
    "link_vnc": {
        "name": "link_vnc",
        "params": "",
        "description": [
            "the VNC link providng a Java VNC Client"
        ],
        "fieldtexts": []
    },
    "link_reverse_dns": {
        "name": "link_reverse_dns",
        "params": "",
        "description": [
            "allows control of reverse dns overthe ips in the vps"
        ],
        "fieldtexts": []
    },
    "link_bandwidth": {
        "name": "link_bandwidth",
        "params": "",
        "description": [
            "displays bandwidth graphs"
        ],
        "fieldtexts": []
    },
    "view_quickservers_list": {
        "name": "view_quickservers_list",
        "params": "",
        "description": [
            "quickservers Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category quickservers",
            "view_quickservers_list()"
        ],
        "fieldtexts": []
    },
    "SetMargins": {
        "name": "SetMargins",
        "params": "$left, $top, $right = -1",
        "description": [
            "FPDF::SetMargins()",
            "@param mixed   $left",
            "@param mixed   $top",
            "@param integer $right",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetLeftMargin": {
        "name": "SetLeftMargin",
        "params": "$margin",
        "description": [
            "FPDF::SetLeftMargin()",
            "@param mixed $margin",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetTopMargin": {
        "name": "SetTopMargin",
        "params": "$margin",
        "description": [
            "FPDF::SetTopMargin()",
            "@param mixed $margin",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetRightMargin": {
        "name": "SetRightMargin",
        "params": "$margin",
        "description": [
            "FPDF::SetRightMargin()",
            "@param mixed $margin",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetAutoPageBreak": {
        "name": "SetAutoPageBreak",
        "params": "$auto, $margin = 0",
        "description": [
            "FPDF::SetAutoPageBreak()",
            "@param mixed   $auto",
            "@param integer $margin",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetDisplayMode": {
        "name": "SetDisplayMode",
        "params": "$zoom, $layout = 'continuous'",
        "description": [
            "FPDF::SetDisplayMode()",
            "@param mixed  $zoom",
            "@param string $layout",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetCompression": {
        "name": "SetCompression",
        "params": "$compress",
        "description": [
            "FPDF::SetCompression()",
            "@param mixed $compress",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetTitle": {
        "name": "SetTitle",
        "params": "$title",
        "description": [
            "FPDF::SetTitle()",
            "@param mixed $title",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetSubject": {
        "name": "SetSubject",
        "params": "$subject",
        "description": [
            "FPDF::SetSubject()",
            "@param mixed $subject",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetAuthor": {
        "name": "SetAuthor",
        "params": "$author",
        "description": [
            "FPDF::SetAuthor()",
            "@param mixed $author",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetKeywords": {
        "name": "SetKeywords",
        "params": "$keywords",
        "description": [
            "FPDF::SetKeywords()",
            "@param mixed $keywords",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetCreator": {
        "name": "SetCreator",
        "params": "$creator",
        "description": [
            "FPDF::SetCreator()",
            "@param mixed $creator",
            "@return void"
        ],
        "fieldtexts": []
    },
    "AliasNbPages": {
        "name": "AliasNbPages",
        "params": "$alias = '{nb}'",
        "description": [
            "FPDF::AliasNbPages()",
            "@param string $alias",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Error": {
        "name": "Error",
        "params": "$msg",
        "description": [
            "FPDF::Error()",
            "@param mixed $msg",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Open": {
        "name": "Open",
        "params": "",
        "description": [
            "FPDF::Open()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Close": {
        "name": "Close",
        "params": "",
        "description": [
            "FPDF::Close()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "AddPage": {
        "name": "AddPage",
        "params": "$orientation = ''",
        "description": [
            "FPDF::AddPage()",
            "@param string $orientation",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Header": {
        "name": "Header",
        "params": "$title, $header = false",
        "description": [
            "PDF::Header()",
            "@param mixed $title",
            "@param bool $header",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Footer": {
        "name": "Footer",
        "params": "",
        "description": [
            "FPDF::Footer()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "PageNo": {
        "name": "PageNo",
        "params": "",
        "description": [
            "FPDF::PageNo()",
            "@return int"
        ],
        "fieldtexts": []
    },
    "SetDrawColor": {
        "name": "SetDrawColor",
        "params": "$r, $g = -1, $b = -1",
        "description": [
            "FPDF::SetDrawColor()",
            "@param mixed   $r",
            "@param integer $g",
            "@param integer $b",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetFillColor": {
        "name": "SetFillColor",
        "params": "$r, $g = -1, $b = -1",
        "description": [
            "FPDF::SetFillColor()",
            "@param mixed   $r",
            "@param integer $g",
            "@param integer $b",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetTextColor": {
        "name": "SetTextColor",
        "params": "$r, $g = -1, $b = -1",
        "description": [
            "FPDF::SetTextColor()",
            "@param mixed   $r",
            "@param integer $g",
            "@param integer $b",
            "@return void"
        ],
        "fieldtexts": []
    },
    "GetStringWidth": {
        "name": "GetStringWidth",
        "params": "$s",
        "description": [
            "FPDF::GetStringWidth()",
            "@param mixed $s",
            "@return float"
        ],
        "fieldtexts": []
    },
    "SetLineWidth": {
        "name": "SetLineWidth",
        "params": "$width",
        "description": [
            "FPDF::SetLineWidth()",
            "@param mixed $width",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Line": {
        "name": "Line",
        "params": "$x1, $y1, $x2, $y2",
        "description": [
            "FPDF::Line()",
            "@param mixed $x1",
            "@param mixed $y1",
            "@param mixed $x2",
            "@param mixed $y2",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Rect": {
        "name": "Rect",
        "params": "$x, $y, $w, $h, $style = ''",
        "description": [
            "FPDF::Rect()",
            "@param mixed  $x",
            "@param mixed  $y",
            "@param mixed  $w",
            "@param mixed  $h",
            "@param string $style",
            "@return void"
        ],
        "fieldtexts": []
    },
    "AddFont": {
        "name": "AddFont",
        "params": "$family, $style = '', $file = ''",
        "description": [
            "FPDF::AddFont()",
            "@param mixed  $family",
            "@param string $style",
            "@param string $file",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetFont": {
        "name": "SetFont",
        "params": "$family, $style = '', $size = 0",
        "description": [
            "FPDF::SetFont()",
            "@param mixed   $family",
            "@param string  $style",
            "@param integer $size",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetFontSize": {
        "name": "SetFontSize",
        "params": "$size",
        "description": [
            "FPDF::SetFontSize()",
            "@param mixed $size",
            "@return void"
        ],
        "fieldtexts": []
    },
    "AddLink": {
        "name": "AddLink",
        "params": "",
        "description": [
            "FPDF::AddLink()",
            "@return int"
        ],
        "fieldtexts": []
    },
    "SetLink": {
        "name": "SetLink",
        "params": "$link, $y = 0, $page = -1",
        "description": [
            "FPDF::SetLink()",
            "@param mixed   $link",
            "@param integer $y",
            "@param integer $page",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Link": {
        "name": "Link",
        "params": "$x, $y, $w, $h, $link",
        "description": [
            "FPDF::Link()",
            "@param mixed $x",
            "@param mixed $y",
            "@param mixed $w",
            "@param mixed $h",
            "@param mixed $link",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Text": {
        "name": "Text",
        "params": "$x, $y, $txt",
        "description": [
            "FPDF::Text()",
            "@param mixed $x",
            "@param mixed $y",
            "@param mixed $txt",
            "@return void"
        ],
        "fieldtexts": []
    },
    "AcceptPageBreak": {
        "name": "AcceptPageBreak",
        "params": "",
        "description": [
            "FPDF::AcceptPageBreak()",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "Cell": {
        "name": "Cell",
        "params": "$w, $h = 0, $txt = '', $border = 0, $ln = 0, $align = '', $fill = 0, $link = ''",
        "description": [
            "FPDF::Cell()",
            "@param mixed   $w",
            "@param integer $h",
            "@param string  $txt",
            "@param integer $border",
            "@param integer $ln",
            "@param string  $align",
            "@param integer $fill",
            "@param string  $link",
            "@return void"
        ],
        "fieldtexts": []
    },
    "MultiCell": {
        "name": "MultiCell",
        "params": "$w, $h, $txt, $border = 0, $align = 'J', $fill = 0",
        "description": [
            "FPDF::MultiCell()",
            "@param mixed   $w",
            "@param mixed   $h",
            "@param mixed   $txt",
            "@param integer $border",
            "@param string  $align",
            "@param integer $fill",
            "@return int"
        ],
        "fieldtexts": []
    },
    "Write": {
        "name": "Write",
        "params": "$h, $txt, $link = ''",
        "description": [
            "FPDF::Write()",
            "@param mixed  $h",
            "@param mixed  $txt",
            "@param string $link",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Image": {
        "name": "Image",
        "params": "$file, $x, $y, $w = 0, $h = 0, $type = '', $link = ''",
        "description": [
            "FPDF::Image()",
            "@param mixed   $file",
            "@param mixed   $x",
            "@param mixed   $y",
            "@param integer $w",
            "@param integer $h",
            "@param string  $type",
            "@param string  $link",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Ln": {
        "name": "Ln",
        "params": "$h = ''",
        "description": [
            "FPDF::Ln()",
            "@param string $h",
            "@return void"
        ],
        "fieldtexts": []
    },
    "GetX": {
        "name": "GetX",
        "params": "",
        "description": [
            "FPDF::GetX()",
            "@return float"
        ],
        "fieldtexts": []
    },
    "SetX": {
        "name": "SetX",
        "params": "$x",
        "description": [
            "FPDF::SetX()",
            "@param mixed $x",
            "@return void"
        ],
        "fieldtexts": []
    },
    "GetY": {
        "name": "GetY",
        "params": "",
        "description": [
            "FPDF::GetY()",
            "@return float"
        ],
        "fieldtexts": []
    },
    "SetY": {
        "name": "SetY",
        "params": "$y",
        "description": [
            "FPDF::SetY()",
            "@param mixed $y",
            "@return void"
        ],
        "fieldtexts": []
    },
    "SetXY": {
        "name": "SetXY",
        "params": "$x, $y",
        "description": [
            "FPDF::SetXY()",
            "@param mixed $x",
            "@param mixed $y",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Output": {
        "name": "Output",
        "params": "$name = '', $dest = ''",
        "description": [
            "FPDF::Output()",
            "@param string $name",
            "@param string $dest",
            "@return string"
        ],
        "fieldtexts": []
    },
    "_dochecks": {
        "name": "_dochecks",
        "params": "",
        "description": [
            "FPDF::_dochecks()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_begindoc": {
        "name": "_begindoc",
        "params": "",
        "description": [
            "FPDF::_begindoc()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_putpages": {
        "name": "_putpages",
        "params": "",
        "description": [
            "FPDF::_putpages()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_putfonts": {
        "name": "_putfonts",
        "params": "",
        "description": [
            "FPDF::_putfonts()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_putimages": {
        "name": "_putimages",
        "params": "",
        "description": [
            "FPDF::_putimages()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_putresources": {
        "name": "_putresources",
        "params": "",
        "description": [
            "FPDF::_putresources()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_putinfo": {
        "name": "_putinfo",
        "params": "",
        "description": [
            "FPDF::_putinfo()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_putcatalog": {
        "name": "_putcatalog",
        "params": "",
        "description": [
            "FPDF::_putcatalog()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_puttrailer": {
        "name": "_puttrailer",
        "params": "",
        "description": [
            "FPDF::_puttrailer()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_enddoc": {
        "name": "_enddoc",
        "params": "",
        "description": [
            "FPDF::_enddoc()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_beginpage": {
        "name": "_beginpage",
        "params": "$orientation",
        "description": [
            "FPDF::_beginpage()",
            "@param mixed $orientation",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_endpage": {
        "name": "_endpage",
        "params": "",
        "description": [
            "FPDF::_endpage()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_newobj": {
        "name": "_newobj",
        "params": "",
        "description": [
            "FPDF::_newobj()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_dounderline": {
        "name": "_dounderline",
        "params": "$x, $y, $txt",
        "description": [
            "FPDF::_dounderline()",
            "@param mixed $x",
            "@param mixed $y",
            "@param mixed $txt",
            "@return string"
        ],
        "fieldtexts": []
    },
    "_parsejpg": {
        "name": "_parsejpg",
        "params": "$file",
        "description": [
            "FPDF::_parsejpg()",
            "@param mixed $file",
            "@return array"
        ],
        "fieldtexts": []
    },
    "_parsepng": {
        "name": "_parsepng",
        "params": "$file",
        "description": [
            "FPDF::_parsepng()",
            "@param mixed $file",
            "@return array"
        ],
        "fieldtexts": []
    },
    "_freadint": {
        "name": "_freadint",
        "params": "$f",
        "description": [
            "FPDF::_freadint()",
            "@param mixed $f",
            "@return int"
        ],
        "fieldtexts": []
    },
    "_textstring": {
        "name": "_textstring",
        "params": "$s",
        "description": [
            "FPDF::_textstring()",
            "@param mixed $s",
            "@return string"
        ],
        "fieldtexts": []
    },
    "_escape": {
        "name": "_escape",
        "params": "$s",
        "description": [
            "FPDF::_escape()",
            "@param mixed $s",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "_putstream": {
        "name": "_putstream",
        "params": "$s",
        "description": [
            "FPDF::_putstream()",
            "@param mixed $s",
            "@return void"
        ],
        "fieldtexts": []
    },
    "_out": {
        "name": "_out",
        "params": "$s",
        "description": [
            "FPDF::_out()",
            "@param mixed $s",
            "@return void"
        ],
        "fieldtexts": []
    },
    "GIFAddFrames": {
        "name": "GIFAddFrames",
        "params": "$i, $d",
        "description": [
            "@param $i",
            "@param $d"
        ],
        "fieldtexts": []
    },
    "GIFBlockCompare": {
        "name": "GIFBlockCompare",
        "params": "$GlobalBlock, $LocalBlock, $Len",
        "description": [
            "@param $GlobalBlock",
            "@param $LocalBlock",
            "@param $Len",
            "@return int"
        ],
        "fieldtexts": []
    },
    "GIFWord": {
        "name": "GIFWord",
        "params": "$int",
        "description": [
            "@param $int",
            "@return string"
        ],
        "fieldtexts": []
    },
    "GetAnimation": {
        "name": "GetAnimation",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_align": {
        "name": "get_align",
        "params": "$align",
        "description": [
            "PDF Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category PDF",
            "define('FPDF_FONTPATH', 'include\/pdf_font\/');",
            "function_requirements('class.FPDF');",
            "PDF",
            "@access public",
            "class PDF extends FPDF",
            "{",
            "\tpublic $TableX;",
            "\tpublic $HeaderColor;",
            "\tpublic $RowColors;",
            "\tpublic $ColorIndex;",
            "\tpublic $title = false;",
            "\t\/\/ broken up line data",
            "\tpublic $lines = [];",
            "\t\/\/ color in cells TRUE\/FALSE",
            "\tpublic $fill = false;",
            "\t\/\/ background color cache",
            "\tpublic $bgcolors = [];",
            "\t\/\/ heights of each row",
            "\tpublic $heights = [];",
            "\t\/\/\/ widths of each field",
            "\tpublic $widths = [];",
            "\t\/\/ rows of the table",
            "\tpublic $rows = [];",
            "\tpublic $text_size = 8;",
            "\tpublic $title_size = 14;",
            "\tpublic $tables = 0;",
            "\t\/\/public $images = [];",
            "\tpublic $includebar = true;",
            "\tpublic $temp = 0;",
            "PDF::get_align()",
            "@param mixed $align",
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_fillcolor": {
        "name": "set_fillcolor",
        "params": "$bgcolor",
        "description": [
            "PDF::set_fillcolor()",
            "@param mixed $bgcolor",
            "@return void"
        ],
        "fieldtexts": []
    },
    "CalcHeight": {
        "name": "CalcHeight",
        "params": "$w = 0, $txt = ''",
        "description": [
            "PDF::CalcHeight()",
            "@param integer $w",
            "@param string $txt",
            "@return array"
        ],
        "fieldtexts": []
    },
    "CountPages": {
        "name": "CountPages",
        "params": "",
        "description": [
            "PDF::CountPages()",
            "@return integer"
        ],
        "fieldtexts": []
    },
    "MultiCellCalc": {
        "name": "MultiCellCalc",
        "params": "$w, $h, $lines, $border = 0, $align = 'J', $bgcolor",
        "description": [
            "PDF::MultiCellCalc()",
            "@param mixed $w",
            "@param mixed $h",
            "@param mixed $lines",
            "@param integer $border",
            "@param string $align",
            "@param mixed $bgcolor",
            "@return void"
        ],
        "fieldtexts": []
    },
    "HandleRows": {
        "name": "HandleRows",
        "params": "$colwidth",
        "description": [
            "PDF::HandleRows()",
            "@param mixed $colwidth",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_bardata": {
        "name": "get_bardata",
        "params": "$word",
        "description": [
            "PDF::get_bardata()",
            "@param mixed $word",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_bigword": {
        "name": "get_bigword",
        "params": "$text",
        "description": [
            "PDF::get_bigword()",
            "@param mixed $text",
            "@return integer"
        ],
        "fieldtexts": []
    },
    "MagicHeights": {
        "name": "MagicHeights",
        "params": "",
        "description": [
            "PDF::MagicHeights()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "iterate_widths": {
        "name": "iterate_widths",
        "params": "$totalleft, $width, $maxwidth, $twidth",
        "description": [
            "PDF::iterate_widths()",
            "@param mixed $totalleft",
            "@param mixed $width",
            "@param mixed $maxwidth",
            "@param mixed $twidth",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_title_width": {
        "name": "get_title_width",
        "params": "",
        "description": [
            "PDF::get_title_width()",
            "@return integer"
        ],
        "fieldtexts": []
    },
    "MagicWidths": {
        "name": "MagicWidths",
        "params": "$width",
        "description": [
            "PDF::MagicWidths()",
            "@param mixed $width",
            "@return void"
        ],
        "fieldtexts": []
    },
    "prep_more_table": {
        "name": "prep_more_table",
        "params": "$title = false, $rowsize",
        "description": [
            "PDF::prep_more_table()",
            "@param bool $title",
            "@param mixed $rowsize",
            "@return void"
        ],
        "fieldtexts": []
    },
    "Table": {
        "name": "Table",
        "params": "$rows, $width, $prop = []",
        "description": [
            "PDF::Table()",
            "@param mixed $rows",
            "@param mixed $width",
            "@param mixed $prop",
            "@return void"
        ],
        "fieldtexts": []
    },
    "removeKey": {
        "name": "removeKey",
        "params": "&$array, $key",
        "description": [
            "StatsGraph::removeKey()",
            "@param mixed $array",
            "@param mixed $key",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_default_options": {
        "name": "get_default_options",
        "params": "&$array",
        "description": [
            "StatsGraph::get_default_options()",
            "@param mixed $array",
            "@return void"
        ],
        "fieldtexts": []
    },
    "map_settings_to_options": {
        "name": "map_settings_to_options",
        "params": "&$array",
        "description": [
            "StatsGraph::map_settings_to_options()",
            "@param mixed $array",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_defaults_no_description": {
        "name": "get_defaults_no_description",
        "params": "",
        "description": [
            "StatsGraph::get_defaults_no_description()",
            "@return array"
        ],
        "fieldtexts": []
    },
    "phpArrayToJsArray": {
        "name": "phpArrayToJsArray",
        "params": "$name, $array, $prePend = 'var '",
        "description": [
            "StatsGraph::phpArrayToJsArray()",
            "@param mixed $name",
            "@param mixed $array",
            "@param string $prePend",
            "@return string"
        ],
        "fieldtexts": []
    },
    "handle_json": {
        "name": "handle_json",
        "params": "$data, $js_able = true",
        "description": [
            "StatsGraph::handle_json()",
            "@param mixed $data",
            "@param bool $js_able",
            "@return string"
        ],
        "fieldtexts": []
    },
    "escape_input": {
        "name": "escape_input",
        "params": "$input",
        "description": [
            "StatsGraph::escape_input()",
            "@param mixed $input",
            "@return string"
        ],
        "fieldtexts": []
    },
    "safe_is_number": {
        "name": "safe_is_number",
        "params": "$value",
        "description": [
            "StatsGraph::safe_is_number()",
            "@param mixed $value",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "build_graph_sql_admin": {
        "name": "build_graph_sql_admin",
        "params": "",
        "description": [
            "StatsGraph::build_graph_sql_admin()",
            "@return string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "build_graph_admin": {
        "name": "build_graph_admin",
        "params": "",
        "description": [
            "StatsGraph::build_graph_admin()",
            "@return string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "use_template": {
        "name": "use_template",
        "params": "$template",
        "description": [
            "Sets the graph t a template",
            "@param string template to use",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_axis": {
        "name": "set_axis",
        "params": "$fields",
        "description": [
            "StatsGraph::set_axis()",
            "@param mixed $fields",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_limit": {
        "name": "set_limit",
        "params": "$amount, $description",
        "description": [
            "StatsGraph::set_limit()",
            "@param mixed $amount",
            "@param mixed $description",
            "@return void"
        ],
        "fieldtexts": []
    },
    "prepare_query": {
        "name": "prepare_query",
        "params": "",
        "description": [
            "StatsGraph::prepare_query()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "build_graph": {
        "name": "build_graph",
        "params": "$node, $depth = 1, $defaults = false",
        "description": [
            "StatsGraph::build_graph()",
            "@param mixed $node",
            "@param integer $depth",
            "@param bool $defaults",
            "@return array"
        ],
        "fieldtexts": []
    },
    "graph": {
        "name": "graph",
        "params": "$template = ''",
        "description": [
            "graph()",
            "@param string $template",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "json_format": {
        "name": "json_format",
        "params": "$json",
        "description": [
            "StatsGraph::json_format()",
            "Pretty print some JSON",
            "@param mixed $json",
            "@return string"
        ],
        "fieldtexts": []
    },
    "load_flot_options": {
        "name": "load_flot_options",
        "params": "",
        "description": [
            "StatsGraph::load_flot_options()",
            "var options = {",
            "xaxis: { \"minTickSize\": [1, \"minute\"], mode: \"time\" },",
            "\"yaxis\": { min: 0, \"tickFormatter\": function (v, axis) { return v.toFixed(axis.tickDecimals) }},",
            "series: { lines: { show: true }, points: { show: true } },",
            "grid: { hoverable: true, clickable: true },",
            "\"legend\": { \"position\": \"nw\" },",
            "selection: { mode: \"x\" }",
            "};",
            "series: {",
            "stack: stack,",
            "lines: { show: lines, fill: true, steps: steps },",
            "bars: { show: bars, barWidth: 0.6 }",
            "}",
            "@return void"
        ],
        "fieldtexts": []
    },
    "fetch": {
        "name": "fetch",
        "params": "$tpl_name, &$tpl_text, &$tpl_time",
        "description": [
            "Fetch a template and its modification time from database",
            "@param string $tpl_name template name",
            "@param string $tpl_text template source",
            "@param integer $tpl_time template modification timestamp (epoch)",
            "@return void"
        ],
        "fieldtexts": []
    },
    "fetchTimestamp": {
        "name": "fetchTimestamp",
        "params": "$tpl_name",
        "description": [
            "Fetch a template's modification time from database",
            "@note     implementing this method is optional. Only implement it if modification times can be accessed faster than loading the complete template source.",
            "@param string $tpl_name",
            "@internal param string $name template name",
            "@return integer timestamp (epoch) the template was modified"
        ],
        "fieldtexts": []
    },
    "set_template_dir": {
        "name": "set_template_dir",
        "params": "$dir",
        "description": [
            "Sets the template directory",
            "@param string $dir"
        ],
        "fieldtexts": []
    },
    "set_filename": {
        "name": "set_filename",
        "params": "$filename",
        "description": [
            "Sets the template filename used to generate the table",
            "@param string $filename",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_method": {
        "name": "set_method",
        "params": "$method",
        "description": [
            "sets the form submission method (post or get)",
            "@param string $method the form submit method, POST or GET",
            "@return void"
        ],
        "fieldtexts": []
    },
    "hide_table": {
        "name": "hide_table",
        "params": "",
        "description": [
            "enables the hide_table option which hides general table layout",
            "@return void"
        ],
        "fieldtexts": []
    },
    "hide_form": {
        "name": "hide_form",
        "params": "",
        "description": [
            "disables the form elements from the output",
            "@return void"
        ],
        "fieldtexts": []
    },
    "alternate_rows": {
        "name": "alternate_rows",
        "params": "",
        "description": [
            "enables table striping",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_form_options": {
        "name": "set_form_options",
        "params": "$options",
        "description": [
            "set optional html to be included for the form element",
            "@param string $options html options for the form",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_options": {
        "name": "set_options",
        "params": "$text = ''",
        "description": [
            "sets optional html to be included in the table",
            "@param string $text the html to be included in the table element",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_row_options": {
        "name": "set_row_options",
        "params": "$text = ''",
        "description": [
            "sets optional html to be included in the table row",
            "@param string $text the html to be included in the table row element",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_autocolor": {
        "name": "set_autocolor",
        "params": "$status",
        "description": [
            "sets the autocolor color",
            "@param string $status the autocolor",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_col_options": {
        "name": "set_col_options",
        "params": "$text = ''",
        "description": [
            "sets optional html to be included in the table column",
            "@param string $text the html to be included in the table column element",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_form_name": {
        "name": "set_form_name",
        "params": "$text = ''",
        "description": [
            "sets the field name of the form element",
            "@param string $text",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_post_location": {
        "name": "set_post_location",
        "params": "$dir = POST_LOCATION",
        "description": [
            "sets the location this form submits to",
            "@param string $dir the post location or blank for default POST_LOCATION",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_align": {
        "name": "set_align",
        "params": "$align",
        "description": [
            "sets the column alignment",
            "@param string $align can be l, c, r, left, center, right, d?",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_bgcolor": {
        "name": "set_bgcolor",
        "params": "$value",
        "description": [
            "sets the background color",
            "@param string|int $value color # or value, color name, or a color value (ie 1, color1, or #aabbcc)",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_hidden": {
        "name": "add_hidden",
        "params": "$name, $value",
        "description": [
            "adds a hidden form element",
            "@param string $name the name of the hidden form element",
            "@param string $value the value of the hidden element",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_colspan": {
        "name": "set_colspan",
        "params": "$colspan",
        "description": [
            "sets the column span (colspan) for the next column",
            "@param int $colspan the columnn span",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_header_field": {
        "name": "add_header_field",
        "params": "$text = '&nbsp;', $align = 'd'",
        "description": [
            "Adds a column to a table header",
            "@param string $text the text for the header",
            "@param string $align alignment for the header, @see set_align for list of aligments",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_width": {
        "name": "get_width",
        "params": "",
        "description": [
            "returns the width of the table",
            "@return integer width of the table"
        ],
        "fieldtexts": []
    },
    "get_row_width": {
        "name": "get_row_width",
        "params": "",
        "description": [
            "gets the width of the row",
            "@return integer row width"
        ],
        "fieldtexts": []
    },
    "add_row": {
        "name": "add_row",
        "params": "",
        "description": [
            "Finishes a row in a table and gets ready for you to start entering a new row",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_header_row": {
        "name": "add_header_row",
        "params": "",
        "description": [
            "Finishes a row in a table and gets ready for you to start entering a new row",
            "@return void"
        ],
        "fieldtexts": []
    },
    "hide_title": {
        "name": "hide_title",
        "params": "",
        "description": [
            "hides the table title",
            "@return void"
        ],
        "fieldtexts": []
    },
    "show_title": {
        "name": "show_title",
        "params": "",
        "description": [
            "shows the table title",
            "@return void"
        ],
        "fieldtexts": []
    },
    "hide_endform": {
        "name": "hide_endform",
        "params": "",
        "description": [
            "hides the end part of the <form> <\/form>",
            "@return void"
        ],
        "fieldtexts": []
    },
    "hide_startform": {
        "name": "hide_startform",
        "params": "",
        "description": [
            "hides the start part of the <form> <\/form>",
            "@return void"
        ],
        "fieldtexts": []
    },
    "make_checkbox": {
        "name": "make_checkbox",
        "params": "$name, $value, $current = false, $extra = '', $label = false",
        "description": [
            "generates a checkbox using the given parameters",
            "@param string                  $name    name of the input field",
            "@param string|array            $value   value of the field",
            "@param bool|string             $current the currernt value",
            "@param string                  $extra   additional html content to put in the <input, like style=\"\" options",
            "@param array|bool|false|string $label   optoinal labels for the checkboxs",
            "@return string generated html"
        ],
        "fieldtexts": []
    },
    "make_radio": {
        "name": "make_radio",
        "params": "$name, $value, $current = false, $extra = '', $label = false",
        "description": [
            "generates a radio input",
            "@param string $name name of the input",
            "@param array|string $value value(s) for the radio",
            "@param bool|string|array $current the currernt value",
            "@param string $extra additional html content to put in the <input, like style=\"\" options",
            "@param bool $label",
            "@return string"
        ],
        "fieldtexts": []
    },
    "make_input": {
        "name": "make_input",
        "params": "$name, $value = false, $size = false, $maxlen = false, $extra = ''",
        "description": [
            "generates an texst input field",
            "@param string         $name   name of the input field",
            "@param bool|string    $value  current vlaue of the field",
            "@param bool|false|int $size   optional size of the field",
            "@param bool|false|int $maxlen maximum length of the input in characters",
            "@param string         $extra  optional extra html to add to the input element",
            "@return string the generated input string"
        ],
        "fieldtexts": []
    },
    "make_pinput": {
        "name": "make_pinput",
        "params": "$name, $value = '', $size = false",
        "description": [
            "generates a password input similar to the make_input function does",
            "@see make_input",
            "@param mixed $name",
            "@param string $value",
            "@param bool $size",
            "@return string"
        ],
        "fieldtexts": []
    },
    "make_plink": {
        "name": "make_plink",
        "params": "$target, $text, $title = false",
        "description": [
            "makes a p.php page link",
            "@param string            $target",
            "@param string            $text",
            "@param bool|false|string $title",
            "@return string"
        ],
        "fieldtexts": []
    },
    "make_plainlink": {
        "name": "make_plainlink",
        "params": "$target, $text, $title = false",
        "description": [
            "generates a plain link",
            "@param string            $target",
            "@param string            $text",
            "@param bool|false|string $title",
            "@return string"
        ],
        "fieldtexts": []
    },
    "make_dlink": {
        "name": "make_dlink",
        "params": "$target, $text, $title = false",
        "description": [
            "generates a download link",
            "@param mixed $target",
            "@param mixed $text",
            "@param bool $title",
            "@return string"
        ],
        "fieldtexts": []
    },
    "make_img": {
        "name": "make_img",
        "params": "$location, $alt = ''",
        "description": [
            "generates an image element",
            "@param string $location",
            "@param string $alt",
            "@return string"
        ],
        "fieldtexts": []
    },
    "make_submit": {
        "name": "make_submit",
        "params": "$text, $name = false, $hidename = false, $extra = ''",
        "description": [
            "creates a submit button",
            "@param stromg            $text",
            "@param bool|false|string $name",
            "@param bool              $hidename",
            "@param string            $extra",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_table_rows": {
        "name": "get_table_rows",
        "params": "$rows, $outtype",
        "description": [
            "@param $rows",
            "@param $outtype",
            "@return array|string"
        ],
        "fieldtexts": []
    },
    "get_pdf": {
        "name": "get_pdf",
        "params": "$filename = '', $dest = '', $header = '', $color = false",
        "description": [
            "TFTable::get_pdf()",
            "@param string $filename",
            "@param string $dest",
            "@param string $header",
            "@param bool $color",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_pdf_table": {
        "name": "add_pdf_table",
        "params": "$data = false, $header = '', $color = false",
        "description": [
            "TFTable::add_pdf_table()",
            "@param bool $data",
            "@param string $header",
            "@param bool $color",
            "@return PDF"
        ],
        "fieldtexts": []
    },
    "get_xls": {
        "name": "get_xls",
        "params": "",
        "description": [
            "TFTable::get_xls()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "htmlspecial": {
        "name": "htmlspecial",
        "params": "$text",
        "description": [
            "Internal Unexposed Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Sanitizers",
            "escapes html in a string in the best wa possible based on php version",
            "@param sring $text the html string to convert to special characters",
            "@return string the escaped string suitable for use in other html or links without braking things"
        ],
        "fieldtexts": []
    },
    "array_merge_replace": {
        "name": "array_merge_replace",
        "params": "$array, $newValues",
        "description": [
            "@param $array",
            "@param $newValues",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "arrayRecursiveDiff": {
        "name": "arrayRecursiveDiff",
        "params": "$aArray1, $aArray2",
        "description": [
            "@param $aArray1",
            "@param $aArray2",
            "@return array"
        ],
        "fieldtexts": []
    },
    "array_htmlentities": {
        "name": "array_htmlentities",
        "params": "&$elem",
        "description": [
            "@param $elem",
            "@return array|string"
        ],
        "fieldtexts": []
    },
    "sanitize_array_int": {
        "name": "sanitize_array_int",
        "params": "$id",
        "description": [
            "you can pass this either a single number or an arra yof numbers",
            "it typecasts it to integer (or if array it iterates the array",
            "writing a new one with each entry typecasted to int. it then",
            "returns this int snaitized field still as an array or not )",
            "@param mixed $id a string\/number\/array that needs to be sanitized to an int or array of ints",
            "@return array|int the santizied result"
        ],
        "fieldtexts": []
    },
    "search_dashboard2": {
        "name": "search_dashboard2",
        "params": "",
        "description": [
            "General System Functions And Mapping",
            "This file has the general functions used heavily both by the program and by",
            "the users.   Functions here should be generic enough that they dont fit in",
            "one of the other areas.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category General",
            "search_dashboard2()",
            "adds the search dashboard rendered template to the display buffer",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "search2": {
        "name": "search2",
        "params": "",
        "description": [
            "search2()",
            "processes a search",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "search_dashboard": {
        "name": "search_dashboard",
        "params": "",
        "description": [
            "General System Functions And Mapping",
            "This file has the general functions used heavily both by the program and by",
            "the users.   Functions here should be generic enough that they dont fit in",
            "one of the other areas.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category General",
            "search_dashboard()",
            "adds the search dashboard rendered template to the display buffer",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "search": {
        "name": "search",
        "params": "",
        "description": [
            "search()",
            "processes a search",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "assets2": {
        "name": "assets2",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use \\MyCrud\\Crud;",
            "assets2()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "asset_types": {
        "name": "asset_types",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "use \\MyCrud\\Crud;",
            "asset_types()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "escalation": {
        "name": "escalation",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers"
        ],
        "fieldtexts": []
    },
    "fpurge": {
        "name": "fpurge",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers"
        ],
        "fieldtexts": []
    },
    "holidays": {
        "name": "holidays",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers"
        ],
        "fieldtexts": []
    },
    "order_dedicated_new": {
        "name": "order_dedicated_new",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers"
        ],
        "fieldtexts": []
    },
    "order_dedicated_old": {
        "name": "order_dedicated_old",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers"
        ],
        "fieldtexts": []
    },
    "order_dedicated": {
        "name": "order_dedicated",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers"
        ],
        "fieldtexts": []
    },
    "get_vlan_ips": {
        "name": "get_vlan_ips",
        "params": "$comment",
        "description": [
            "@param $comment",
            "@return string"
        ],
        "fieldtexts": []
    },
    "product_manager": {
        "name": "product_manager",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers"
        ],
        "fieldtexts": []
    },
    "get_status_array": {
        "name": "get_status_array",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "select_status": {
        "name": "select_status",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "set_cookie": {
        "name": "set_cookie",
        "params": "$cookie, $value = false",
        "description": [
            "@param      $cookie",
            "@param bool $value"
        ],
        "fieldtexts": []
    },
    "edititem_table": {
        "name": "edititem_table",
        "params": "$table, $items, $x",
        "description": [
            "@param $table",
            "@param $items",
            "@param $x",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "additem_table": {
        "name": "additem_table",
        "params": "$table, $parent = '-1'",
        "description": [
            "@param        $table",
            "@param string $parent",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "display_siblings": {
        "name": "display_siblings",
        "params": "$table, $items, $parent = '-1'",
        "description": [
            "@param        $table",
            "@param        $items",
            "@param string $parent",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "review_order": {
        "name": "review_order",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "load_items": {
        "name": "load_items",
        "params": "$order, $parent = -1",
        "description": [
            "@param     $order",
            "@param int $parent",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_server_hardware_layout": {
        "name": "get_server_hardware_layout",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers",
            "use MyAdmin\\Orm\\Server;",
            "gets an array of all the dedicated hardware optoins and",
            "information about how ot render them",
            "@return array an array of each of the fields"
        ],
        "fieldtexts": []
    },
    "get_server_hardware_info": {
        "name": "get_server_hardware_info",
        "params": "$order",
        "description": [
            "@param $order",
            "@return array"
        ],
        "fieldtexts": []
    },
    "server_setup_billing": {
        "name": "server_setup_billing",
        "params": "",
        "description": [
            "This creates a repeat_invoice and an invoice in our system and then attempts to charge thier",
            "credit-card to pay it off. Information about the invoice and result of the payment attempt",
            "will be displayed after submitting the form.",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "admin_email_server_pending_setup": {
        "name": "admin_email_server_pending_setup",
        "params": "$id",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers",
            "if (function_exists('register_event')) {",
            "\tregister_event('get_service_types', 'get_server_types', 'servers');",
            "\tregister_event('parse_service_extra', 'parse_server_extra', 'servers');",
            "}",
            "admin_email_server_pending_setup()",
            "Emails Admins the VPS is Pending-Setup email template",
            "@param $id",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException",
            "@internal param int $vps the vps to email"
        ],
        "fieldtexts": []
    },
    "get_server_types": {
        "name": "get_server_types",
        "params": "$hide_empty = false",
        "description": [
            "get_server_types()",
            "gets an array of vps package types and returns them",
            "@param bool $hide_empty whether to hide the gaps in service ids",
            "@return array array of service types, standard service_types array"
        ],
        "fieldtexts": []
    },
    "parse_server_extra": {
        "name": "parse_server_extra",
        "params": "$server_extra",
        "description": [
            "parse_server_extra()",
            "parses the vps extra field, this is just a serialized string",
            "@param string $server_extra a serialized string",
            "@return array an unserialized array of the vps extra contents"
        ],
        "fieldtexts": []
    },
    "get_server_network_info": {
        "name": "get_server_network_info",
        "params": "$server_id",
        "description": [
            "returns an array of information about the switch\/port and vlans assigned to that server.",
            "@param int $server_id id of the server",
            "@return array|bool array of server network info or false if problem"
        ],
        "fieldtexts": []
    },
    "server_info": {
        "name": "server_info",
        "params": "$custom_tag, $dedicated_tag, $discount, $total_cost = false",
        "description": [
            "@param      $custom_tag",
            "@param      $dedicated_tag",
            "@param      $discount",
            "@param bool $total_cost",
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "display_server_summary": {
        "name": "display_server_summary",
        "params": "$cpu_id, $memory_id, $hd1_id, $hd2_id, $bandwidth_id, $ips_id, $os_id, $cp_id, $raid, $coupon = ''",
        "description": [
            "@param        $cpu_id",
            "@param        $memory_id",
            "@param        $hd1_id",
            "@param        $hd2_id",
            "@param        $bandwidth_id",
            "@param        $ips_id",
            "@param        $os_id",
            "@param        $cp_id",
            "@param        $raid",
            "@param string $coupon",
            "@return string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_dedicated_server2": {
        "name": "view_dedicated_server2",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers",
            "view_dedicated_server2()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_dedicated_server": {
        "name": "view_dedicated_server",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "put_extra": {
        "name": "put_extra",
        "params": "$extra",
        "description": [
            "@param $extra",
            "@return array|string"
        ],
        "fieldtexts": []
    },
    "get_innertell_order_hardware": {
        "name": "get_innertell_order_hardware",
        "params": "$serviceInfo",
        "description": [
            "@param array $serviceInfo",
            "@return string"
        ],
        "fieldtexts": []
    },
    "select_innertell_order_status": {
        "name": "select_innertell_order_status",
        "params": "$status",
        "description": [
            "@param $status",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_apcs": {
        "name": "get_apcs",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_available_apcs": {
        "name": "get_available_apcs",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "select_free_apc": {
        "name": "select_free_apc",
        "params": "$unit = -1, $port = -1, $location = '0.0.0'",
        "description": [
            "@param int    $unit",
            "@param int    $port",
            "@param string $assets",
            "@return string"
        ],
        "fieldtexts": []
    },
    "select_location": {
        "name": "select_location",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "select_block_size": {
        "name": "select_block_size",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "select_switch_port": {
        "name": "select_switch_port",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "select_ipblock": {
        "name": "select_ipblock",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "select_dedicated_tag": {
        "name": "select_dedicated_tag",
        "params": "$tag, $current = ''",
        "description": [
            "@param        $tag",
            "@param string $current",
            "@return string"
        ],
        "fieldtexts": []
    },
    "show_vlan": {
        "name": "show_vlan",
        "params": "$ip, $main_ip, $switchport",
        "description": [
            "@param $ip",
            "@param $main_ip",
            "@param $switchport"
        ],
        "fieldtexts": []
    },
    "setServerExistingVlan": {
        "name": "setServerExistingVlan",
        "params": "$serviceInfo, $ip",
        "description": [
            "sets a server to use an ip for an existing vlan",
            "@param array $serviceInfo",
            "@param string $ip"
        ],
        "fieldtexts": []
    },
    "setServerNewVlan": {
        "name": "setServerNewVlan",
        "params": "$serviceInfo, $asset = -1, $switchport = null, $ipblock = null, $blocksize = null, $location_param = null",
        "description": [
            "sets a new vlan for a server",
            "@param array $serviceInfo",
            "@param int|array $asset -1(default) all assets, 0 no asssets, asset id, or array of asset ids"
        ],
        "fieldtexts": []
    },
    "getServerIpv6": {
        "name": "getServerIpv6",
        "params": "$switchport, $assets",
        "description": [
            "gets server ipv6 sring",
            "@param string $switchport",
            "@param array $assets",
            "@return false|string"
        ],
        "fieldtexts": []
    },
    "getServerSpamStats": {
        "name": "getServerSpamStats",
        "params": "$ipranges",
        "description": [
            "gets the spam stats for the given ip ranges",
            "@param array $ipranges",
            "@return array"
        ],
        "fieldtexts": []
    },
    "view_dedicated_list_new": {
        "name": "view_dedicated_list_new",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers"
        ],
        "fieldtexts": []
    },
    "view_dedicated_list": {
        "name": "view_dedicated_list",
        "params": "",
        "description": [
            "Dedicated Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category servers"
        ],
        "fieldtexts": []
    },
    "view_servers_list": {
        "name": "view_servers_list",
        "params": "",
        "description": [
            "view_servers_list()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "setServerInfo": {
        "name": "setServerInfo",
        "params": "$serverInfo",
        "description": [
            "sets the server info",
            "@param array $serverInfo the server info array",
            "@return \\MyAdmin\\Services\\ServiceQueueHandler"
        ],
        "fieldtexts": []
    },
    "setQueueData": {
        "name": "setQueueData",
        "params": "$queueData = false",
        "description": [
            "sets the queue data",
            "@param mixed $queue data optional queue data",
            "@return \\MyAdmin\\Services\\ServiceQueueHandler"
        ],
        "fieldtexts": []
    },
    "camelCase": {
        "name": "camelCase",
        "params": "$string",
        "description": [
            "converts a string into camelCase formatting",
            "@param string $string a string to convert",
            "@return string the string in camelCase format"
        ],
        "fieldtexts": []
    },
    "snakeCase": {
        "name": "snakeCase",
        "params": "$string",
        "description": [
            "converts a string into snake_case formatting from either camelCase or PascalCase",
            "@param string $string a string to convert",
            "@return string the string in snake_case format"
        ],
        "fieldtexts": []
    },
    "loadService": {
        "name": "loadService",
        "params": "",
        "description": [
            "loads the service info, host server info, and parses the extra info",
            "@return \\MyAdmin\\Services\\ServiceQueue"
        ],
        "fieldtexts": []
    },
    "returnError": {
        "name": "returnError",
        "params": "$output",
        "description": [
            "returns the error message wrapped according to the returnOutput variabl3e",
            "@param string $output the error message",
            "@return array|false the approrpaite response to return from the calling function with"
        ],
        "fieldtexts": []
    },
    "checkSanity": {
        "name": "checkSanity",
        "params": "",
        "description": [
            "performs various pre-flight checks to ensure all is well before we render te page",
            "@return bool|array retuns true if all good, otherwise returns what the render function needs to then return"
        ],
        "fieldtexts": []
    },
    "accounts": {
        "name": "accounts",
        "params": "\\MyDb\\Generic $db, \\MyDb\\Generic $dbs",
        "description": [
            "Session::accounts()",
            "@param \\MyDb\\Generic $db",
            "@param \\MyDb\\Generic $dbs",
            "@return void"
        ],
        "fieldtexts": []
    },
    "getBrowser": {
        "name": "getBrowser",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "checkLoginLogs": {
        "name": "checkLoginLogs",
        "params": "$login_id, $loggedIn = false",
        "description": [
            "@param $login_id",
            "@param bool $loggedIn",
            "@return array"
        ],
        "fieldtexts": []
    },
    "login_logs": {
        "name": "login_logs",
        "params": "$login_id, $minutes_to_check = 60, $log_type = 'login'",
        "description": [
            "@param $login_id",
            "@param int $minutes_to_check",
            "@param string $log_type",
            "@return string"
        ],
        "fieldtexts": []
    },
    "update_dla": {
        "name": "update_dla",
        "params": "",
        "description": [
            "cloudflare ip ranges",
            "https:\/\/www.cloudflare.com\/ips\/",
            "103.21.244.0\/22",
            "103.22.200.0\/22",
            "103.31.4.0\/22",
            "104.16.0.0\/12",
            "108.162.192.0\/18",
            "131.0.72.0\/22",
            "141.101.64.0\/18",
            "162.158.0.0\/15",
            "172.64.0.0\/13",
            "173.245.48.0\/20",
            "188.114.96.0\/20",
            "190.93.240.0\/20",
            "197.234.240.0\/22",
            "198.41.128.0\/17",
            "incapsula.com ip range regexes",
            "got it from:",
            "curl -s -X POST https:\/\/my.incapsula.com\/api\/integration\/v1\/ips",
            "199.83.128.0\/21",
            "198.143.32.0\/19",
            "149.126.72.0\/21",
            "103.28.248.0\/22",
            "185.11.124.0\/22",
            "192.230.64.0\/18",
            "45.64.64.0\/22",
            "107.154.0.0\/16",
            "45.60.0.0\/16",
            "45.223.0.0\/16",
            "\t\t\/\/if (preg_match(\"\/^(?P<source>((45\\.(223|60)|107\\.154)\\.\\d*|192\\.230\\.[6-9][0-9]|192\\.230\\.1[0-2][0-9]|199\\.83\\.1[2-3][0-9]|198\\.143\\.[3-6][0-9]|149\\.126\\.7[2-9]|103\\.28\\.2[4-5][0-9]|185\\.11\\.12[4-7]|45\\.64\\.6[4-7])\\.\\d*) (?P<ip>.*)$\/\", $_SERVER['REMOTE_ADDR'], $matches)) {",
            "\t\tif (isset($_SERVER['REMOTE_ADDR']) && preg_match(\"\/^(?P<source>((45\\.(223|60)|107\\.154)\\.\\d*|192\\.230\\.[6-9][0-9]|192\\.230\\.1[0-2][0-9]|199\\.83\\.1[2-3][0-9]|198\\.143\\.[3-6][0-9]|149\\.126\\.7[2-9]|103\\.28\\.2[4-5][0-9]|185\\.11\\.12[4-7]|45\\.64\\.6[4-7])\\.\\d*)$\/\", $_SERVER['REMOTE_ADDR'], $matches)) {",
            "\t\t\tif (isset($_SERVER['HTTP_CLIENT_IP'])) {",
            "\t\t\t\t$ipaddress = $_SERVER['HTTP_CLIENT_IP'];",
            "\t\t\t} elseif (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) {",
            "\t\t\t\t$ipaddress = $_SERVER['HTTP_X_FORWARDED_FOR'];",
            "\t\t\t} elseif (isset($_SERVER['HTTP_X_FORWARDED'])) {",
            "\t\t\t\t$ipaddress = $_SERVER['HTTP_X_FORWARDED'];",
            "\t\t\t} elseif (isset($_SERVER['HTTP_FORWARDED_FOR'])) {",
            "\t\t\t\t$ipaddress = $_SERVER['HTTP_FORWARDED_FOR'];",
            "\t\t\t} elseif (isset($_SERVER['HTTP_FORWARDED'])) {",
            "\t\t\t\t$ipaddress = $_SERVER['HTTP_FORWARDED'];",
            "\t\t\t} else {",
            "\t\t\t\t$ipaddress = $_SERVER['REMOTE_ADDR'];",
            "\t\t\t}",
            "\t\t\tmyadmin_log('session', 'debug', 'Remote IP '.$_SERVER['REMOTE_ADDR'].' Matched Incapsula IP So Using IP '.$ipaddress, __LINE__, __FILE__);",
            "\t\t} elseif (isset($_SERVER['REMOTE_ADDR'])) {",
            "\t\t\t$ipaddress = $_SERVER['REMOTE_ADDR'];",
            "\t\t} else {",
            "\t\t\t$ipaddress = '127.0.0.1';",
            "\t\t}",
            "\t\tif (preg_match('\/^(.*),\/', $ipaddress, $matches)) {",
            "\t\t\tmyadmin_log('session', 'debug', 'Comma Seperated Remote Remote IP '.$ipaddress.' Matched First IP '.$matches[1], __LINE__, __FILE__);",
            "\t\t\t$ipaddress = $matches[1];",
            "\t\t}",
            "\t\t$validIp = filter_var($ipaddress, FILTER_VALIDATE_IP);",
            "\t\tif (empty($validIp)) {",
            "\t\t\t$validIp = 'UNKNOWN';",
            "\t\t}",
            "\t\treturn $validIp;",
            "\t}",
            "Session::update_dla()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "create": {
        "name": "create",
        "params": "$accountId, $ima, $browser = true, $expire = 0",
        "description": [
            "Session::create()",
            "@param mixed $accountId",
            "@param mixed $ima",
            "@param bool $browser",
            "@param int $expire"
        ],
        "fieldtexts": []
    },
    "destroy": {
        "name": "destroy",
        "params": "$sessionid = false",
        "description": [
            "Session::destroy()",
            "@param bool $sessionid",
            "@return void"
        ],
        "fieldtexts": []
    },
    "verify": {
        "name": "verify",
        "params": "",
        "description": [
            "Session::verify()",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "delappsession": {
        "name": "delappsession",
        "params": "$location",
        "description": [
            "Session::delappsession()",
            "@param mixed $location",
            "@return void"
        ],
        "fieldtexts": []
    },
    "appcache": {
        "name": "appcache",
        "params": "",
        "description": [
            "Session::appcache()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "appnocache": {
        "name": "appnocache",
        "params": "$location, $data",
        "description": [
            "Session::appnocache()",
            "@param mixed $location",
            "@param mixed $data",
            "@return void"
        ],
        "fieldtexts": []
    },
    "appsession": {
        "name": "appsession",
        "params": "$location = 'default', $value = '##NOTHING##'",
        "description": [
            "Session::appsession()",
            "@param string $location",
            "@param string $value",
            "@return array|null|string"
        ],
        "fieldtexts": []
    },
    "verify_csrf": {
        "name": "verify_csrf",
        "params": "$name",
        "description": [
            "Validates the CSRF Token submitted in a form",
            "@param string $name a unique name for this particular form",
            "@return bool weather or not it passes the check."
        ],
        "fieldtexts": []
    },
    "handle_section_category": {
        "name": "handle_section_category",
        "params": "$section, $category, $master = false",
        "description": [
            "adds section and category are added into the settings where needed",
            "@param string $section  the name of the section",
            "@param string $category the name of the category",
            "@param false|string $master defaults to false, othewise field name of master detailed section",
            "@return array"
        ],
        "fieldtexts": []
    },
    "add_label": {
        "name": "add_label",
        "params": "$section, $category, $name, $label, $tip, $initial_value, $master = false",
        "description": [
            "adds a description\/label into the system",
            "@param string $section the name of the section",
            "@param string $category the name of the category",
            "@param string $name the name of the setting",
            "@param string $label brief label\/description of the setting",
            "@param string $tip tooltip description of the setting",
            "@param string $initial_value initial\/current value of the setting",
            "@param bool $master (default FALSE) whether or not this is a master type setting, which means it gets duplicated for each host server"
        ],
        "fieldtexts": []
    },
    "add_text_setting": {
        "name": "add_text_setting",
        "params": "$section, $category, $name, $label, $tip, $initial_value, $master = false",
        "description": [
            "adds a setting into the system that uses a normal text input box.",
            "@param string $section the name of the section",
            "@param string $category the name of the category",
            "@param string $name the name of the setting",
            "@param string $label brief label\/description of the setting",
            "@param string $tip tooltip description of the setting",
            "@param string $initial_value initial\/current value of the setting",
            "@param bool $master (default FALSE) whether or not this is a master type setting, which means it gets duplicated for each host server"
        ],
        "fieldtexts": []
    },
    "add_dropdown_setting": {
        "name": "add_dropdown_setting",
        "params": "$section, $category, $name, $label, $tip, $initial_value, $values, $labels, $master = false",
        "description": [
            "adds a setting into the system using a select dropdown box.",
            "@param string $section the name of the section",
            "@param string $category the name of the category",
            "@param string $name the name of the setting",
            "@param string $label brief label\/description of the setting",
            "@param string $tip tooltip description of the setting",
            "@param string $initial_value initial\/current value of the setting",
            "@param array $values array of each of the values possible for the dropdown",
            "@param array $labels array of brief label\/description of each of the possible values for the dropdown",
            "@param bool $master (default FALSE) whether or not this is a master type setting, which means it gets duplicated for each host server"
        ],
        "fieldtexts": []
    },
    "add_radio_setting": {
        "name": "add_radio_setting",
        "params": "$section, $category, $name, $label, $tip, $initial_value, $values, $labels, $master = false",
        "description": [
            "adds a radio button setting into the system.",
            "@param string $section the name of the section",
            "@param string $category the name of the category",
            "@param string $name the name of the setting",
            "@param string $label brief label\/description of the setting",
            "@param string $tip tooltip description of the setting",
            "@param string $initial_value initial\/current value of the setting",
            "@param array $values array of each of the values possible for the dropdown",
            "@param array $labels array of brief label\/description of each of the possible values for the dropdown",
            "@param bool $master (default FALSE) whether or not this is a master type setting, which means it gets duplicated for each host server"
        ],
        "fieldtexts": []
    },
    "add_checkbox_setting": {
        "name": "add_checkbox_setting",
        "params": "$section, $category, $name, $label, $tip, $initial_value, $values, $labels, $master = false",
        "description": [
            "adds a checkbox type setting into the system",
            "@param string $section the name of the section",
            "@param string $category the name of the category",
            "@param string $name the name of the setting",
            "@param string $label brief label\/description of the setting",
            "@param string $tip tooltip description of the setting",
            "@param string $initial_value initial\/current value of the setting",
            "@param array $values array of each of the values possible for the dropdown",
            "@param array $labels array of brief label\/description of each of the possible values for the dropdown",
            "@param false|string $master (default FALSE) for no mater rleation or the name of the mater field"
        ],
        "fieldtexts": []
    },
    "add_select_master": {
        "name": "add_select_master",
        "params": "$section, $category, $module, $name, $label, $initial_value = false, $type = false, $location = false",
        "description": [
            "Makes A select dropdown box to select the master server",
            "@param string         $section  section",
            "@param string         $category category",
            "@param string         $module   module name",
            "@param string         $name     html name form element for the select box",
            "@param string         $label    label for the dropdown",
            "@param bool           $initial_value",
            "@param bool|false|int $type     false for all servers (default) or the service type of the servers",
            "@param bool|false|int $location false for all locations (default) or the location id you want",
            "@return void",
            "@internal param bool|int $current the current selected website master, or false for none selected"
        ],
        "fieldtexts": []
    },
    "add_select_master_autosetup": {
        "name": "add_select_master_autosetup",
        "params": "$section, $category, $module, $name, $label, $tip",
        "description": [
            "adds a select master autosetup checkbox setting.",
            "@param string $section the name of the section",
            "@param string $category the name of the category",
            "@param string $module the module the this is for",
            "@param string $name the name of the setting",
            "@param string $label brief label\/description of the setting",
            "@param string $tip tooltip description of the setting"
        ],
        "fieldtexts": []
    },
    "add_master_checkbox_setting": {
        "name": "add_master_checkbox_setting",
        "params": "$section, $category, $module, $field, $name, $label, $tip",
        "description": [
            "adds a master checkbox setting.",
            "@param string $section the name of the section",
            "@param string $category the name of the category",
            "@param string $module the module the this is for",
            "@param string $field the name of the db field",
            "@param string $name the name of the setting",
            "@param string $label brief label\/description of the setting",
            "@param string $tip tooltip description of the setting"
        ],
        "fieldtexts": []
    },
    "add_master_text_setting": {
        "name": "add_master_text_setting",
        "params": "$section, $category, $module, $field, $name, $label, $tip",
        "description": [
            "adds a master text input setting.",
            "@param string $section the name of the section",
            "@param string $category the name of the category",
            "@param string $module the module the this is for",
            "@param string $field the name of the db field",
            "@param string $name the name of the setting",
            "@param string $label brief label\/description of the setting",
            "@param string $tip tooltip description of the setting"
        ],
        "fieldtexts": []
    },
    "add_master_label": {
        "name": "add_master_label",
        "params": "$section, $category, $module, $field, $label, $tip, $code = false",
        "description": [
            "adds a master text input setting.",
            "@param string $section the name of the section",
            "@param string $category the name of the category",
            "@param string $module the module the this is for",
            "@param string $field the name of the db field",
            "@param string $label brief label\/description of the setting",
            "@param string $tip tooltip description of the setting",
            "@param string $code the code for the setting"
        ],
        "fieldtexts": []
    },
    "buy_ssl2": {
        "name": "buy_ssl2",
        "params": "",
        "description": [
            "SSL Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category SSL",
            "use Detain\\MyAdminGlobalSign\\GlobalSign;",
            "buy_ssl()",
            "orders a new SSL cert",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "buy_ssl": {
        "name": "buy_ssl",
        "params": "",
        "description": [
            "SSL Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category SSL",
            "use Detain\\MyAdminGlobalSign\\GlobalSign;",
            "buy_ssl()",
            "orders a new SSL cert",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "place_buy_ssl": {
        "name": "place_buy_ssl",
        "params": "$custid, $frequency, $coupon, $hostname, $request = false",
        "description": [
            "SSL Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category SSL",
            "place_buy_ssl()",
            "orders a new SSL cert",
            "@param      $custid",
            "@param      $frequency",
            "@param      $coupon",
            "@param      $hostname",
            "@param bool $request",
            "@return array|bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_ssl_types": {
        "name": "get_ssl_types",
        "params": "$hide_empty = false",
        "description": [
            "SSL Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category SSL",
            "register_event('get_service_types', 'get_ssl_types', 'ssl');",
            "register_event('parse_service_extra', 'parse_ssl_extra', 'ssl');",
            "register_event('verify_activated_services', 'verify_activated_ssl', 'ssl');",
            "get_ssl_types()",
            "gets an array of ssl service types",
            "@param bool $hide_empty whether to hide the gaps in service ids",
            "@return array array of service types"
        ],
        "fieldtexts": []
    },
    "select_ssl_type": {
        "name": "select_ssl_type",
        "params": "$default = 0, $name = 'ssl', $javascript = false, $extra = false",
        "description": [
            "select_ssl_type()",
            "builds a select dropdown to select the type of ssl cert",
            "@param integer $default",
            "@param string $name",
            "@param bool $javascript",
            "@return string the select ssl html string"
        ],
        "fieldtexts": []
    },
    "verify_activated_ssl": {
        "name": "verify_activated_ssl",
        "params": "$invoice",
        "description": [
            "verify_activated_ssl()",
            "verifies an activated SSL certificate.",
            "@todo This doesnt seem updated for ssl related stuff, is this used ?",
            "@param integer $invoice",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "reactivate_ssl": {
        "name": "reactivate_ssl",
        "params": "",
        "description": [
            "reactivate_ssl()",
            "reactivates an ssl cert with teh given id.  the id is passed via get\/post",
            "@return void"
        ],
        "fieldtexts": []
    },
    "parse_ssl_extra": {
        "name": "parse_ssl_extra",
        "params": "$extra",
        "description": [
            "parse_ssl_extra()",
            "parses the extra field unencoding and decompressing it.",
            "@param mixed $extra the compressed\/encocded extra data",
            "@return array the extra array"
        ],
        "fieldtexts": []
    },
    "ensure_csr": {
        "name": "ensure_csr",
        "params": "$id",
        "description": [
            "ensure_csr()",
            "given an ssl id, ensure that the extra field contains a csr",
            "@param integer $id the ssl id",
            "@return bool|array the extra array including a csr"
        ],
        "fieldtexts": []
    },
    "view_csr": {
        "name": "view_csr",
        "params": "",
        "description": [
            "view_csr()",
            "views a csr given the ssl cert id as a get\/post variable",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "make_csr": {
        "name": "make_csr",
        "params": "$fqdn, $email, $city, $state, $country, $company, $department",
        "description": [
            "make_csr()",
            "@param string $fqdn",
            "@param string $email",
            "@param string $city",
            "@param string $state",
            "@param string $country",
            "@param string $company",
            "@param string $department",
            "@return array"
        ],
        "fieldtexts": []
    },
    "verify_csr": {
        "name": "verify_csr",
        "params": "$csr",
        "description": [
            "verify_csr()",
            "@param string $csr",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_csr_keysize": {
        "name": "get_csr_keysize",
        "params": "$csr",
        "description": [
            "@param $csr",
            "@return string"
        ],
        "fieldtexts": []
    },
    "parse_csr": {
        "name": "parse_csr",
        "params": "$csr",
        "description": [
            "parse_csr()",
            "@param string $csr",
            "@return array"
        ],
        "fieldtexts": []
    },
    "ssl_get_admin_email": {
        "name": "ssl_get_admin_email",
        "params": "$hostName = null, $extra = ''",
        "description": [
            "@param null $hostName",
            "@return array|null"
        ],
        "fieldtexts": []
    },
    "update_ssl_contact_info": {
        "name": "update_ssl_contact_info",
        "params": "",
        "description": [
            "SSL Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category SSL",
            "use Detain\\MyAdminGlobalSign\\GlobalSign;",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "validate_buy_ssl": {
        "name": "validate_buy_ssl",
        "params": "$custid, $frequency, $request = false",
        "description": [
            "SSL Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category SSL",
            "place_buy_ssl()",
            "orders a new SSL cert",
            "@param $custid",
            "@param $frequency",
            "@param bool $request",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "view_ssl_certs_list": {
        "name": "view_ssl_certs_list",
        "params": "",
        "description": [
            "SSL Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category SSL",
            "view_ssl_certs_list()",
            "views a list of the ssl certs",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_ssl": {
        "name": "view_ssl",
        "params": "$id = false",
        "description": [
            "SSL Service Details and Management Class",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category SSL",
            "view_ssl()",
            "@param integer|bool $id",
            "@return void",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "getSimilarityPercentage": {
        "name": "getSimilarityPercentage",
        "params": "",
        "description": [
            "Function to compare two strings and return the similarity in percentage",
            "@access public",
            "@return float"
        ],
        "fieldtexts": []
    },
    "getDifferencePercentage": {
        "name": "getDifferencePercentage",
        "params": "",
        "description": [
            "Function to compare two strings and return the difference in percentage",
            "@access public",
            "@return float"
        ],
        "fieldtexts": []
    },
    "set_function_requirements": {
        "name": "set_function_requirements",
        "params": "",
        "description": [
            "sets up the local function requirement through the Loader class",
            "@return void"
        ],
        "fieldtexts": []
    },
    "function_requirements": {
        "name": "function_requirements",
        "params": "$function",
        "description": [
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package Plugins",
            "loads the files needed to run the given class or function",
            "@param $function",
            "@return bool whether or not it found the given function\/class"
        ],
        "fieldtexts": []
    },
    "get_loader": {
        "name": "get_loader",
        "params": "",
        "description": [
            "returns the function loader class",
            "@return MyAdmin\\Plugins\\Loader"
        ],
        "fieldtexts": []
    },
    "get_service_define": {
        "name": "get_service_define",
        "params": "$service",
        "description": [
            "@param $service",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "add_html_head": {
        "name": "add_html_head",
        "params": "$content",
        "description": [
            "adds some html lines to be injected into the page header",
            "@param string $content the html lines to add into the header",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_html_foot": {
        "name": "add_html_foot",
        "params": "$content",
        "description": [
            "adds some html lines to be injected into the page footer",
            "@param string $content the html lines to add into the footer",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_html_head_js": {
        "name": "add_html_head_js",
        "params": "$content",
        "description": [
            "adds some html lines to be injected into the js section of the header",
            "@param string $content the html js lines to add into the header",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_html_head_js_file": {
        "name": "add_html_head_js_file",
        "params": "$file",
        "description": [
            "adds some html lines to be injected into the js section of the header",
            "@param string $file the html js lines to add into the header",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_html_head_js_string": {
        "name": "add_html_head_js_string",
        "params": "$content",
        "description": [
            "adds some html lines to be injected into the js section of the header",
            "@param string $content the html js lines to add into the header",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_html_head_css": {
        "name": "add_html_head_css",
        "params": "$content",
        "description": [
            "adds some html lines to be injected into the css section of the header",
            "@param string $content the html css lines to add into the header",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_html_head_css_file": {
        "name": "add_html_head_css_file",
        "params": "$file",
        "description": [
            "adds some html lines to be injected into the css section of the header",
            "@param string $file the html css filename",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_html_head_css_string": {
        "name": "add_html_head_css_string",
        "params": "$content",
        "description": [
            "adds some html lines to be injected into the css section of the header",
            "@param string $content the html css content",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_html_foot_js": {
        "name": "add_html_foot_js",
        "params": "$content",
        "description": [
            "adds some html lines to be injected into the js section of the footer",
            "@param string $content the html js lines to add into the footer",
            "@return void"
        ],
        "fieldtexts": []
    },
    "capture_tables": {
        "name": "capture_tables",
        "params": "$header = false",
        "description": [
            "tf::capture_tables()",
            "@param bool $header",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_capture_header": {
        "name": "get_capture_header",
        "params": "",
        "description": [
            "tf::get_capture_header()",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_capture": {
        "name": "get_capture",
        "params": "",
        "description": [
            "tf::get_capture()",
            "@return array"
        ],
        "fieldtexts": []
    },
    "set_capture": {
        "name": "set_capture",
        "params": "$data",
        "description": [
            "tf::set_capture()",
            "@param mixed $data",
            "@return void"
        ],
        "fieldtexts": []
    },
    "remove_server": {
        "name": "remove_server",
        "params": "$server",
        "description": [
            "tf::remove_server()",
            "@param mixed $server",
            "@return void"
        ],
        "fieldtexts": []
    },
    "encrypt_old": {
        "name": "encrypt_old",
        "params": "$plain_text",
        "description": [
            "encrypts a string",
            "@param string $plain_text an unencrypted string you want encrypted",
            "@return string the encrypted string"
        ],
        "fieldtexts": []
    },
    "decrypt_old": {
        "name": "decrypt_old",
        "params": "$plain_text",
        "description": [
            "decrypts an encrypted string",
            "@param string $plain_text the encrypted string",
            "@return string the decrypted string"
        ],
        "fieldtexts": []
    },
    "encrypt": {
        "name": "encrypt",
        "params": "$plain_text",
        "description": [
            "encrypts a string",
            "@param string $plain_text an unencrypted string you want encrypted",
            "@return string the encrypted string"
        ],
        "fieldtexts": []
    },
    "decrypt": {
        "name": "decrypt",
        "params": "$plain_text",
        "description": [
            "decrypts an encrypted string",
            "@param string $plain_text the encrypted string",
            "@return string the decrypted string"
        ],
        "fieldtexts": []
    },
    "warning": {
        "name": "warning",
        "params": "$line, $file, $s",
        "description": [
            "generates a system warning",
            "@param mixed $line",
            "@param mixed $file",
            "@param mixed $s",
            "@return void"
        ],
        "fieldtexts": []
    },
    "is_plainpage": {
        "name": "is_plainpage",
        "params": "",
        "description": [
            "returns whether or not we're viewing a plain page",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "set_plainpage": {
        "name": "set_plainpage",
        "params": "$what",
        "description": [
            "toggles the plain page",
            "@param bool $what",
            "@return void"
        ],
        "fieldtexts": []
    },
    "tooltip": {
        "name": "tooltip",
        "params": "$choice, $lifetime = true, $width = false",
        "description": [
            "returns the html attributes for within like an <a href> link to produce a tooltip",
            "@param string $choice",
            "@param bool $lifetime",
            "@param bool $width",
            "@return string"
        ],
        "fieldtexts": []
    },
    "link": {
        "name": "link",
        "params": "$url, $extravars = ''",
        "description": [
            "generates an link including things like sessionid",
            "@param mixed $url",
            "@param string $extravars",
            "@return string"
        ],
        "fieldtexts": []
    },
    "terminate": {
        "name": "terminate",
        "params": "",
        "description": [
            "Similar to the PHP built in exit call, except this is used to close any open database connections, SSH connections, etc.",
            "@return void"
        ],
        "fieldtexts": []
    },
    "redirect": {
        "name": "redirect",
        "params": "$url, $meta = false",
        "description": [
            "Sends out a browser redirct loading a new URL into the browser window",
            "Note: $url MUST be a return from link()",
            "Example: obj->redirect(obj->link(POST_LOCATION,'x=y'))",
            "@param string $url",
            "@param bool|int $meta use meta refresh (default false) can be false, true, or refresh time in seconds",
            "@return bool|string returns nothing if doing header refresh, or string if doing meta"
        ],
        "fieldtexts": []
    },
    "is_gzipped": {
        "name": "is_gzipped",
        "params": "$string",
        "description": [
            "Internal Unexposed Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Validations",
            "determines if a string is a gzipped string supporting strings",
            "encoded with either gzencode or gzcompress",
            "@param string $string the string to check for compression",
            "@return bool whether or not the string was compmressed"
        ],
        "fieldtexts": []
    },
    "is_gzcompressed": {
        "name": "is_gzcompressed",
        "params": "$string",
        "description": [
            "determines if a string is a gzcompressed",
            "@param string $string the string to check for compression",
            "@return bool whether or not the string was compmressed"
        ],
        "fieldtexts": []
    },
    "is_gzencoded": {
        "name": "is_gzencoded",
        "params": "$string",
        "description": [
            "determines if a string is has been gzencoded",
            "@param string $string the string to check for compression",
            "@return bool whether or not the string was compmressed"
        ],
        "fieldtexts": []
    },
    "is_uuid": {
        "name": "is_uuid",
        "params": "$uuid",
        "description": [
            "determines whether or not the given string is a UUID",
            "@param string $uuid the possible uuid string to check",
            "@return bool true if it is a UUID, false if not"
        ],
        "fieldtexts": []
    },
    "check_email": {
        "name": "check_email",
        "params": "$str",
        "description": [
            "check_email()",
            "checks whether or not it looks like a valid email address",
            "@param string $str email address",
            "@return bool whether or not its valid"
        ],
        "fieldtexts": []
    },
    "is_serialized": {
        "name": "is_serialized",
        "params": "$data",
        "description": [
            "determines whether or not the string is in a serialize dformat",
            "@param $data",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "is_base64_encoded": {
        "name": "is_base64_encoded",
        "params": "$data",
        "description": [
            "determines whether or not the given string is a base64 encoded string",
            "@param string $data",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "is_url": {
        "name": "is_url",
        "params": "$text",
        "description": [
            "determines whethre or not the given string is a url in a valid url format.",
            "@param string $text the possible URL to check",
            "@return array|bool false if not a URL, otherwise an associative arrya of url parts"
        ],
        "fieldtexts": []
    },
    "verify_jformer_csrf": {
        "name": "verify_jformer_csrf",
        "params": "$name, $formValues",
        "description": [
            "Validates the CSRF Token submitted in a JFormer form",
            "@param string $name a unique name for this particular form",
            "@param array $formValues the jformer values",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "verify_bformer_csrf": {
        "name": "verify_bformer_csrf",
        "params": "$name, $formValues",
        "description": [
            "Validates the CSRF Token submitted in a BFormer form",
            "@param string $name a unique name for this particular form",
            "@param array $formValues the bformer values",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "verify_csrf_referrer": {
        "name": "verify_csrf_referrer",
        "params": "$line = false, $file = false",
        "description": [
            "Validates the clients Referrer as a CSRF check",
            "@param bool|false|int $line the line # initiating the referrer check, optional, defaults to false",
            "@param bool|false|string $file the file initiating the referrer check, optional, defaults to false",
            "@return bool weather or not it passes the check."
        ],
        "fieldtexts": []
    },
    "valid_hostname": {
        "name": "valid_hostname",
        "params": "$hostname",
        "description": [
            "valid_hostname()",
            "@param mixed $hostname",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "valid_email": {
        "name": "valid_email",
        "params": "$email = '', $check_dig = false",
        "description": [
            "valid_email()",
            "@param string $email",
            "@param bool $check_dig defaults to false, whether or not to also DIG the domain and check for a valid mx record.",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "valid_form_entry": {
        "name": "valid_form_entry",
        "params": "$entry",
        "description": [
            "valid_form_entry()",
            "@param mixed $entry",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "is_local_ip": {
        "name": "is_local_ip",
        "params": "$ip",
        "description": [
            "is_local_ip()",
            "returns whether or not the ip is a local IP address",
            "@param string $ip IP Address to check",
            "@return bool whether or not its a local IP Address"
        ],
        "fieldtexts": []
    },
    "valid_domain": {
        "name": "valid_domain",
        "params": "$domain",
        "description": [
            "valid_domain()",
            "@param mixed $domain",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "validIp": {
        "name": "validIp",
        "params": "$ip, $display_errors = true, $support_ipv6 = false",
        "description": [
            "returns whether or not the given IP is valid",
            "@param string $ip the ip address to validate",
            "@param bool $display_errors whether or not errors are displayed. defaults to true",
            "@param bool $support_ipv6 optional , defaults to false, whether or not to support ipv6, only works on php >= 5.2.0",
            "@return bool whether or not its a valid ip"
        ],
        "fieldtexts": []
    },
    "inner_loop": {
        "name": "inner_loop",
        "params": "$var, $escape = true",
        "description": [
            "loops through the request variables and handles any escaping needed",
            "@param array|string $var array of values",
            "@param bool $escape",
            "@return array|string resulting data"
        ],
        "fieldtexts": []
    },
    "buy_vps3": {
        "name": "buy_vps3",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "@return void"
        ],
        "fieldtexts": []
    },
    "buy_vps6": {
        "name": "buy_vps6",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps order form"
        ],
        "fieldtexts": []
    },
    "buy_vps": {
        "name": "buy_vps",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps order form"
        ],
        "fieldtexts": []
    },
    "java_vnc": {
        "name": "java_vnc",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "java_vnc()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "novnc": {
        "name": "novnc",
        "params": "$module = 'default', $id = 0",
        "description": [
            "noVNC Interface",
            "@param string $token",
            "@return string rendered novnc template",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "place_buy_vps": {
        "name": "place_buy_vps",
        "params": "$coupon_code, $service_cost, $slice_cost, $service_type, $original_slice_cost, $original_cost, $repeat_service_cost, $custid, $os, $slices, $platform, $controlpanel, $frequency, $location, $version, $hostname, $rootpass, $server = 0, $comment = ''",
        "description": [
            "API VPS Functions",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category API",
            "Places a validated VPS order",
            "@param int $coupon_code coupon code specified",
            "@param float $service_cost cost of service",
            "@param float $slice_cost single slice cost",
            "@param int $service_type service type",
            "@param float $original_slice_cost undiscounted slice cost",
            "@param float $original_cost undiscounted total initial cost",
            "@param float $repeat_service_cost repeat billing cost",
            "@param int $custid customer id",
            "@param string $os the os template",
            "@param int $slices # of slices",
            "@param string $platform os platform",
            "@param string $controlpanel optoinal control panel",
            "@param int $frequency billing frequency",
            "@param int $location service location\/datacenter",
            "@param string $version version of os",
            "@param string $hostname hostname",
            "@param string $rootpass root password",
            "@param int $server optional server id",
            "@param string $comment order comment",
            "@return array array of order data"
        ],
        "fieldtexts": []
    },
    "validate_buy_vps": {
        "name": "validate_buy_vps",
        "params": "$custid, $os, $slices, $platform, $controlpanel, $frequency, $location, $version, $hostname, $coupon, $rootpass",
        "description": [
            "Validates a VPS order for purchasing",
            "@param int $custid customer id",
            "@param string $os the os template",
            "@param int $slices # of slices",
            "@param string $platform os platform",
            "@param string $controlpanel optoinal control panel",
            "@param int $frequency billing frequency",
            "@param int $location service location\/datacenter",
            "@param string $version version of os",
            "@param string $hostname hostname",
            "@param string $coupon optional coupon string",
            "@param string $rootpass root password",
            "@return array array of validated vps order information"
        ],
        "fieldtexts": []
    },
    "view_vps3": {
        "name": "view_vps3",
        "params": "$id = false",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "view_vps3()",
            "@param bool|integer $id",
            "@return void"
        ],
        "fieldtexts": []
    },
    "view_vps_list": {
        "name": "view_vps_list",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "view_vps_list()"
        ],
        "fieldtexts": []
    },
    "vps_install_progress": {
        "name": "vps_install_progress",
        "params": "$serviceInfo, $module = 'vps'",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  VPS",
            "@param        $serviceInfo",
            "@param string $module",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_vps": {
        "name": "view_vps",
        "params": "$id = false",
        "description": [
            "view_vps()",
            "@param bool $id",
            "@return void"
        ],
        "fieldtexts": []
    },
    "vnc_client_instructions": {
        "name": "vnc_client_instructions",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_hdspace()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_backups": {
        "name": "vps_backups",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_ips()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_bandwidth2": {
        "name": "vps_bandwidth2",
        "params": "$target = false, $return = false",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  VPS",
            "@param bool $target",
            "@param bool $return",
            "@return string",
            "use Hisune\\EchartsPHP\\ECharts;",
            "Update the graph to maybe use stuff form these and finish this off",
            "@link http:\/\/gallery.echartsjs.com\/editor.html?c=xS1tBzcshe",
            "@link http:\/\/gallery.echartsjs.com\/editor.html?c=xHyHeaGvd",
            "@link https:\/\/ecomfe.github.io\/echarts-examples\/public\/editor.html?c=dynamic-data2",
            "@param mixed $target",
            "@param mixed $return",
            "@return string"
        ],
        "fieldtexts": []
    },
    "vps_bandwidth": {
        "name": "vps_bandwidth",
        "params": "$target = false, $return = false, $module = 'vps'",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  VPS",
            "@param bool $target",
            "@param bool $return",
            "@return string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_bandwidth_table": {
        "name": "vps_bandwidth_table",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS"
        ],
        "fieldtexts": []
    },
    "vps_cancel_queue": {
        "name": "vps_cancel_queue",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS"
        ],
        "fieldtexts": []
    },
    "vps_change_addon_ip": {
        "name": "vps_change_addon_ip",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_change_addon_ip()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_change_main_ip": {
        "name": "vps_change_main_ip",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_change_main_ip()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_features": {
        "name": "vps_features",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_features()",
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "parse_vps_extra": {
        "name": "parse_vps_extra",
        "params": "$service_extra",
        "description": [
            "VPS related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  VPS",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "define('VPS_MIN_IPS', 1);",
            "define('VPS_BW_MBPS', 1);",
            "define('VPS_BW_TOTAL', 2);",
            "if (function_exists('register_event')) {",
            "\tregister_event('get_service_types', 'get_vps_types', 'vps');",
            "\tregister_event('parse_service_extra', 'parse_vps_extra', 'vps');",
            "}",
            "parses the vps extra field, this is just a serialized string",
            "@param string $service_extra a serialized string",
            "@return array an unserialized array of the vps extra contents"
        ],
        "fieldtexts": []
    },
    "select_vps_type": {
        "name": "select_vps_type",
        "params": "$default = 0, $name = 'vps', $showprice = true, $limittype = false, $javascript = false, $limitprice = false",
        "description": [
            "builds a select box to select the vps type",
            "@param int $default optional default vps type",
            "@param string  $name optional field name, defaults to vps",
            "@param bool    $showprice defaults to true, whether or not to show the price",
            "@param bool    $limittype optional type limit, defaults to none",
            "@param bool    $javascript optoinal javascript triggering, defaults to false",
            "@param bool    $limitprice optional price limiting, defaults to false",
            "@return string the select string html"
        ],
        "fieldtexts": []
    },
    "get_vps_additional_hd": {
        "name": "get_vps_additional_hd",
        "params": "$id",
        "description": [
            "returns the additioanl hd space for a given vps",
            "@param int $id the vps id",
            "@return int the additional space in gb tghisr person has"
        ],
        "fieldtexts": []
    },
    "get_os_names": {
        "name": "get_os_names",
        "params": "",
        "description": [
            "returns an array of os names",
            "@return array array of os names"
        ],
        "fieldtexts": []
    },
    "get_os_name": {
        "name": "get_os_name",
        "params": "$os",
        "description": [
            "returns an os name",
            "@param int|string $os thet os to get the name for",
            "@return string the os name"
        ],
        "fieldtexts": []
    },
    "get_os_template_names": {
        "name": "get_os_template_names",
        "params": "$name = false",
        "description": [
            "get array of os template names",
            "@param bool|string $name optional template filename",
            "@return array|string returns the template name if filename specified or an array of template fielnames => names"
        ],
        "fieldtexts": []
    },
    "get_os_template_versions": {
        "name": "get_os_template_versions",
        "params": "",
        "description": [
            "gets an array of os template verions",
            "@return array array of template versions"
        ],
        "fieldtexts": []
    },
    "get_os_index_names": {
        "name": "get_os_index_names",
        "params": "$name = 0",
        "description": [
            "gets the os index names",
            "@param int $name optoinal os index",
            "@return array|string array of os index names or if index specified thten just that ones name as a string"
        ],
        "fieldtexts": []
    },
    "get_os_index_files": {
        "name": "get_os_index_files",
        "params": "$index = 0",
        "description": [
            "gets the os index files",
            "@param int $name optoinal os index",
            "@return array|string array of os index names or if index specified thten just that ones name as a string"
        ],
        "fieldtexts": []
    },
    "get_vps_slice_types": {
        "name": "get_vps_slice_types",
        "params": "",
        "description": [
            "We have several types of Servers available for use with VPS Hosting. You can get a list of",
            "the types available and  there cost per slice\/unit by making a call to this function",
            "@return array returns an array of vps types that are slice based"
        ],
        "fieldtexts": []
    },
    "get_vps_templates": {
        "name": "get_vps_templates",
        "params": "",
        "description": [
            "Each Type of Virtualization has its own set of installable OS templates\/images.   To get a list of them use this function.",
            "@return array an array of vps templates and info about each"
        ],
        "fieldtexts": []
    },
    "get_vps_platforms": {
        "name": "get_vps_platforms",
        "params": "",
        "description": [
            "gets the vps platform types.",
            "@return array array of  platform name => description"
        ],
        "fieldtexts": []
    },
    "get_vps_platforms_array": {
        "name": "get_vps_platforms_array",
        "params": "",
        "description": [
            "gets the vps platform types.",
            "@return array array containing 'platform' and 'name'"
        ],
        "fieldtexts": []
    },
    "get_vps_bw_text": {
        "name": "get_vps_bw_text",
        "params": "$slices",
        "description": [
            "gets the vps bandwidth text limits for the given slices",
            "@param int $slices the number of slices the vps has",
            "@return string the bandwidth string"
        ],
        "fieldtexts": []
    },
    "vps_screenshot": {
        "name": "vps_screenshot",
        "params": "$id, $click_url = false",
        "description": [
            "returns a link to an animated screenshot of your VPS.   Only works currently with KVM VPS servers",
            "@param int         $id        false to link to the image itself , otherwise a url",
            "@param string|bool $click_url (optional) url",
            "@return array status, status_text, screenshot image link and some html\/js to render and refresh it"
        ],
        "fieldtexts": []
    },
    "vps_get_servers": {
        "name": "vps_get_servers",
        "params": "",
        "description": [
            "gets an array of vps masters",
            "@return array the vps masters"
        ],
        "fieldtexts": []
    },
    "vps_free_ips_list": {
        "name": "vps_free_ips_list",
        "params": "$server_id = 0",
        "description": [
            "gets a list of free ips for all servers or a specified server",
            "@param int $server_id the server id to get the free ips for, or 0 (default) for all servers",
            "@return array"
        ],
        "fieldtexts": []
    },
    "vps_ips_list": {
        "name": "vps_ips_list",
        "params": "$server = false, $service = false, $used = false, $usable = false",
        "description": [
            "gets a list of vps ips with optional limiting by server, service, used, and usable",
            "@param false|int $server optional server id",
            "@param false|int $service optional service id",
            "@param false|int $used optional used status",
            "@param false|int $usable optional usable status",
            "@return array"
        ],
        "fieldtexts": []
    },
    "vps_get_server_name": {
        "name": "vps_get_server_name",
        "params": "$id",
        "description": [
            "get the name of the vps master\/host server your giving hte id for",
            "@param int $id id of the vps master",
            "@return string vps masters name"
        ],
        "fieldtexts": []
    },
    "get_vps_types": {
        "name": "get_vps_types",
        "params": "$hide_empty = false",
        "description": [
            "gets an array of vps package types and returns them",
            "@param bool $hide_empty whether to hide the gaps in service ids",
            "@return array array of service types, standard service_types array"
        ],
        "fieldtexts": []
    },
    "vps_get_password": {
        "name": "vps_get_password",
        "params": "$id",
        "description": [
            "gets the last stored password for the vps server.",
            "@param int $id the VPS you want the password for",
            "@return bool|string false if failure otherwise returns the last used VPS Password for the given vps"
        ],
        "fieldtexts": []
    },
    "vps_welcome_email": {
        "name": "vps_welcome_email",
        "params": "$id, $module = 'vps'",
        "description": [
            "send\/resend the VPS welcome email for the given VPS.",
            "@param int $id the VPS to send the welcome email for",
            "@param string  $module",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_windows_welcome_email": {
        "name": "vps_windows_welcome_email",
        "params": "$id, $module = 'vps'",
        "description": [
            "send\/resend the VPS welcome email for the given windows VPS.",
            "@param int $id the VPS to send the welcome email for",
            "@param string  $module",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_create": {
        "name": "vps_create",
        "params": "$id, $ip, $type, $hostname, $rootpass",
        "description": [
            "creates a vps on the host server based on the parameters provided",
            "@param int $id the vps id",
            "@param string $ip the ip for the vps",
            "@param int $type the vps service type",
            "@param string $hostname the hostname for the vps",
            "@param string $rootpass the password for the vps",
            "@return string returns the create string needed to create the vps",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_vps_locations": {
        "name": "get_vps_locations",
        "params": "$all = false",
        "description": [
            "returns a list of vps locations with optional limiting of ny4\/fl",
            "@param bool $all whether or not to list all locations, defaults to false",
            "@return array array of vps locations each in id => name format"
        ],
        "fieldtexts": []
    },
    "get_vps_locations_array": {
        "name": "get_vps_locations_array",
        "params": "$all = false",
        "description": [
            "returns a list of vps locations with optional limiting of ny4\/fl",
            "@param bool $all whether or not to list all locations, defaults to false",
            "@return array array of vps locations each with 'id' and 'name' elements"
        ],
        "fieldtexts": []
    },
    "get_vps_location": {
        "name": "get_vps_location",
        "params": "$location",
        "description": [
            "returns the text name of the vps location given a location id",
            "@param int $location the vps location integer",
            "@return string the text name of the vps location"
        ],
        "fieldtexts": []
    },
    "vps_get_server_id": {
        "name": "vps_get_server_id",
        "params": "$server",
        "description": [
            "vps_get_server_id()",
            "gets a server id from an ip address",
            "@param string $server the ip address of the server",
            "@return int the server id or 0 on no matching server"
        ],
        "fieldtexts": []
    },
    "vps_get_next_ip": {
        "name": "vps_get_next_ip",
        "params": "$targetserver = 0",
        "description": [
            "finds the next available IP address for a VPS server. it checks all the main IPs and additional IPs for the active",
            "servers and compares it against the list of total ips for that vps master and returns the first available one",
            "@param int $targetserver optional the target server id (defaults to 0 or any)",
            "@return bool|string false on failure, or returns the IP Address to assign to it"
        ],
        "fieldtexts": []
    },
    "vps_get_free_ips": {
        "name": "vps_get_free_ips",
        "params": "$targetserver = 0",
        "description": [
            "finds all available IP addresses for a VPS server. it checks all the main IPs and additional IPs for the active",
            "servers and compares it against the list of total ips for that vps master and returns the first available one",
            "@param int $targetserver the target server id",
            "@return bool|array false on failure, or returns an array of ips"
        ],
        "fieldtexts": []
    },
    "vps_get_next_id": {
        "name": "vps_get_next_id",
        "params": "$server",
        "description": [
            "gets the next available ID not used on a given server",
            "@param int $server the server to check IDs for",
            "@return int the next available ID"
        ],
        "fieldtexts": []
    },
    "admin_email_vps_pending_setup": {
        "name": "admin_email_vps_pending_setup",
        "params": "$id, $module = 'vps'",
        "description": [
            "admin_email_vps_pending_setup()",
            "Emails Admins the VPS is Pending-Setup email template",
            "@param int $id the vps to email",
            "@param string  $module",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "select_vps_master": {
        "name": "select_vps_master",
        "params": "$name = 'vps_server', $current = false, $type = false, $location = false, $extra = false",
        "description": [
            "Builds a select box of the vps masters.   Optionally limiting by type and location",
            "@param string      $name     optional name of the select box field",
            "@param bool|int    $current  optional, false if not specifying a current vps server",
            "@param bool|int    $type     optional, false if not specifying a type, the type  otherwise",
            "@param bool|int    $location optional, false if not specifying a location,, limits to location otherwise",
            "@param bool|string $extra    optional, false if not specifying anything extra, or  pass it for additional stuff in the select box",
            "@return string html select box to select a vps master"
        ],
        "fieldtexts": []
    },
    "select_vps_master_autosetups": {
        "name": "select_vps_master_autosetups",
        "params": "$name = 'vps_server', $label = '', $tip = '', $jformer = false, $extra = ''",
        "description": [
            "Builds a select box of the vps masters.   Optionally limiting by type and location",
            "@param string      $name  optional name of the select box field",
            "@param string      $label",
            "@param string      $tip",
            "@param bool        $jformer",
            "@param bool|string $extra optional, false if not specifying anything extra, or  pass it for additional stuff in the select box",
            "@return string html select box to select a vps master"
        ],
        "fieldtexts": []
    },
    "vps_get_masters": {
        "name": "vps_get_masters",
        "params": "",
        "description": [
            "gets a list of all the vps masters",
            "@return array array of records from the vps_masters table"
        ],
        "fieldtexts": []
    },
    "jformer_vps_select_master": {
        "name": "jformer_vps_select_master",
        "params": "$name = 'vps_master', $label = 'Server', $current = false, $type = false, $location = false",
        "description": [
            "Makes A select dropdown box to select the vps host \/ master server for use with JFormer.",
            "@param string       $name     html name form element for the select box",
            "@param string       $label    label for the dropdown",
            "@param bool|integer $current  the current selected vps master, or false for none selected",
            "@param bool|integer $type     optional type limit",
            "@param bool|integer $location optional location limit",
            "@return JFormComponentDropDown select box for the VPS Master server"
        ],
        "fieldtexts": []
    },
    "get_vps_free_ips": {
        "name": "get_vps_free_ips",
        "params": "",
        "description": [
            "gets a list of free ip per server",
            "@return array array of free ips for each server"
        ],
        "fieldtexts": []
    },
    "get_vps_next_server": {
        "name": "get_vps_next_server",
        "params": "$service_type, $location, $slices, $both = false",
        "description": [
            "gets the next vps server",
            "@param int  $service_type service type",
            "@param int  $location     location",
            "@param int  $slices       number of slices",
            "@param bool $both         whether or not both types for openvz\/virtuozzo should be selected from",
            "@return int the next server"
        ],
        "fieldtexts": []
    },
    "get_vps_next_servers": {
        "name": "get_vps_next_servers",
        "params": "",
        "description": [
            "gets the next setup servers for each vps type",
            "@return array an array of setup servers"
        ],
        "fieldtexts": []
    },
    "vps_resetup_vnc": {
        "name": "vps_resetup_vnc",
        "params": "$id, $queue = true, $justip = false, $module = 'vps'",
        "description": [
            "Ok this program basically is meant to be thrown in when power related functions are called on a KVM vps.",
            "The purpose is to basically",
            "1) simplify re-authorizing the person for VNC",
            "2) decide if they should use their New IP or   Last IP from VNC",
            "a) to do this i want to basically look at when they setup vnc last time,",
            "if their IPs did not match then it was a custom setting in which case they probably",
            "want to continue using it",
            "b) otherwise we'll fall back to their current IP",
            "@param int|array $id the id of the vps",
            "@param bool $queue defaults to enabled, whether to queue the item or return it",
            "@param bool $justip just return the new ipm defaults to false",
            "@param string $module optional module if you want ot use something other than vps (default)",
            "@return void|false|string if justip is true then returns the new ip, otherwise if no queue then returns the cmd to run or if queue then returns nothing"
        ],
        "fieldtexts": []
    },
    "get_vps_min_slices": {
        "name": "get_vps_min_slices",
        "params": "$serviceInfo",
        "description": [
            "gets the minimum number of slices a vps can goto based on disk usage,",
            "additional hdspace addons, and the service type.",
            "@param array $serviceInfo",
            "@return int minimum number of slices"
        ],
        "fieldtexts": []
    },
    "get_vps_max_slices": {
        "name": "get_vps_max_slices",
        "params": "$serviceInfo",
        "description": [
            "gets the maximum number of slices a vps can have",
            "@param array $serviceInfo",
            "@return int maximum number of slices"
        ],
        "fieldtexts": []
    },
    "generate_vps_mac": {
        "name": "generate_vps_mac",
        "params": "$id",
        "description": [
            "generates a MAC address for a VPS using the 00:16:3e prefix (Xensource) which seems meant for virtualization.",
            "and converts the passed sevice ID to hexadecimal and uses that for the last 6 digits of the mac.",
            "@param int $id",
            "@return string the generated mac adddress"
        ],
        "fieldtexts": []
    },
    "vps_list_free_ips": {
        "name": "vps_list_free_ips",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_list_free_ips()",
            "@return void"
        ],
        "fieldtexts": []
    },
    "vps_locations": {
        "name": "vps_locations",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_locations()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_map2": {
        "name": "vps_map2",
        "params": "",
        "description": [
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category General",
            "network map w\/ toggleable view changes"
        ],
        "fieldtexts": []
    },
    "get_vps_map": {
        "name": "get_vps_map",
        "params": "$id = false",
        "description": [
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category General",
            "build a mapping of the host servers and vps's on them",
            "@param bool $id",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "vps_map": {
        "name": "vps_map",
        "params": "",
        "description": [
            "network map w\/ toggleable view changes"
        ],
        "fieldtexts": []
    },
    "vps_move": {
        "name": "vps_move",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS"
        ],
        "fieldtexts": []
    },
    "vps_pending_list": {
        "name": "vps_pending_list",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_pending_list()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "vps_queue_handler": {
        "name": "vps_queue_handler",
        "params": "$serverInfo, $action, $queueData = false",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "use MyAdmin\\Services\\ServiceQueueHandler;",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "vps queue handler",
            "@param array  $serverInfo",
            "@param string $action",
            "@return bool|string",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_queue": {
        "name": "vps_queue",
        "params": "$id = false",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "use MyAdmin\\Services\\ServiceQueue;",
            "@param int|bool $id defaults to false, if specified tries using that id instead of the one passed",
            "@return array|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_raid_status": {
        "name": "vps_raid_status",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_raid_status()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_recent_orders": {
        "name": "vps_recent_orders",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_recent_orders()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_slices": {
        "name": "vps_slices",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "use MyAdmin\\Orm\\Invoice;",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_stats": {
        "name": "vps_stats",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "Generates Graphs for any of the various vps metrics",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_vnc_map": {
        "name": "vps_vnc_map",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_vnc_map()",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_cpanel_session": {
        "name": "get_cpanel_session",
        "params": "$id",
        "description": [
            "Webhosting Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@version $Revision$",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Webhosting",
            "creates a cpanel session for the given website id and returns the url for it",
            "@param int $id website id",
            "@return string url to use for session."
        ],
        "fieldtexts": []
    },
    "auto_cpanel_login": {
        "name": "auto_cpanel_login",
        "params": "",
        "description": [
            "Automatic CPanel Login to Client Web Interface"
        ],
        "fieldtexts": []
    },
    "auto_pleskautomation_login": {
        "name": "auto_pleskautomation_login",
        "params": "",
        "description": [
            "Webhosting Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@version $Revision$",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Webhosting",
            "use Detain\\MyAdminPleskAutomation\\PPAConnector;",
            "Automatic PleskAutomation Login to Client Web Interface"
        ],
        "fieldtexts": []
    },
    "auto_plesk_login": {
        "name": "auto_plesk_login",
        "params": "",
        "description": [
            "Webhosting Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@version $Revision$",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Webhosting",
            "Automatic Plesk Login to Client Web Interface"
        ],
        "fieldtexts": []
    },
    "buy_website": {
        "name": "buy_website",
        "params": "",
        "description": [
            "Website Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Website",
            "buy_website()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "convert_demo_site": {
        "name": "convert_demo_site",
        "params": "",
        "description": [
            "Website Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Website",
            "convert_demo_site()",
            "@throws Exception",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "extend_demo_site": {
        "name": "extend_demo_site",
        "params": "",
        "description": [
            "Website Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Website",
            "extend_demo_site()",
            "@throws Exception",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "place_buy_website": {
        "name": "place_buy_website",
        "params": "$coupon_code, $service_cost, $service_type, $original_cost, $repeat_service_cost, $custid, $frequency, $hostname, $password, $domain_register, $script = 0, $server = 0, $comment = '', $enable_domain_registering = false, $addon_dedicated_ip = false, $addon_whois_privacy = false",
        "description": [
            "Website Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Website",
            "@param int $coupon_code",
            "@param float $service_cost",
            "@param int $service_type",
            "@param float $original_cost",
            "@param float $repeat_service_cost",
            "@param int $custid",
            "@param int $frequency",
            "@param string $hostname",
            "@param string $password",
            "@param bool $domain_register",
            "@param int $script optional, 0 for none (default), script id of soft script ot install after website create",
            "@param int $server optional, 0 for auto choose (default), or the id of a server",
            "@param string $comment optional comment for the website",
            "@param bool $enable_domain_registering",
            "@param bool $addon_dedicated_ip",
            "@param bool $addon_whois_privacy",
            "@return array"
        ],
        "fieldtexts": []
    },
    "curl": {
        "name": "curl",
        "params": "$url, $post = [], $cookies = [], $header = false",
        "description": [
            "Class Softaculous_SDK",
            "class Softaculous_SDK",
            "{",
            "\t\/\/ The Login URL",
            "\tpublic $login = '';",
            "\tpublic $debug = 0;",
            "\tpublic $error = [];",
            "\t\/\/ THE POST DATA",
            "\tpublic $data = [];",
            "\tpublic $scripts = [];",
            "\tpublic $iscripts = [];",
            "\t\/\/ If some cookies need to be set for this",
            "\tpublic $cookie;",
            "\t\/\/ Response Format [serialize] [xml] [json]",
            "\t\/\/public $format = 'serialize';",
            "\tpublic $format = 'json';",
            "\tpublic $userpass = '';",
            "A Function to Login with Softaculous Parameters.",
            "@package      API",
            "@author       Jigar Dhulla",
            "@param        string $url URL of which response is needed",
            "@param        array $post POST DATA",
            "@param array $cookies",
            "@param bool $header",
            "@return string $resp Response of URL",
            "@since         4.1.3"
        ],
        "fieldtexts": []
    },
    "curl_call": {
        "name": "curl_call",
        "params": "$act, $post = []",
        "description": [
            "A Function to Login with Softaculous Parameters.",
            "@package      API",
            "@author       Jigar Dhulla",
            "@param        string $act Actions",
            "@param        array $post POST DATA",
            "@return       string $resp Response of Actions",
            "@since     \t 4.1.3"
        ],
        "fieldtexts": []
    },
    "curl_unserialize": {
        "name": "curl_unserialize",
        "params": "$act, $post = []",
        "description": [
            "A Function to Login with Softaculous Parameters.",
            "@package      API",
            "@author       Jigar Dhulla",
            "@param        string $act Actions",
            "@param        array $post POST DATA",
            "@return       string $resp Response of Actions",
            "@since     \t 4.1.3"
        ],
        "fieldtexts": []
    },
    "install": {
        "name": "install",
        "params": "InstalledRepositoryInterface $repo, PackageInterface $package",
        "description": [
            "{@inheritDoc}"
        ],
        "fieldtexts": []
    },
    "import": {
        "name": "import",
        "params": "$sid, $data = []",
        "description": [
            "A Function that will IMPORT existing installations in Softaculous",
            "@package\t\tAPI",
            "@author\t\tJigar Dhulla",
            "@param\t\tint $sid Script ID",
            "@param\t\tarray $data DATA to POST",
            "@return\t\tstring $resp Response of Actions. Default: Serialize",
            "@since\t\t4.1.3"
        ],
        "fieldtexts": []
    },
    "upgrade": {
        "name": "upgrade",
        "params": "$insid, $data = []",
        "description": [
            "A Function that will UPDATE scripts",
            "@package\t\tAPI",
            "@author\t\tJigar Dhulla",
            "@param\t\tstring $insid Installation ID",
            "@param\t\tarray $data DATA to POST",
            "@return\t\tstring $resp Response of Actions. Default: Serialize",
            "@since\t\t4.1.3"
        ],
        "fieldtexts": []
    },
    "restore": {
        "name": "restore",
        "params": "$name, $data = []",
        "description": [
            "A Function that will Restore the Backup",
            "@package\t\tAPI",
            "@author\t\tJigar Dhulla",
            "@param\t\tstring $name Backup File Name",
            "@param\t\tarray $data DATA to POST",
            "@return\t\tstring $resp Response of Actions. Default: Serialize",
            "@since\t\t4.1.3"
        ],
        "fieldtexts": []
    },
    "remove": {
        "name": "remove",
        "params": "$insid, $data = []",
        "description": [
            "A Function that will Remove the Installation",
            "@package\t\tAPI",
            "@author\t\tJigar Dhulla",
            "@param\t\tstring $insid Installation ID",
            "@param\t\tarray $data DATA to POST",
            "@return\t\tstring $resp Response of Actions. Default: Serialize",
            "@since\t\t4.1.3"
        ],
        "fieldtexts": []
    },
    "backup": {
        "name": "backup",
        "params": "$insid, $data = []",
        "description": [
            "A Function that will Backup the Installation. Backup process will go in background.",
            "You will receive an email in case of any error",
            "@package\t\tAPI",
            "@author\t\tJigar Dhulla",
            "@param\t\tstring $insid Installation ID",
            "@param\t\tarray $data DATA to POST",
            "@return\t\tstring $resp Response of Actions. Default: Serialize",
            "@since\t\t4.1.3"
        ],
        "fieldtexts": []
    },
    "remove_backup": {
        "name": "remove_backup",
        "params": "$backup_file",
        "description": [
            "A Function that will remove the Backup of the Installation. Remove Backup process will go in background.",
            "You will receive an email in case of any error",
            "@package\t\tAPI",
            "@author\t\tDivij Satra",
            "@param\t\tstring $backup_file Backup File Name e.g webmail.376_48118.2013-01-23_23-11-41.tar.gz",
            "@return\t\tstring $resp Response of Actions. Default: Serialize",
            "@since\t\t4.1.9"
        ],
        "fieldtexts": []
    },
    "download_backup": {
        "name": "download_backup",
        "params": "$download_file, $path = null",
        "description": [
            "A Function that will save the Backup File of the Installation at given path.",
            "@package\t\tAPI",
            "@author\t\tDivij Satra",
            "@param\t\tstring $download_file Backup File Name e.g webmail.376_48118.2013-01-23_23-11-41.tar.gz",
            "@param\t\tstring $path Path where Backup File will be saved e.g '\/opt'",
            "@return\t\tvoid",
            "@since\t\t4.1.9"
        ],
        "fieldtexts": []
    },
    "installations": {
        "name": "installations",
        "params": "$showupdates = false",
        "description": [
            "A Function that will list installations",
            "@package\t\tAPI",
            "@author\t\tJigar Dhulla",
            "@param\t\tbool $showupdates. [True : Show only installations with update.]",
            "@return\t\tarray $resp Installations",
            "@since\t\t4.1.3"
        ],
        "fieldtexts": []
    },
    "list_scripts": {
        "name": "list_scripts",
        "params": "",
        "description": [
            "A Function that will list scripts",
            "@package\t\tAPI",
            "@author\t\tJigar Dhulla",
            "@return array|bool",
            "@since\t\t4.1.3"
        ],
        "fieldtexts": []
    },
    "list_backups": {
        "name": "list_backups",
        "params": "",
        "description": [
            "A Function that will list Backups",
            "@package\t\tAPI",
            "@author\t\tJigar Dhulla",
            "@return\t\tarray $resp Backups",
            "@since\t\t4.1.3"
        ],
        "fieldtexts": []
    },
    "list_installed_scripts": {
        "name": "list_installed_scripts",
        "params": "",
        "description": [
            "A Function that will list installed scripts",
            "@package\t\tAPI",
            "@author\t\tJigar Dhulla",
            "@return array|bool",
            "@since\t\t4.1.3"
        ],
        "fieldtexts": []
    },
    "r_print": {
        "name": "r_print",
        "params": "$data",
        "description": [
            "Prints result",
            "@category\t Debug",
            "@param        Array $data",
            "@return       array"
        ],
        "fieldtexts": []
    },
    "plesk_fix_result": {
        "name": "plesk_fix_result",
        "params": "$result",
        "description": [
            "Webhosting",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Webhosting",
            "use Clue\\React\\Buzz\\Browser;",
            "use Psr\\Http\\Message\\ResponseInterface;",
            "recursively crawls the results and compacts certain types of arrays into a simpler and easier to read and reference form",
            "@param array $result",
            "@return array the result but compacted where possible"
        ],
        "fieldtexts": []
    },
    "unbilled_websites2": {
        "name": "unbilled_websites2",
        "params": "",
        "description": [
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_cpanel_users_list": {
        "name": "get_cpanel_users_list",
        "params": "$serverData",
        "description": [
            "Webhosting",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Webhosting",
            "Builds up a list of all the user accounts and domains on the host webserver and returns them",
            "@param array $serverData an array of host server information  from get_service",
            "@return array an array of the sits it detect",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "get_plesk_users_list": {
        "name": "get_plesk_users_list",
        "params": "$serverData",
        "description": [
            "Builds up a list of all the user accounts and domains on the host webserver and returns them",
            "You need to use \"sites\" and \"webspace\" command for get all domain list.",
            "you need to use both command because:",
            "* sites returns all domain except main domain (subscription)",
            "* webspace returns only main domain.",
            "@link  http:\/\/download1.parallels.net\/Plesk\/Doc\/en-US\/online\/plesk-api-rpc\/index.htm",
            "@param array $serverData an array of host server information  from get_service",
            "@return array an array of the sits it detect"
        ],
        "fieldtexts": []
    },
    "get_pleskautomation_users_list": {
        "name": "get_pleskautomation_users_list",
        "params": "$serverData",
        "description": [
            "Builds up a list of all the user accounts and domains on the host webserver and returns them",
            "You need to use \"sites\" and \"webspace\" command for get all domain list.",
            "you need to use both command because:",
            "* sites returns all domain except main domain (subscription)",
            "* webspace returns only main domain.",
            "@link  http:\/\/download1.parallels.net\/Plesk\/Doc\/en-US\/online\/plesk-api-rpc\/index.htm",
            "@param array $serverData an array of host server information  from get_service",
            "@return array an array of the sits it detect"
        ],
        "fieldtexts": []
    },
    "unbilled_websites": {
        "name": "unbilled_websites",
        "params": "",
        "description": [
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "validate_buy_website": {
        "name": "validate_buy_website",
        "params": "$custid, $frequency, $coupon, $tos, $service_type, $hostname, $password, $script = 0, $server = 0, $enable_domain_registering = false",
        "description": [
            "Website Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Website",
            "@param int $custid",
            "@param int $frequency",
            "@param string $coupon",
            "@param $tos",
            "@param int $service_type",
            "@param string $hostname",
            "@param string $password",
            "@param int $script optional, 0 for non, script to auto install with site",
            "@param int $server optional, 0 for auto choose (default), otherwise server id in website_masters table",
            "@param bool $enable_domain_registering",
            "@return array"
        ],
        "fieldtexts": []
    },
    "view_website2": {
        "name": "view_website2",
        "params": "$id = false",
        "description": [
            "Website Functionality",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Website",
            "view_website2()",
            "@param bool $id",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_website3": {
        "name": "view_website3",
        "params": "$id = false",
        "description": [
            "Webhosting Service Details and Management Class",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Webhosting",
            "view_website3()",
            "@param integer|bool $id",
            "@return void"
        ],
        "fieldtexts": []
    },
    "view_website_callback": {
        "name": "view_website_callback",
        "params": "$i",
        "description": [
            "Website Functionality",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Website",
            "@param $i",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "view_website4": {
        "name": "view_website4",
        "params": "$id = false",
        "description": [
            "view_website4()",
            "@param bool $id",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "view_website": {
        "name": "view_website",
        "params": "$id = false",
        "description": [
            "Website Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Website",
            "view_website()",
            "@param bool $id",
            "@return void",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "view_websites_list": {
        "name": "view_websites_list",
        "params": "",
        "description": [
            "Website Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Website",
            "view_website_list()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_website_platforms": {
        "name": "get_website_platforms",
        "params": "",
        "description": [
            "Webhosting related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Webhosting",
            "use Symfony\\Component\\EventDispatcher\\GenericEvent;",
            "if (function_exists('register_event')) {",
            "\tregister_event('get_service_types', 'get_website_types', 'webhosting');",
            "\tregister_event('parse_service_extra', 'parse_website_extra', 'webhosting');",
            "}",
            "gets the website platform types.",
            "@return array array of  platform name => description"
        ],
        "fieldtexts": []
    },
    "website_get_servers": {
        "name": "website_get_servers",
        "params": "",
        "description": [
            "gets an array of website masters",
            "@return array the website masters"
        ],
        "fieldtexts": []
    },
    "website_get_server_name": {
        "name": "website_get_server_name",
        "params": "$id",
        "description": [
            "get the name of the website master\/host server your giving hte id for",
            "@param int $id id of the website master",
            "@return string website masters name"
        ],
        "fieldtexts": []
    },
    "website_over_limits": {
        "name": "website_over_limits",
        "params": "$website",
        "description": [
            "whether or not the package $website is susceptible to package limits and if its over the limit.",
            "@param int $website the package id",
            "@return bool whether or not the package is over hte limit"
        ],
        "fieldtexts": []
    },
    "get_website_types": {
        "name": "get_website_types",
        "params": "$hide_empty = false",
        "description": [
            "gets an array of website package types and returns them",
            "@param bool $hide_empty whether to hide the gaps in service ids",
            "@return array array of service types, standard service_types array"
        ],
        "fieldtexts": []
    },
    "website_get_password": {
        "name": "website_get_password",
        "params": "$website",
        "description": [
            "gets the last stored password for the website server.",
            "@param integer $website the website you want the password for",
            "@return bool|string false if failure otherwise returns the last used website Password for the given website"
        ],
        "fieldtexts": []
    },
    "website_welcome_email": {
        "name": "website_welcome_email",
        "params": "$website",
        "description": [
            "send\/resend the website welcome email for the given website.",
            "@param integer $website the website to send the welcome email for",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "parse_website_extra": {
        "name": "parse_website_extra",
        "params": "$website_extra",
        "description": [
            "parses the website extra field, this is just a serialized string",
            "@param string $website_extra a serialized string",
            "@return array an unserialized array of the website extra contents"
        ],
        "fieldtexts": []
    },
    "update_website_info": {
        "name": "update_website_info",
        "params": "",
        "description": [
            "this is run on the website masters themselves and builds an array of data on the website master",
            "and sends the data to my",
            "@return void"
        ],
        "fieldtexts": []
    },
    "select_website_type": {
        "name": "select_website_type",
        "params": "$default = 0, $name = 'webhosting', $showprice = true, $limittype = false, $onchange = false, $limitprice = false, $extra = false",
        "description": [
            "builds a select box to select hte website type",
            "@param integer $default",
            "@param string $name",
            "@param bool $showprice",
            "@param bool $limittype",
            "@param bool|false|string $onchange",
            "@param bool $limitprice",
            "@param bool $extra",
            "@return string",
            "@internal param $ false|string"
        ],
        "fieldtexts": []
    },
    "select_website_master": {
        "name": "select_website_master",
        "params": "$name = 'website_server', $current = false, $type = false, $location = false, $extra = false",
        "description": [
            "Builds a select box of the website masters.   Optionally limiting by type and location",
            "@param string      $name     optional name of the select box field",
            "@param bool|int    $current  optional, false if not specifying a current website server",
            "@param bool|int    $type     optional, false if not specifying a type, the type  otherwise",
            "@param bool|int    $location optional, false if not specifying a location,, limits to location otherwise",
            "@param bool|string $extra    optional, false if not specifying anything extra, or  pass it for additional stuff in the select box",
            "@return string html select box to select a website master"
        ],
        "fieldtexts": []
    },
    "select_website_master_autosetups": {
        "name": "select_website_master_autosetups",
        "params": "$name = 'website_server', $label = '', $tip = '', $jformer = false, $extra = ''",
        "description": [
            "Builds a select box of the website masters.   Optionally limiting by type and location",
            "@param string $name optional name of the select box field",
            "@param string $label",
            "@param string $tip",
            "@param bool $jformer",
            "@param bool|string $extra optional, false if not specifying anything extra, or  pass it for additional stuff in the select box",
            "@return string html select box to select a website master",
            "@internal param bool|int $current optional, false if not specifying a current website server",
            "@internal param bool|int $type optional, false if not specifying a type, the type  otherwise",
            "@internal param bool|int $location optional, false if not specifying a location,, limits to location otherwise"
        ],
        "fieldtexts": []
    },
    "is_website_username_available": {
        "name": "is_website_username_available",
        "params": "$server, $username, $id = 0",
        "description": [
            "checks if the websites username is available or not",
            "@param int $server server id to look at",
            "@param string $username desired username to check",
            "@param int $id optional service id to exclude, leave blank or 0 to disable",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_new_webhosting_username": {
        "name": "get_new_webhosting_username",
        "params": "$id, $hostname, $server",
        "description": [
            "generates a username from hostname for server making sure its available",
            "@param int $id website id",
            "@param string $hostname hostname",
            "@param int $server server id",
            "@return string the username"
        ],
        "fieldtexts": []
    },
    "get_website_location": {
        "name": "get_website_location",
        "params": "$location",
        "description": [
            "get_website_location()",
            "returns the text name of the website location given a location id",
            "@param integer $location the website location integer",
            "@return string the text name of the website location"
        ],
        "fieldtexts": []
    },
    "website_get_server_id": {
        "name": "website_get_server_id",
        "params": "$server",
        "description": [
            "website_get_server_id()",
            "gets a server id from an ip address",
            "@param string $server the ip address of the server",
            "@return integer the server id"
        ],
        "fieldtexts": []
    },
    "website_get_next_ip": {
        "name": "website_get_next_ip",
        "params": "$targetserver = null",
        "description": [
            "finds the next available IP address for a website server.",
            "it checks all the main IPs and additional IPs for the active servers and",
            "compares it against the list of total ips for that website master and returns",
            "the first available one",
            "@param integer $targetserver the target server id",
            "@return bool|string false on failure, or returns the IP Address to assign to it"
        ],
        "fieldtexts": []
    },
    "get_website_next_server": {
        "name": "get_website_next_server",
        "params": "$service_type",
        "description": [
            "@param $service_type",
            "@return int"
        ],
        "fieldtexts": []
    },
    "website_get_next_id": {
        "name": "website_get_next_id",
        "params": "$server",
        "description": [
            "gets the next available ID not used on a given server",
            "@param integer $server the server to check IDs for",
            "@return integer the next available ID"
        ],
        "fieldtexts": []
    },
    "admin_email_website_setup_error": {
        "name": "admin_email_website_setup_error",
        "params": "$website",
        "description": [
            "Emails Admins the Website had a problem setting up",
            "@param integer $website the website to email",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "admin_email_website_pending_setup": {
        "name": "admin_email_website_pending_setup",
        "params": "$website",
        "description": [
            "Emails Admins the Website is Pending-Setup email template",
            "@param integer $website the website to email",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "website_get_masters": {
        "name": "website_get_masters",
        "params": "$type = false",
        "description": [
            "gets a list of all the website masters or website masters matching a specific type",
            "@param bool|false|int $type false for all servers (default) or the service type of the servers",
            "@return array array of records from the website_masters table"
        ],
        "fieldtexts": []
    },
    "jformer_website_select_master": {
        "name": "jformer_website_select_master",
        "params": "$name = 'website_master', $label = 'Server', $current = false, $type = false",
        "description": [
            "Makes A select dropdown box to select the website host \/ master server for use with JFormer.",
            "@param string $name html name form element for the select box",
            "@param string $label label for the dropdown",
            "@param bool|integer $current the current selected website master, or false for none selected",
            "@param bool|false|int $type false for all servers (default) or the service type of the servers",
            "@return \\JFormComponentDropDown select box for the Website Master server"
        ],
        "fieldtexts": []
    },
    "get_softaculous_scripts": {
        "name": "get_softaculous_scripts",
        "params": "",
        "description": [
            "@return array|mixed"
        ],
        "fieldtexts": []
    },
    "website_backups": {
        "name": "website_backups",
        "params": "",
        "description": [
            "website Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category webhosting",
            "website_ips()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "website_addon_get_free_ips": {
        "name": "website_addon_get_free_ips",
        "params": "$addon",
        "description": [
            "Webhosting Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Webhosting",
            "@param $addon",
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "website_ip": {
        "name": "website_ip",
        "params": "",
        "description": [
            "website_ip()",
            "@throws Exception",
            "@return void"
        ],
        "fieldtexts": []
    },
    "website_locations": {
        "name": "website_locations",
        "params": "",
        "description": [
            "Website Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Website",
            "website_locations()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "website_move": {
        "name": "website_move",
        "params": "",
        "description": [
            "Website Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Website",
            "Transfer website to another user"
        ],
        "fieldtexts": []
    },
    "website_ajax_error_handler": {
        "name": "website_ajax_error_handler",
        "params": "$errors, $title = false",
        "description": [
            "Website Functionality",
            "@author Joe Huss <detain@interserver.net>@interserver.net",
            "@copyright 2018",
            "@package   MyAdmin",
            "@category  Website",
            "displays a pretty error",
            "@param $errors",
            "@param bool $title",
            "@return string"
        ],
        "fieldtexts": []
    },
    "website_script_demo": {
        "name": "website_script_demo",
        "params": "$script",
        "description": [
            "just like regular ordering a website",
            "+ create account handling if needed in the same form",
            "+ login handling if needed in the same form",
            "+ logged in as\/logout message",
            "+ free",
            "+ expires after 14 days",
            "+ custom emails and handling",
            "+ only subdomains or encourage them?",
            "- domain lookup code",
            "+ subdomain checking code both for db and may on cpanel server too",
            "- payment handling",
            "+ redirect to view website &link=drupal for special welcome message",
            "@param int $script The Script To Setup",
            "@return string|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "website_software": {
        "name": "website_software",
        "params": "",
        "description": [
            "Webhosting related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "control softaculous script installs"
        ],
        "fieldtexts": []
    },
    "whm_select_cpmod": {
        "name": "whm_select_cpmod",
        "params": "",
        "description": [
            "WHM Api stuff",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category WHM",
            "Make sure to add the 2087, etc ports to \/etc\/csf\/csf.conf",
            "require_once __DIR__.'\/..\/..\/vendor\/CpanelInc\/xmlapi-php\/xmlapi.php';",
            "whm_select_cpmod()",
            "builds a jFormer select dropdown box to select the CPanel Theme",
            "@return JFormComponentDropDown gets a jFormer select dropdown component to select the CP Theme"
        ],
        "fieldtexts": []
    },
    "whm_select_language": {
        "name": "whm_select_language",
        "params": "",
        "description": [
            "@return JFormComponentDropDown"
        ],
        "fieldtexts": []
    },
    "whm_add_server": {
        "name": "whm_add_server",
        "params": "$id, $hostname, $ip, $hash",
        "description": [
            "@param $id",
            "@param $hostname",
            "@param $ip",
            "@param $hash",
            "@return array"
        ],
        "fieldtexts": []
    },
    "whm_get_servers": {
        "name": "whm_get_servers",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "whm_select_server": {
        "name": "whm_select_server",
        "params": "",
        "description": [
            "@return JFormComponentDropDown"
        ],
        "fieldtexts": []
    },
    "whm_set_server": {
        "name": "whm_set_server",
        "params": "$field, $cache = true",
        "description": [
            "@param string $field hostname or ip of the host server",
            "@param bool   $cache optional, defaults to true, whether or not to session cache the selection",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "whm_get_server": {
        "name": "whm_get_server",
        "params": "$field",
        "description": [
            "@param $field",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "whm_api": {
        "name": "whm_api",
        "params": "$server = false",
        "description": [
            "@param bool $server",
            "@return xmlapi",
            "@throws Exception"
        ],
        "fieldtexts": []
    },
    "whm_get_accounts": {
        "name": "whm_get_accounts",
        "params": "",
        "description": [
            "@return mixed",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_get_domains": {
        "name": "whm_get_domains",
        "params": "",
        "description": [
            "@return array",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_get_users": {
        "name": "whm_get_users",
        "params": "",
        "description": [
            "@return array",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_get_ips": {
        "name": "whm_get_ips",
        "params": "",
        "description": [
            "@return array",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_select_ip": {
        "name": "whm_select_ip",
        "params": "$current = false",
        "description": [
            "@param bool|string $current ip address of there current one or false to not specify a current one",
            "@return \\JFormComponentDropDown",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_select_domain": {
        "name": "whm_select_domain",
        "params": "$map = false, $current = false",
        "description": [
            "@param bool $map",
            "@param bool $current",
            "@return \\JFormComponentDropDown",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_user_sort": {
        "name": "whm_user_sort",
        "params": "$a, $b",
        "description": [
            "@param $a",
            "@param $b",
            "@return int"
        ],
        "fieldtexts": []
    },
    "whm_select_user": {
        "name": "whm_select_user",
        "params": "$map = false, $current = ''",
        "description": [
            "@param bool   $map",
            "@param string $current",
            "@return \\JFormComponentDropDown",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_select_reseller": {
        "name": "whm_select_reseller",
        "params": "$map = false, $current = ''",
        "description": [
            "@param bool   $map",
            "@param string $current optional, currently selected reseller",
            "@return \\JFormComponentDropDown",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_get_suspended": {
        "name": "whm_get_suspended",
        "params": "",
        "description": [
            "@return array",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_select_suspended_user": {
        "name": "whm_select_suspended_user",
        "params": "$map = false",
        "description": [
            "@param bool $map",
            "@return \\JFormComponentDropDown",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_getfeaturelist": {
        "name": "whm_getfeaturelist",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "whm_get_features": {
        "name": "whm_get_features",
        "params": "",
        "description": [
            "@return mixed",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_select_features": {
        "name": "whm_select_features",
        "params": "",
        "description": [
            "@return \\JFormComponentDropDown",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_loadavg": {
        "name": "whm_loadavg",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_getdiskusage": {
        "name": "whm_getdiskusage",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_getlanglist": {
        "name": "whm_getlanglist",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_reboot": {
        "name": "whm_reboot",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_addip": {
        "name": "whm_addip",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_delip": {
        "name": "whm_delip",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_sethostname": {
        "name": "whm_sethostname",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_setresolvers": {
        "name": "whm_setresolvers",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_version": {
        "name": "whm_version",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_gethostname": {
        "name": "whm_gethostname",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_listaccts": {
        "name": "whm_listaccts",
        "params": "",
        "description": [
            "@return bool"
        ],
        "fieldtexts": []
    },
    "whm_showbw": {
        "name": "whm_showbw",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_select_packages": {
        "name": "whm_select_packages",
        "params": "$use_js = true",
        "description": [
            "@param bool $use_js",
            "@return \\JFormComponentDropDown",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_get_packages": {
        "name": "whm_get_packages",
        "params": "",
        "description": [
            "@return array",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_listpkgs": {
        "name": "whm_listpkgs",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_get_resellers": {
        "name": "whm_get_resellers",
        "params": "",
        "description": [
            "@return mixed",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_listresellers": {
        "name": "whm_listresellers",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_listips": {
        "name": "whm_listips",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_adddns": {
        "name": "whm_adddns",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_addzonerecord": {
        "name": "whm_addzonerecord",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_editzonerecord": {
        "name": "whm_editzonerecord",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_select_zone": {
        "name": "whm_select_zone",
        "params": "$map = false",
        "description": [
            "@param bool $map",
            "@return \\JFormComponentDropDown",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_listzones": {
        "name": "whm_listzones",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_dumpzone": {
        "name": "whm_dumpzone",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_lookupnsip": {
        "name": "whm_lookupnsip",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_listmxs": {
        "name": "whm_listmxs",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_savemxs": {
        "name": "whm_savemxs",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_setupreseller": {
        "name": "whm_setupreseller",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_saveacllist": {
        "name": "whm_saveacllist",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_listacls": {
        "name": "whm_listacls",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_resellerstats": {
        "name": "whm_resellerstats",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_unsetupreseller": {
        "name": "whm_unsetupreseller",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_setacls": {
        "name": "whm_setacls",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_terminatereseller": {
        "name": "whm_terminatereseller",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_setresellerips": {
        "name": "whm_setresellerips",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_setresellerlimits": {
        "name": "whm_setresellerlimits",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_setresellermainip": {
        "name": "whm_setresellermainip",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_setresellerpackagelimit": {
        "name": "whm_setresellerpackagelimit",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_suspendreseller": {
        "name": "whm_suspendreseller",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_unsuspendreseller": {
        "name": "whm_unsuspendreseller",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_acctcounts": {
        "name": "whm_acctcounts",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_setresellernameservers": {
        "name": "whm_setresellernameservers",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_restartservice": {
        "name": "whm_restartservice",
        "params": "",
        "description": [
            "@return bool"
        ],
        "fieldtexts": []
    },
    "whm_servicestatus": {
        "name": "whm_servicestatus",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_fetchsslinfo": {
        "name": "whm_fetchsslinfo",
        "params": "",
        "description": [
            "@return bool"
        ],
        "fieldtexts": []
    },
    "whm_listcrts": {
        "name": "whm_listcrts",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_changepackage": {
        "name": "whm_changepackage",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_myprivs": {
        "name": "whm_myprivs",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_domainuserdata": {
        "name": "whm_domainuserdata",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_setsiteip": {
        "name": "whm_setsiteip",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_restoreaccount": {
        "name": "whm_restoreaccount",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_removeacct": {
        "name": "whm_removeacct",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_suspendacct": {
        "name": "whm_suspendacct",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_listsuspended": {
        "name": "whm_listsuspended",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_unsuspendacct": {
        "name": "whm_unsuspendacct",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_accountsummary": {
        "name": "whm_accountsummary",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_editquota": {
        "name": "whm_editquota",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_limitbw": {
        "name": "whm_limitbw",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_passwd": {
        "name": "whm_passwd",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_createacct": {
        "name": "whm_createacct",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "whm_choose_server": {
        "name": "whm_choose_server",
        "params": "",
        "description": [
            "@return bool"
        ],
        "fieldtexts": []
    },
    "whm_modifyacct": {
        "name": "whm_modifyacct",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "assign": {
        "name": "assign",
        "params": "$key, $value",
        "description": [
            "@param $key",
            "@param $value"
        ],
        "fieldtexts": []
    },
    "home_dashboard": {
        "name": "home_dashboard",
        "params": "$ajax = false",
        "description": [
            "Widget Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Widgets"
        ],
        "fieldtexts": []
    },
    "get_ticket_logo": {
        "name": "get_ticket_logo",
        "params": "$subject",
        "description": [
            "@param $subject",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_widget_ajax": {
        "name": "get_widget_ajax",
        "params": "$name, $url, $zindex = 0, $resizable = true, $style = ''",
        "description": [
            "Widget Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Widgets",
            "get_widget_ajax()",
            "loads a widget via ajax",
            "@param string $name widget name",
            "@param string $url widget url",
            "@param integer $zindex zindex value, 0 by default",
            "@param bool $resizable whether or not its resizable, true by default",
            "@param string $style any extra style information",
            "@return string string to output in the current page to load the widget"
        ],
        "fieldtexts": []
    },
    "get_widget": {
        "name": "get_widget",
        "params": "$name, $content, $zindex = 0, $title = false, $resizable = true, $style = ''",
        "description": [
            "get_widget()",
            "fetches a widget and renders it",
            "@param string      $name      name of the widget",
            "@param string      $content   content for the widget",
            "@param integer     $zindex    zindex value for the widget, 0 by default",
            "@param bool|string $title     an optional title to include in the widget",
            "@param bool        $resizable whether or not its resizable, true by default",
            "@param string      $style     any extra style information",
            "@return string the html for the widget",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_widget_new": {
        "name": "get_widget_new",
        "params": "$name, $content, $zindex = 0, $title = false, $resizable = true, $style = ''",
        "description": [
            "get_widget_new()",
            "fetches a widget and renders it",
            "@param string      $name      name of the widget",
            "@param string      $content   content for the widget",
            "@param integer     $zindex    zindex value for the widget, 0 by default",
            "@param bool|string $title     an optional title to include in the widget",
            "@param bool        $resizable whether or not its resizable, true by default",
            "@param string      $style     any extra style information",
            "@return string the html for the widget",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_widget_old": {
        "name": "get_widget_old",
        "params": "$name, $content, $zindex = 0, $title = false, $resizable = true, $style = ''",
        "description": [
            "get_widget_old()",
            "fetches a widget and renders it",
            "@param string      $name      name of the widget",
            "@param string      $content   content for the widget",
            "@param integer     $zindex    zindex value for the widget, 0 by default",
            "@param bool|string $title     an optional title to include in the widget",
            "@param bool        $resizable whether or not its resizable, true by default",
            "@param string      $style     any extra style information",
            "@return string the html for the widget"
        ],
        "fieldtexts": []
    },
    "last_logins": {
        "name": "last_logins",
        "params": "",
        "description": [
            "last_logins()",
            "adds the last logins widget to be rendered.",
            "@return void"
        ],
        "fieldtexts": []
    },
    "whos_online": {
        "name": "whos_online",
        "params": "",
        "description": [
            "whos_online()",
            "gets the whos online table",
            "@return string the rendered table",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "who_widget": {
        "name": "who_widget",
        "params": "",
        "description": [
            "who_widget()",
            "gets the whos online table in a widget form",
            "@return void"
        ],
        "fieldtexts": []
    },
    "package_widget": {
        "name": "package_widget",
        "params": "",
        "description": [
            "package_widget()",
            "gets the packages table in a widget form",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_packages": {
        "name": "get_packages",
        "params": "",
        "description": [
            "get_packages()",
            "gets the packages list for the current user",
            "@return string rendered packages table",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "widget_configuration_widget": {
        "name": "widget_configuration_widget",
        "params": "",
        "description": [
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_forum_rss": {
        "name": "get_forum_rss",
        "params": "",
        "description": [
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "get_rss_team": {
        "name": "get_rss_team",
        "params": "",
        "description": [
            "@return array|false"
        ],
        "fieldtexts": []
    },
    "get_rss": {
        "name": "get_rss",
        "params": "$url",
        "description": [
            "@return array|false"
        ],
        "fieldtexts": []
    },
    "rss_team": {
        "name": "rss_team",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "bweb_stats": {
        "name": "bweb_stats",
        "params": "",
        "description": [
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "last_login": {
        "name": "last_login",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_payments_by_month": {
        "name": "get_payments_by_month",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_payments_this_month": {
        "name": "get_payments_this_month",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_payments_this_month_alt": {
        "name": "get_payments_this_month_alt",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "payments_this_month": {
        "name": "payments_this_month",
        "params": "",
        "description": [
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "abuse_admin": {
        "name": "abuse_admin",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "abuse": {
        "name": "abuse",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "abuse()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_ip_regex": {
        "name": "get_ip_regex",
        "params": "",
        "description": [
            "returns the ip regex string",
            "@return string the ip regex string"
        ],
        "fieldtexts": []
    },
    "set_default_email_headers": {
        "name": "set_default_email_headers",
        "params": "",
        "description": [
            "sets the email headers to the default",
            "@return void"
        ],
        "fieldtexts": []
    },
    "set_all_ips": {
        "name": "set_all_ips",
        "params": "$all_ips",
        "description": [
            "@param $all_ips"
        ],
        "fieldtexts": []
    },
    "load_all_ips": {
        "name": "load_all_ips",
        "params": "",
        "description": [
            "loads all the IP blocks into the class and global all_ips"
        ],
        "fieldtexts": []
    },
    "load_client_ips": {
        "name": "load_client_ips",
        "params": "",
        "description": [
            "loads client ips into class and global all_client_ips"
        ],
        "fieldtexts": []
    },
    "connect": {
        "name": "connect",
        "params": "",
        "description": [
            "connects to the imap server"
        ],
        "fieldtexts": []
    },
    "register_preg_match": {
        "name": "register_preg_match",
        "params": "$regex, $against = 'headers', $field = 'ip'",
        "description": [
            "registers a regular expression with the imap class",
            "@param string $regex",
            "@param string $against",
            "@param string $field"
        ],
        "fieldtexts": []
    },
    "register_preg_match_all": {
        "name": "register_preg_match_all",
        "params": "$regex, $against = 'headers', $field = 'ip'",
        "description": [
            "registers a preg_match_all type match with the imap class",
            "@param string $regex",
            "@param string $against",
            "@param string $field"
        ],
        "fieldtexts": []
    },
    "delete_messages": {
        "name": "delete_messages",
        "params": "",
        "description": [
            "delete all the email messages in the given mailbox",
            "@return void"
        ],
        "fieldtexts": []
    },
    "disconnect": {
        "name": "disconnect",
        "params": "",
        "description": [
            "close connection to the imap server",
            "@return void"
        ],
        "fieldtexts": []
    },
    "getmsg": {
        "name": "getmsg",
        "params": "$mid",
        "description": [
            "loads the imap message and all its parts",
            "@param $mid"
        ],
        "fieldtexts": []
    },
    "getpart": {
        "name": "getpart",
        "params": "$mid, $p, $partno",
        "description": [
            "@param $mid",
            "@param $p",
            "@param $partno"
        ],
        "fieldtexts": []
    },
    "get_folders": {
        "name": "get_folders",
        "params": "",
        "description": [
            "displays the folders for an imap account"
        ],
        "fieldtexts": []
    },
    "list_folders": {
        "name": "list_folders",
        "params": "",
        "description": [
            "displays all he folders in the imap account"
        ],
        "fieldtexts": []
    },
    "getHooks": {
        "name": "getHooks",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "getMenu": {
        "name": "getMenu",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "getRequirements": {
        "name": "getRequirements",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "amazon_obtain_profile": {
        "name": "amazon_obtain_profile",
        "params": "",
        "description": [
            "Amazon Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing"
        ],
        "fieldtexts": []
    },
    "amazon_addressbook_widget": {
        "name": "amazon_addressbook_widget",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "amazon_wallet_widget": {
        "name": "amazon_wallet_widget",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "add_cc_new_data": {
        "name": "add_cc_new_data",
        "params": "$cc, $ccs, $data, $new_data, $prefix, $force = false",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "Updates the account data with new cc info",
            "@param array $cc array data for the cc to add",
            "@param array $ccs the ccs array",
            "@param array $data client data array",
            "@param array $new_data new data array",
            "@param string $prefix prefix for request variables",
            "@param bool $force optoinally enable force adding circumventing can_use_cc check",
            "@return void"
        ],
        "fieldtexts": []
    },
    "add_cc": {
        "name": "add_cc",
        "params": "$data, $prefix = '', $force = false",
        "description": [
            "adds a creditcard into the clients info",
            "@param array  $data",
            "@param string $prefix",
            "@param bool   $force",
            "@return array",
            "@throws \\Exception",
            "@parram bool $force"
        ],
        "fieldtexts": []
    },
    "authorize_cc": {
        "name": "authorize_cc",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "authorize_cc()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "cc_refund": {
        "name": "cc_refund",
        "params": "",
        "description": [
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "disable_cc": {
        "name": "disable_cc",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "disable_cc()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "disable_cc_whitelist": {
        "name": "disable_cc_whitelist",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "disable_cc_whitelist()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "enable_cc": {
        "name": "enable_cc",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "enable_cc()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "enable_cc_whitelist": {
        "name": "enable_cc_whitelist",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "enable_cc_whitelist()",
            "@return bool|void"
        ],
        "fieldtexts": []
    },
    "view_cc_transaction": {
        "name": "view_cc_transaction",
        "params": "",
        "description": [
            "Creditcard Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing"
        ],
        "fieldtexts": []
    },
    "get_cc_cats_and_fields": {
        "name": "get_cc_cats_and_fields",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "refund": {
        "name": "refund",
        "params": "$actid",
        "description": [
            "reverses a transaction",
            "NOTE: A refund can be claimed only within 7 days of buying\/renewing the license",
            "@param mixed $actid The Action ID for which you want to claim refund",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "voidTransaction": {
        "name": "voidTransaction",
        "params": "$trans_id, $cc_num, $custid",
        "description": [
            "void transaction",
            "@param $trans_id (16 digit Transaction Id)",
            "@param $cc_num (credit card number 16digits or last four digits)",
            "@param $custid",
            "@return array|string",
            "@description To void Credit Card transactions"
        ],
        "fieldtexts": []
    },
    "mask_cc": {
        "name": "mask_cc",
        "params": "$cc, $last = true",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "@param $cc",
            "@param bool $last",
            "@return string"
        ],
        "fieldtexts": []
    },
    "valid_cc": {
        "name": "valid_cc",
        "params": "$cc",
        "description": [
            "@param $cc",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_locked_ccs": {
        "name": "get_locked_ccs",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "select_cc_exp": {
        "name": "select_cc_exp",
        "params": "$default",
        "description": [
            "creates a select box for creditcard expiration dates",
            "@param string default the current expiration date",
            "@return string returns a select box of possible expiration dates"
        ],
        "fieldtexts": []
    },
    "can_use_cc": {
        "name": "can_use_cc",
        "params": "$data, $cc_holder = false, $check_disabled_cc = true, $cc_field = 'cc', $set_global_reason = false",
        "description": [
            "Checks whether or not the customer is allowed to use creditcards.  The current logic for this allows",
            "CC use if they are white-listed for cc use, or if they have there creditcard authorized, or if both",
            "there maxmind score and riskscore are under their respective cut-off limits.  It will fail if the",
            "RiskScore is not set but allows the Score to not be set (since its being phased out)",
            "@param array $data the clients data from \\Accounts->read()",
            "@param array|bool|false $cc_holder optional array that has the 'cc' field in it containing the cc if you dont want ot use data (like from request or the $cc  (parsed $ccs) )",
            "@param bool $check_disabled_cc",
            "@param string $cc_field optional field to specify the field in the cc holder that contains the cc number.",
            "@param bool $set_global_reason defaults to false, set to true to set a global cc_reason field w\/ the reason why it was denied.",
            "@return bool true if they can use cc's, false otherwise."
        ],
        "fieldtexts": []
    },
    "format_cc_exp": {
        "name": "format_cc_exp",
        "params": "",
        "description": [
            "formats the form posted cc expiration month and year into the format used in our accounts table",
            "@return string the properly formatted expiration date"
        ],
        "fieldtexts": []
    },
    "make_cc_decline": {
        "name": "make_cc_decline",
        "params": "$custid, $invoice_id",
        "description": [
            "generates a cc decline email body",
            "@param int $custid     the customer id #",
            "@param int $invoice_id the invoice id #",
            "@return array array w\/ the information needed to send an email or display the cc decline",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "email_cc_decline": {
        "name": "email_cc_decline",
        "params": "$custid, $invoice_id",
        "description": [
            "sends a cc decline email",
            "@param int $custid",
            "@param mixed $invoice_id",
            "@return void"
        ],
        "fieldtexts": []
    },
    "parse_ccs": {
        "name": "parse_ccs",
        "params": "$data",
        "description": [
            "given the account data array, it parses out and returns an array of ccs",
            "@param array $data account data array",
            "@return array the ccs array parsed and decrypted"
        ],
        "fieldtexts": []
    },
    "get_bad_cc": {
        "name": "get_bad_cc",
        "params": "",
        "description": [
            "gets a list of bad cc numbers",
            "@return array array of cc #s"
        ],
        "fieldtexts": []
    },
    "charge_card": {
        "name": "charge_card",
        "params": "$custid, $amount = false, $invoice = false, $module = 'default', $returnURL = false, $useHandlePayment = true",
        "description": [
            "Charges a given customers credit-card for the given amount",
            "@param integer $custid the id of the customer",
            "@param bool|float $amount the amount to charge",
            "@param bool|array|int $invoice the invoices to charge, can be a single invoice id in a string, or an array of invoiceids.",
            "@param string $module the module the invoices use.",
            "@param bool|string $returnURL defaults to false, dont include a return \/ try again url, true to use the current url, or a string specifying the url",
            "@param bool $useHandlePayment defaults to true, whether or not to call the handle payment processing after a successfull charge",
            "@return bool whether or not the charge was successfull.",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "auth_charge_card": {
        "name": "auth_charge_card",
        "params": "$custid, $cc, $cc_exp, $amount, $module = 'default', $charge_desc = '', $override_data = false",
        "description": [
            "performs an AUTH_ONLY type charge on a creditcard",
            "@param integer $custid customer id",
            "@param string $cc credit card number",
            "@param string $cc_exp cc expiration date in MM\/YYYY format",
            "@param float $amount amount to charge",
            "@param string $module (optional) module to use",
            "@param string $charge_desc (optional) description of charge",
            "@param bool|array $override_data (optional) array of data",
            "@return bool whether or not the charge was successfull."
        ],
        "fieldtexts": []
    },
    "get_cc_bank_number": {
        "name": "get_cc_bank_number",
        "params": "$cc",
        "description": [
            "gets the cc bank number \/ bin for the given encrypted cc",
            "@param string $cc the encrypted cc number",
            "@return string the bank id number(bin)"
        ],
        "fieldtexts": []
    },
    "get_cc_last_four": {
        "name": "get_cc_last_four",
        "params": "$cc",
        "description": [
            "gets the cc last 4 digits for the given encrypted cc",
            "@param string $cc the encrypted cc number",
            "@return string the last 4 digits"
        ],
        "fieldtexts": []
    },
    "charge_card_invoice": {
        "name": "charge_card_invoice",
        "params": "",
        "description": [
            "Billing Related Services",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing",
            "charge_card_invoice()",
            "charges an invoice to the clients creditcard.",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_authorizenet_fields": {
        "name": "get_authorizenet_fields",
        "params": "",
        "description": [
            "Returns a list of all the fields in an authorize.net csv response",
            "with name and description and the idx of each element matches",
            "@return array an array of  idx => name\/description fields for authorize.net"
        ],
        "fieldtexts": []
    },
    "map_authorizenet_fields": {
        "name": "map_authorizenet_fields",
        "params": "$result, $fields",
        "description": [
            "Returns a list of all the fields in an authorize.net csv response",
            "with name and description and the idx of each element matches",
            "@param $result",
            "@param $fields",
            "@return array an array of  idx => name\/description fields for authorize.net"
        ],
        "fieldtexts": []
    },
    "verify_cc_charge": {
        "name": "verify_cc_charge",
        "params": "$cc, $data",
        "description": [
            "@param $cc",
            "@param $data",
            "@return array"
        ],
        "fieldtexts": []
    },
    "verify_cc": {
        "name": "verify_cc",
        "params": "$cc, $data",
        "description": [
            "@param $cc",
            "@param $data",
            "@return array"
        ],
        "fieldtexts": []
    },
    "getDeactivate": {
        "name": "getDeactivate",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "loadProcessing": {
        "name": "loadProcessing",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "get_cloudlinux_licenses": {
        "name": "get_cloudlinux_licenses",
        "params": "",
        "description": [
            "Cloudlinux Functionality",
            "API Documentation at: .. ill fill this in later from forum posts",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "use Detain\\Cloudlinux\\Cloudlinux;",
            "returns a list of the cloudlinux licenses",
            "@return bool|mixed",
            "@throws \\Detain\\Cloudlinux\\XmlRpcException"
        ],
        "fieldtexts": []
    },
    "deactivate_cloudlinux": {
        "name": "deactivate_cloudlinux",
        "params": "$ipAddress, $type = false",
        "description": [
            "deactivatges a cloudlinux licenes",
            "@param string $ipAddress ip address to deactivate",
            "@param bool $type type of the lice4nse, can be 1 2 16 or leave blank\/false for all types on that ip"
        ],
        "fieldtexts": []
    },
    "deactivate_kcare": {
        "name": "deactivate_kcare",
        "params": "$ipAddress",
        "description": [
            "deactivates a kernelcare lciense",
            "@param $ipAddress ip address to deactivate"
        ],
        "fieldtexts": []
    },
    "getInstall": {
        "name": "getInstall",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "getUninstall": {
        "name": "getUninstall",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "getActivate": {
        "name": "getActivate",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "getDeactivateIp": {
        "name": "getDeactivateIp",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "getChangeIp": {
        "name": "getChangeIp",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "activate_cpanel": {
        "name": "activate_cpanel",
        "params": "$ipAddress, $package",
        "description": [
            "License Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "activate_cpanel()",
            "activates a cpanel license",
            "@param string $ipAddress ip address to activate",
            "@param integer $package the package type to activate",
            "@return string the response and command sent to activate cpanel"
        ],
        "fieldtexts": []
    },
    "deactivate_cpanel": {
        "name": "deactivate_cpanel",
        "params": "$ipAddress = false",
        "description": [
            "deactivate_cpanel()",
            "@param bool|false|string $ipAddress the ip to deactivate, or FALSE to use the request variable ip",
            "@return bool TRUE if successfull, flase otherwise"
        ],
        "fieldtexts": []
    },
    "verify_cpanel": {
        "name": "verify_cpanel",
        "params": "$ipAddress",
        "description": [
            "verify_cpanel()",
            "verifies a cpanel license with cpanel",
            "@param mixed $ipAddress ip address",
            "@return string the response from cpanel or 'Not Active' if no response"
        ],
        "fieldtexts": []
    },
    "get_cpanel_license_data_by_ip": {
        "name": "get_cpanel_license_data_by_ip",
        "params": "$ipAddress",
        "description": [
            "get_cpanel_license_data_by_ip()",
            "gets cpanel license data",
            "Sample output",
            "[ip] => 209.67.63.2",
            "[hostname] => neo.internetwebserver.net",
            "[valid] => 1",
            "[os] => Linux",
            "[expiredon] =>",
            "[groupid] => 30",
            "[company] => Interserver, Inc.",
            "[licenseid] => 1039954",
            "[adddate] => 1251993592",
            "[expirereason] =>",
            "[distro] => centos enterprise 5.3",
            "[version] => 11.24.5-RELEASE_38506",
            "[packageid] => 560",
            "[reason] => OK",
            "[envtype] => virtuozzo",
            "[osver] => 2.6.18-128.2.1.el5.028stab064.4.aviPAE",
            "[updateexpiretime] => 0",
            "@param string $ipAddress ip address",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "get_cpanel_licenses": {
        "name": "get_cpanel_licenses",
        "params": "",
        "description": [
            "@return array|mixed"
        ],
        "fieldtexts": []
    },
    "cpanel_kcare_addon": {
        "name": "cpanel_kcare_addon",
        "params": "",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "cpanel_kcare_addon()",
            "@return void",
            "@throws \\Detain\\Cloudlinux\\XmlRpcException",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "cpanel_ksplice_addon": {
        "name": "cpanel_ksplice_addon",
        "params": "",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "cpanel_ksplice_addon()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "cpanel_list": {
        "name": "cpanel_list",
        "params": "",
        "description": [
            "License Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses"
        ],
        "fieldtexts": []
    },
    "unbilled_cpanel": {
        "name": "unbilled_cpanel",
        "params": "",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "unbilled_cpanel()",
            "@return FALSE|null",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "getAddon": {
        "name": "getAddon",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "vps_add_cpanel": {
        "name": "vps_add_cpanel",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "Adds CPanel to a VPS",
            "@return void"
        ],
        "fieldtexts": []
    },
    "getReactivate": {
        "name": "getReactivate",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "getTerminate": {
        "name": "getTerminate",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_directadmin_license_types": {
        "name": "get_directadmin_license_types",
        "params": "",
        "description": [
            "DirectAdmin Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses"
        ],
        "fieldtexts": []
    },
    "directadmin_get_best_type": {
        "name": "directadmin_get_best_type",
        "params": "$module, $packageId, $order = false, $extra = false",
        "description": [
            "@param string $module",
            "@param $packageId",
            "@param bool $order",
            "@param bool|array $extra",
            "@return bool|string"
        ],
        "fieldtexts": []
    },
    "directadmin_req": {
        "name": "directadmin_req",
        "params": "$page, $post = '', $options = false",
        "description": [
            "@param string        $page",
            "@param string        $post",
            "@param bool|string[] $options",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_directadmin_licenses": {
        "name": "get_directadmin_licenses",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_directadmin_license": {
        "name": "get_directadmin_license",
        "params": "$lid",
        "description": [
            "@param $lid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_directadmin_license_by_ip": {
        "name": "get_directadmin_license_by_ip",
        "params": "$ipAddress",
        "description": [
            "@param $ipAddress",
            "@return bool|mixed"
        ],
        "fieldtexts": []
    },
    "directadmin_ip_to_lid": {
        "name": "directadmin_ip_to_lid",
        "params": "$ipAddress",
        "description": [
            "@param $ipAddress",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "activate_directadmin": {
        "name": "activate_directadmin",
        "params": "$ipAddress, $ostype, $pass, $email, $name, $domain = '', $custid = null",
        "description": [
            "activate_directadmin()",
            "@param $ipAddress",
            "@param boolean|string $ostype",
            "@param $pass",
            "@param $email",
            "@param string $name",
            "@param string $domain",
            "@param false|int $custid optional customer id or null for none"
        ],
        "fieldtexts": []
    },
    "deactivate_directadmin": {
        "name": "deactivate_directadmin",
        "params": "$ipAddress",
        "description": [
            "deactivate_directadmin()",
            "@param mixed $ipAddress",
            "@return string|null"
        ],
        "fieldtexts": []
    },
    "directadmin_deactivate": {
        "name": "directadmin_deactivate",
        "params": "$ipAddress",
        "description": [
            "@param $ipAddress",
            "@return null|string"
        ],
        "fieldtexts": []
    },
    "directadmin_makepayment": {
        "name": "directadmin_makepayment",
        "params": "$lid",
        "description": [
            "@param string $lid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "vps_add_directadmin": {
        "name": "vps_add_directadmin",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "Adds DirectAdmin to a VPS",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_fantastico_licenses": {
        "name": "get_fantastico_licenses",
        "params": "",
        "description": [
            "Fantastico Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "use Detain\\Fantastico\\Fantastico;",
            "get_fantastico_licenses()",
            "simple wrapper to get all the fantastico licenses.",
            "@return FALSE|array array of licenses. {@link Fantastico.getIpListDetailed}"
        ],
        "fieldtexts": []
    },
    "get_fantastico_list": {
        "name": "get_fantastico_list",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_available_fantastico": {
        "name": "get_available_fantastico",
        "params": "$type",
        "description": [
            "get_available_fantastico()",
            "@param mixed $type",
            "@return void"
        ],
        "fieldtexts": []
    },
    "activate_fantastico": {
        "name": "activate_fantastico",
        "params": "$ipAddress, $type",
        "description": [
            "activate_fantastico()",
            "@param mixed $ipAddress",
            "@param mixed $type",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_reusable_fantastico": {
        "name": "get_reusable_fantastico",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "reusable_fantastico": {
        "name": "reusable_fantastico",
        "params": "",
        "description": [
            "Fantastico Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "use Detain\\Fantastico\\Fantastico;",
            "reusable_fantastico()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_add_fantastico": {
        "name": "vps_add_fantastico",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "Adds Fantastico to a VPS",
            "@return void"
        ],
        "fieldtexts": []
    },
    "fraudrecord_hash": {
        "name": "fraudrecord_hash",
        "params": "$value",
        "description": [
            "fraudrecord Fraud Stuff",
            "API Downloaded @ http:\/\/www.maxmind.com\/download\/ccfd\/",
            "MaxMind Fields @ http:\/\/www.maxmind.com\/app\/ccv",
            "Fields and Descriptions @ http:\/\/www.maxmind.com\/app\/fraud-detection-manual",
            "Set your MaxMind Version @ http:\/\/www.maxmind.com\/app\/minfraud_version",
            "Score Formula from http:\/\/www.maxmind.com\/app\/ccfd_formula",
            "The \"score\" is calculated as follows:",
            "score = \t2.5 * isFreeEmail +",
            "2.5 * countryDoesntMatch +",
            "5 * isAnonymousProxy +",
            "5 * highRiskCountry +",
            "10 * min(distance,5000) \/ maxEarthArc +",
            "2 * binDoesntMatch +",
            "1 * binNameDoesntMatch +",
            "5 * carderEmail +",
            "5 * highRiskUsername +",
            "5 * highRiskPassword +",
            "5 * shipForward +",
            "2.5 * proxyScore",
            "Note this formula is capped at 10. maxEarthArc is defined as 20037 kilometers.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category General",
            "@param $value",
            "@return string"
        ],
        "fieldtexts": []
    },
    "fraudrecord_report": {
        "name": "fraudrecord_report",
        "params": "$custid, $module, $type, $text, $value",
        "description": [
            "@param $custid",
            "@param $module",
            "@param $type",
            "@param $text",
            "@param $value"
        ],
        "fieldtexts": []
    },
    "update_fraudrecord": {
        "name": "update_fraudrecord",
        "params": "$custid, $module = 'default', $ip = false",
        "description": [
            "update_fraudrecord()",
            "updates the fraudrecord data for a given user.",
            "@param integer     $custid customer id",
            "@param string      $module module to update it with",
            "@param bool|string $ip     ip address to register with the query, or false to have it use session ip",
            "@return bool pretty much always returns true",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "update_fraudrecord_noaccount": {
        "name": "update_fraudrecord_noaccount",
        "params": "$data",
        "description": [
            "update_fraudrecord_noaccount()",
            "does a fraudrecord update on an array of data without actually checking or modifying an actual account.",
            "@param array $data the array of user data to get fraudrecord info for.",
            "@return array the input $data but with the fraudrecord fields set",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "GetOrderByOrderID": {
        "name": "GetOrderByOrderID",
        "params": "$orderId",
        "description": [
            "Searching order information by Order ID",
            "@param string $orderId",
            "@return array"
        ],
        "fieldtexts": []
    },
    "GetOrderByDateRange": {
        "name": "GetOrderByDateRange",
        "params": "$fromdate, $todate",
        "description": [
            "GlobalSign::GetOrderByDateRange()",
            "@param string $fromdate optional from date for lookup in YYYY-MM-DDTHH:MM:SS.000Z format",
            "@param string $todate optional to date for lookup in YYYY-MM-DDTHH:MM:SS.000Z format",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "GetCertificateOrders": {
        "name": "GetCertificateOrders",
        "params": "$fromdate = '', $todate = '', $fqdn = '', $status = ''",
        "description": [
            "return a list of orders based on criteria provided.",
            "sample date might be 2017-10-08T04:54:12.000-05:00",
            "to access response its something like:",
            "$response->Response->SearchOrderDetails->SearchOrderDetail[0]->OrderID",
            "@param string $fromdate optional from date for lookup in YYYY-MM-DDTHH:MM:SS.000Z format",
            "@param string $todate optional to date for lookup in YYYY-MM-DDTHH:MM:SS.000Z format",
            "@param string $fqdn optional domain name to check\/lookup",
            "@param string $status optional status to check, status can be   1: INITIAL, 2: Waiting for phishing check, 3: Cancelled - Not Issued, 4: Issue completed, 5: Cancelled - Issued, 6: Waiting for revocation, 7: Revoked",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "ValidateOrderParameters": {
        "name": "ValidateOrderParameters",
        "params": "$product, $fqdn, $csr = '', $wildcard = false",
        "description": [
            "Checking order parameter validity",
            "@param string  $product",
            "@param string  $fqdn",
            "@param string $csr",
            "@param bool   $wildcard",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "GetDVApproverList": {
        "name": "GetDVApproverList",
        "params": "$fqdn",
        "description": [
            "Getting list of approver email addresses and OrderID for DVOrder (DomainSSL and AlphaSSL only)",
            "@param string $fqdn",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "renewValidateOrderParameters": {
        "name": "renewValidateOrderParameters",
        "params": "$product, $fqdn, $csr = '', $wildcard = false, $orderId = false",
        "description": [
            "GlobalSign::renewValidateOrderParameters()",
            "@param string  $product",
            "@param string  $fqdn",
            "@param string $csr",
            "@param bool   $wildcard",
            "@param bool   $orderId",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "ResendEmail": {
        "name": "ResendEmail",
        "params": "$orderID",
        "description": [
            "Resend Approver Emails for AlphaSSL & DomainSSL orders",
            "@param string $orderID",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "ChangeApproverEmail": {
        "name": "ChangeApproverEmail",
        "params": "$orderID, $approverEmail, $fqdn",
        "description": [
            "Change the email address that the approval request is sent to for domain validated products",
            "@param string $orderID",
            "@param string $approverEmail",
            "@param string $fqdn",
            "@return string",
            "@internal param mixed $fdqn"
        ],
        "fieldtexts": []
    },
    "ReIssue": {
        "name": "ReIssue",
        "params": "$orderID, $csr",
        "description": [
            "Certificate ReIssue",
            "@param string $orderID",
            "@param string $csr",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "DVOrder": {
        "name": "DVOrder",
        "params": "$product, $orderId, $approverEmail, $fqdn, $csr, $firstname, $lastname, $phone, $email, $wildcard = false",
        "description": [
            "Order AlphaSSL or DomainSSL Certificate with Approver Email validation",
            "@param string $product",
            "@param string $orderId",
            "@param string $approverEmail",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param bool  $wildcard",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "DVOrderWithoutCSR": {
        "name": "DVOrderWithoutCSR",
        "params": "$fqdn, $orderId, $approverEmail, $firstname, $lastname, $phone, $email, $wildcard = false",
        "description": [
            "GlobalSign::DVOrderWithoutCSR()",
            "@param string $fqdn",
            "@param string $orderId",
            "@param string $approverEmail",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param bool $wildcard",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "OVOrder": {
        "name": "OVOrder",
        "params": "$fqdn, $csr, $orderId, $approverEmail, $firstname, $lastname, $phone, $email, $company, $address, $city, $state, $zip, $wildcard = false",
        "description": [
            "Order OrganizationSSL Certificate",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $orderId",
            "@param string $approverEmail",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $company",
            "@param string $address",
            "@param string $city",
            "@param string $state",
            "@param string $zip",
            "@param bool  $wildcard",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "OVOrderWithoutCSR": {
        "name": "OVOrderWithoutCSR",
        "params": "$fqdn, $firstname, $lastname, $phone, $email, $company, $address, $city, $state, $zip, $wildcard = false",
        "description": [
            "GlobalSign::OVOrderWithoutCSR()",
            "@param string $fqdn",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $company",
            "@param string $address",
            "@param string $city",
            "@param string $state",
            "@param string $zip",
            "@param bool  $wildcard",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "EVOrder": {
        "name": "EVOrder",
        "params": "$fqdn, $csr, $firstname, $lastname, $phone, $email, $company, $address, $city, $state, $zip, $businessCategory, $agency",
        "description": [
            "Order ExtendedSSL Certificate",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $company",
            "@param string $address",
            "@param string $city",
            "@param string $state",
            "@param string $zip",
            "@param string $businessCategory PO, GE, or BE for Private Organization, Government Entity, or Business Entity",
            "@param string $agency",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "create_alphassl": {
        "name": "create_alphassl",
        "params": "$fqdn, $csr, $firstname, $lastname, $phone, $email, $approverEmail, $wildcard = false",
        "description": [
            "GlobalSign::create_alphassl()",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $approverEmail",
            "@param bool  $wildcard",
            "@return array"
        ],
        "fieldtexts": []
    },
    "create_domainssl": {
        "name": "create_domainssl",
        "params": "$fqdn, $csr, $firstname, $lastname, $phone, $email, $approverEmail, $wildcard = false",
        "description": [
            "GlobalSign::create_domainssl()",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $approverEmail",
            "@param bool  $wildcard",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "create_domainssl_autocsr": {
        "name": "create_domainssl_autocsr",
        "params": "$fqdn, $firstname, $lastname, $phone, $email, $approverEmail, $wildcard = false",
        "description": [
            "GlobalSign::create_domainssl_autocsr()",
            "@param string $fqdn",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $approverEmail",
            "@param bool  $wildcard",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "create_organizationssl": {
        "name": "create_organizationssl",
        "params": "$fqdn, $csr, $firstname, $lastname, $phone, $email, $company, $address, $city, $state, $zip, $approverEmail, $wildcard = false",
        "description": [
            "GlobalSign::create_organizationssl()",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $company",
            "@param string $address",
            "@param string $city",
            "@param string $state",
            "@param string $zip",
            "@param string $approverEmail",
            "@param bool  $wildcard",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "create_organizationssl_autocsr": {
        "name": "create_organizationssl_autocsr",
        "params": "$fqdn, $firstname, $lastname, $phone, $email, $company, $address, $city, $state, $zip, $wildcard",
        "description": [
            "GlobalSign::create_organizationssl_autocsr()",
            "@param string $fqdn",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $company",
            "@param string $address",
            "@param string $city",
            "@param string $state",
            "@param string $zip",
            "@param       $wildcard",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "create_extendedssl": {
        "name": "create_extendedssl",
        "params": "$fqdn, $csr, $firstname, $lastname, $phone, $email, $company, $address, $city, $state, $zip, $businessCategory, $agency",
        "description": [
            "GlobalSign::create_extendedssl()",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $company",
            "@param string $address",
            "@param string $city",
            "@param string $state",
            "@param string $zip",
            "@param string $businessCategory",
            "@param string $agency",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "renewAlphaDomain": {
        "name": "renewAlphaDomain",
        "params": "$fqdn, $csr, $firstname, $lastname, $phone, $email, $approverEmail, $wildcard = false, $sslType, $oldOrderId",
        "description": [
            "GlobalSIgn::renewAlphaDomain()",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $approverEmail",
            "@param bool $wildcard",
            "@param string $sslType",
            "@param string $oldOrderId",
            "@return array"
        ],
        "fieldtexts": []
    },
    "renewDVOrder": {
        "name": "renewDVOrder",
        "params": "$product, $orderId, $approverEmail, $fqdn, $csr, $firstname, $lastname, $phone, $email, $wildcard = false, $oldOrderID",
        "description": [
            "GlobalSign::renewDVOrder()",
            "@param string $product",
            "@param string $orderId",
            "@param string $approverEmail",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param bool  $wildcard",
            "@param string $oldOrderID",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "renewOVOrder": {
        "name": "renewOVOrder",
        "params": "$fqdn, $csr, $orderId, $approverEmail, $firstname, $lastname, $phone, $email, $company, $address, $city, $state, $zip, $wildcard = false, $oldOrderId",
        "description": [
            "GlobalSign::renewOVOrder()",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $orderId",
            "@param string $approverEmail",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $company",
            "@param string $address",
            "@param string $city",
            "@param string $state",
            "@param string $zip",
            "@param bool  $wildcard",
            "@param string $oldOrderId",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "renewOrganizationSSL": {
        "name": "renewOrganizationSSL",
        "params": "$fqdn, $csr, $firstname, $lastname, $phone, $email, $company, $address, $city, $state, $zip, $approverEmail, $wildcard = false, $oldOrderId",
        "description": [
            "GlobalSign::renewOrganizationSSL()",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $company",
            "@param string $address",
            "@param string $city",
            "@param string $state",
            "@param string $zip",
            "@param string $approverEmail",
            "@param bool  $wildcard",
            "@param string $oldOrderId",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "renewEVOrder": {
        "name": "renewEVOrder",
        "params": "$fqdn, $csr, $firstname, $lastname, $phone, $email, $company, $address, $city, $state, $zip, $businessCategory, $agency, $oldOrderId",
        "description": [
            "GlobalSign::EVOrder()",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $company",
            "@param string $address",
            "@param string $city",
            "@param string $state",
            "@param string $zip",
            "@param string $businessCategory",
            "@param string $agency",
            "@param string $oldOrderId",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "renewExtendedSSL": {
        "name": "renewExtendedSSL",
        "params": "$fqdn, $csr, $firstname, $lastname, $phone, $email, $company, $address, $city, $state, $zip, $businessCategory, $agency, $oldOrderId",
        "description": [
            "GlobalSign::renewExtendedSSL()",
            "@param string $fqdn",
            "@param string $csr",
            "@param string $firstname",
            "@param string $lastname",
            "@param string $phone",
            "@param string $email",
            "@param string $company",
            "@param string $address",
            "@param string $city",
            "@param string $state",
            "@param string $zip",
            "@param string $businessCategory",
            "@param string $agency",
            "@param string $oldOrderId",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "view_google_order": {
        "name": "view_google_order",
        "params": "",
        "description": [
            "Billing Services related functions.",
            "This file has the general functions used heavily both by billing related code.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Billing"
        ],
        "fieldtexts": []
    },
    "google_table": {
        "name": "google_table",
        "params": "$table, $data",
        "description": [
            "@param $table",
            "@param $data",
            "@return bool|string|\\TFTable",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "vps_hdspace": {
        "name": "vps_hdspace",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "vps_hdspace()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "getQueue": {
        "name": "getQueue",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "getSoapClientUrl": {
        "name": "getSoapClientUrl",
        "params": "$address",
        "description": [
            "gets the connection URL for the SoapClient",
            "@param string $address the ip address or domain name of the remote APi server",
            "@return array an array of the connection parameters for Soapclient"
        ],
        "fieldtexts": []
    },
    "getSoapClientParams": {
        "name": "getSoapClientParams",
        "params": "",
        "description": [
            "gets the preferred connection parameter settings for the SoapClient",
            "@return array an array of the connection parameters for Soapclient"
        ],
        "fieldtexts": []
    },
    "doAccountActivated": {
        "name": "doAccountActivated",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "doMailinglistSubscribe": {
        "name": "doMailinglistSubscribe",
        "params": "GenericEvent $event",
        "description": [
            "@param \\Symfony\\Component\\EventDispatcher\\GenericEvent $event"
        ],
        "fieldtexts": []
    },
    "doSetup": {
        "name": "doSetup",
        "params": "$accountId",
        "description": [
            "@param $accountId"
        ],
        "fieldtexts": []
    },
    "doEmailSetup": {
        "name": "doEmailSetup",
        "params": "$email, $params = false",
        "description": [
            "@param                  $email",
            "@param array|bool|false $params"
        ],
        "fieldtexts": []
    },
    "vps_ips_check_current": {
        "name": "vps_ips_check_current",
        "params": "$addon",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "function for the vps_ips addon code",
            "@param $addon",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "deactivate_ksplice": {
        "name": "deactivate_ksplice",
        "params": "$ipAddressUuid",
        "description": [
            "Ksplice Functionality",
            "API Documentation at http:\/\/www.ksplice.com\/uptrack\/api",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "deactivate a ksplice license",
            "@param string $ipAddressUuid can be either an ip or the uuid from the $serviceExtra['ksplice_uuid']"
        ],
        "fieldtexts": []
    },
    "activate_ksplice": {
        "name": "activate_ksplice",
        "params": "$ipAddressUuid",
        "description": [
            "@param $ipAddressUuid"
        ],
        "fieldtexts": []
    },
    "request": {
        "name": "request",
        "params": "$callstring",
        "description": [
            "performs the common request code",
            "@param mixed $callstring"
        ],
        "fieldtexts": []
    },
    "listMachines": {
        "name": "listMachines",
        "params": "",
        "description": [
            "Ksplice::listMachines()",
            "@return array"
        ],
        "fieldtexts": []
    },
    "describeMachine": {
        "name": "describeMachine",
        "params": "$uuid",
        "description": [
            "Ksplice::describeMachine()",
            "@param mixed $uuid",
            "@return void"
        ],
        "fieldtexts": []
    },
    "ipToUuid": {
        "name": "ipToUuid",
        "params": "$ipAddress",
        "description": [
            "Ksplice::ipToUuid()",
            "@param mixed $ipAddress",
            "@return string|bool"
        ],
        "fieldtexts": []
    },
    "authorizeMachine": {
        "name": "authorizeMachine",
        "params": "$uuid, $authorize = true",
        "description": [
            "Ksplice::authorizeMachine()",
            "@param mixed $uuid",
            "@param bool $authorize",
            "@return array"
        ],
        "fieldtexts": []
    },
    "deauthorizeMachine": {
        "name": "deauthorizeMachine",
        "params": "$uuid",
        "description": [
            "@param string|boolean $uuid",
            "@return array"
        ],
        "fieldtexts": []
    },
    "changeGroup": {
        "name": "changeGroup",
        "params": "$uuid, $groupName = ''",
        "description": [
            "Ksplice::changeGroup()",
            "@param mixed $uuid",
            "@param string $groupName",
            "@return void"
        ],
        "fieldtexts": []
    },
    "createRequest": {
        "name": "createRequest",
        "params": "$url, $method, $arr = null, $headers = null",
        "description": [
            "RESTClient::createRequest()",
            "@param mixed $url",
            "@param mixed $method",
            "@param mixed $arr",
            "@param mixed $headers",
            "@return void"
        ],
        "fieldtexts": []
    },
    "sendRequest": {
        "name": "sendRequest",
        "params": "$packet",
        "description": [
            "Performs a Plesk API request, returns raw API response text",
            "@param string $packet",
            "@return string",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "activate_litespeed": {
        "name": "activate_litespeed",
        "params": "$ipAddress = '', $field1, $field2, $period = 'monthly', $payment = 'credit', $cvv = false, $promocode = false",
        "description": [
            "LiteSpeed Licensing",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "@param string $ipAddress not used",
            "@param string $field1 Product type. Available values: \u201cLSWS\u201d or \u201cLSLB\u201d.",
            "@param string $field2 What kind of license. Available values: \u201c1\u201d: 1-CPU license, \u201c2\u201d: 2-CPU license,  \u201c4\u201d: 4-CPU license, \u201c8\u201d: 8-CPU license, \u201cV\u201d: VPS license, \u201cU\u201d: Ultra-VPS license (Available LSWS 4.2.2 and above.), If <order_product> is \u201cLSLB\u201d, <order_cpu> is not required.",
            "@param string $period Renewal period. Available values: \u201cmonthly\u201d, \u201cyearly\u201d, \u201cowned\u201d.",
            "@param mixed $payment Payment method. Available values: \u201ccredit\u201d: Use account credit. User can utilize \u201cAdd funds\u201d function to pre-deposit money, which will show up as account credit.      \u201ccreditcard\u201d: Use credit card to pay. The credit card is pre-defined in the account.  If there is available credit in the account, credit will be applied first, even when the payment method is set to \u201ccreditcard\u201d.",
            "@param mixed $cvv  (optional) Credit card security code. Try not to set this field. Only if your bank requires this (meaning that the transaction will fail without it) should you then supply this field. CVV code is not stored in the system, so if you need to set it, you have to set this field every time. Other information from your credit card will be taken from your user account.",
            "@param mixed $promocode  (optional) Promotional code. If you have a pre-assigned promotional code registered to your account, then you can set it here. Promotional codes are exclusive to each client. If your account is entitled to discounts at the invoice level, you do not need a promotional code.",
            "@return array array with the output result. see above for description of output.",
            "array (",
            "'LiteSpeed_eService' => array (",
            "'action' => 'Order',",
            "'license_id' => '36514',",
            "'license_type' => 'WS_L_1',",
            "'invoice_id' => '86300',",
            "'result' => 'incomplete',",
            "'message' => 'Invoice 86300 not paid. ',",
            "),",
            ")"
        ],
        "fieldtexts": []
    },
    "deactivate_litespeed": {
        "name": "deactivate_litespeed",
        "params": "$ipAddress",
        "description": [
            "@param $ipAddress"
        ],
        "fieldtexts": []
    },
    "litespeed_list": {
        "name": "litespeed_list",
        "params": "",
        "description": [
            "LiteSpeed Licensing",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "includes the litespeed.inc.php stuff",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "maxmind_compare": {
        "name": "maxmind_compare",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin"
        ],
        "fieldtexts": []
    },
    "maxmind_decode": {
        "name": "maxmind_decode",
        "params": "$encoded_maxmind",
        "description": [
            "MaxMind Fraud Stuff",
            "API Downloaded @ http:\/\/www.maxmind.com\/download\/ccfd\/",
            "MaxMind Fields @ http:\/\/www.maxmind.com\/app\/ccv",
            "Fields and Descriptions @ http:\/\/www.maxmind.com\/app\/fraud-detection-manual",
            "Set your MaxMind Version @ http:\/\/www.maxmind.com\/app\/minfraud_version",
            "Score Formula from http:\/\/www.maxmind.com\/app\/ccfd_formula",
            "The \"score\" is calculated as follows:",
            "score = \t2.5 * isFreeEmail +",
            "2.5 * countryDoesntMatch +",
            "5 * isAnonymousProxy +",
            "5 * highRiskCountry +",
            "10 * min(distance,5000) \/ maxEarthArc +",
            "2 * binDoesntMatch +",
            "1 * binNameDoesntMatch +",
            "5 * carderEmail +",
            "5 * highRiskUsername +",
            "5 * highRiskPassword +",
            "5 * shipForward +",
            "2.5 * proxyScore",
            "Note this formula is capped at 10. maxEarthArc is defined as 20037 kilometers.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category General",
            "use \\ForceUTF8\\Encoding;",
            "decodes stored maxmind data",
            "@param string $encoded_maxmind encoded maxmind string",
            "@return array|false the decoded maxmind data in an associative array, or false if there was a problem"
        ],
        "fieldtexts": []
    },
    "get_maxmind_field_descriptions": {
        "name": "get_maxmind_field_descriptions",
        "params": "",
        "description": [
            "This handles fraud protection"
        ],
        "fieldtexts": []
    },
    "update_maxmind": {
        "name": "update_maxmind",
        "params": "$customer, $module = 'default', $ip = false",
        "description": [
            "update_maxmind()",
            "updates the MaxMind data for a given user.",
            "@param integer     $customer customer id",
            "@param string      $module   module to update it with",
            "@param bool|string $ip       ip address to register with the query, or false to have it use session ip",
            "@return bool pretty much always returns true",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "update_maxmind_noaccount": {
        "name": "update_maxmind_noaccount",
        "params": "$data",
        "description": [
            "update_maxmind_noaccount()",
            "does a maxmind update on an array of data without actually checking or modifying an actual account.",
            "@param array $data the array of user data to get maxmind info for.",
            "@return array the input $data but with the maxmind fields set"
        ],
        "fieldtexts": []
    },
    "maxmind_lookup": {
        "name": "maxmind_lookup",
        "params": "$customer, $ip = false",
        "description": [
            "MaxMind Fraud Stuff",
            "@link https:\/\/dev.maxmind.com\/minfraud\/ minFraud Score, minFraud Insights, and minFraud Factors API",
            "@link https:\/\/dev.maxmind.com\/minfraud\/chargeback\/ minFraud Chargeback Web Service API",
            "@link https:\/\/github.com\/maxmind\/minfraud-api-php GitHub Repo",
            "Notification URL Sample:",
            "@link https:\/\/my.interserver.net\/payments\/maxmind_alert.php?i=24.24.24.24&maxmindID=1234ABCD&domain=sample.com&city=Anytown&region=CA&country=US&date=January+1,+1970&txnID=foo123&reason=IP+address+has+been+marked+as+a+high-risk+IP&reason_code=HIGH_RISK_IP&minfraud_id=2afb0d26-e3b4-4624-8e66-fd10e64b95df",
            "use MaxMind\\MinFraud;",
            "updates the MaxMind data for a given user.",
            "@param integer $customer customer id",
            "@param bool|string $ip ip address to register with the query, or false to have it use session ip",
            "@return bool pretty much always returns true"
        ],
        "fieldtexts": []
    },
    "view_maxmind": {
        "name": "view_maxmind",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "view_maxmind()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "smartslashes": {
        "name": "smartslashes",
        "params": "$string",
        "description": [
            "@param $string",
            "@return string"
        ],
        "fieldtexts": []
    },
    "my_array_shift": {
        "name": "my_array_shift",
        "params": "&$array",
        "description": [
            "@param $array",
            "@return array|mixed"
        ],
        "fieldtexts": []
    },
    "get_dir_array": {
        "name": "get_dir_array",
        "params": "$path",
        "description": [
            "@param $path",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "mb_functions": {
        "name": "mb_functions",
        "params": "$t = null",
        "description": [
            "@param null $t",
            "@return string"
        ],
        "fieldtexts": []
    },
    "readmore_manual": {
        "name": "readmore_manual",
        "params": "$flag",
        "description": [
            "@param $flag",
            "@return string"
        ],
        "fieldtexts": []
    },
    "return_enckey": {
        "name": "return_enckey",
        "params": "",
        "description": [
            "@return null|string"
        ],
        "fieldtexts": []
    },
    "decode_key": {
        "name": "decode_key",
        "params": "$keydata",
        "description": [
            "@param $keydata",
            "@return int|mixed|string"
        ],
        "fieldtexts": []
    },
    "decode_key1": {
        "name": "decode_key1",
        "params": "$keydata",
        "description": [
            "@param $keydata",
            "@return int|mixed"
        ],
        "fieldtexts": []
    },
    "encrpyt": {
        "name": "encrpyt",
        "params": "$pwd = null, $data = null, $decrypt = null, $is_license = null",
        "description": [
            "@param null $pwd",
            "@param null $data",
            "@param null $decrypt",
            "@param null $is_license",
            "@return string"
        ],
        "fieldtexts": []
    },
    "secure_access": {
        "name": "secure_access",
        "params": "$user_type, $tamper_test, $param1 = null, $param2 = null",
        "description": [
            "@param $user_type",
            "@param $tamper_test",
            "@param null $param1",
            "@param null $param2"
        ],
        "fieldtexts": []
    },
    "sca": {
        "name": "sca",
        "params": "$type = 'admin'",
        "description": [
            "@param string $type"
        ],
        "fieldtexts": []
    },
    "dcc": {
        "name": "dcc",
        "params": "$client_id, $encryption_key, $md5 = false",
        "description": [
            "@param $client_id",
            "@param $encryption_key",
            "@param bool $md5",
            "@return string"
        ],
        "fieldtexts": []
    },
    "ecc": {
        "name": "ecc",
        "params": "$client_id, $encryption_key = null, $billing_cc_num, $client_stamp = null",
        "description": [
            "@param $client_id",
            "@param null $encryption_key",
            "@param $billing_cc_num",
            "@param null $client_stamp",
            "@return string"
        ],
        "fieldtexts": []
    },
    "generic_select_menu": {
        "name": "generic_select_menu",
        "params": "$id, $name, $variable_name",
        "description": [
            "@param $id",
            "@param $name",
            "@param $variable_name",
            "@return string"
        ],
        "fieldtexts": []
    },
    "modernbill_client": {
        "name": "modernbill_client",
        "params": "",
        "description": [
            "modernbill_client()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "get_modernbill_client_by_id": {
        "name": "get_modernbill_client_by_id",
        "params": "$id",
        "description": [
            "ModernBill Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category ModernBill",
            "get_modernbill_client_by_id()",
            "gets a modernbill client by ID",
            "@param integer $id the ID of the modernbill client to get",
            "@return false|array returns false if no client found or the array of client info"
        ],
        "fieldtexts": []
    },
    "get_modernbill_client_by_email": {
        "name": "get_modernbill_client_by_email",
        "params": "$email",
        "description": [
            "get_modernbill_client_by_email()",
            "gets a modernbill client by email",
            "@param string $email the email of the modernbill client to get",
            "@return false|array returns false if no client found or the array of client info"
        ],
        "fieldtexts": []
    },
    "get_modernbill_clients": {
        "name": "get_modernbill_clients",
        "params": "$fields = false",
        "description": [
            "get_modernbill_clients()",
            "loads all the modernbill clients, returns all fields or you can specify which ones you want",
            "@param bool $fields",
            "@internal param array $array of fields you want returned, or leave blank for all",
            "@return array an array of clients"
        ],
        "fieldtexts": []
    },
    "get_modernbill_invoices": {
        "name": "get_modernbill_invoices",
        "params": "",
        "description": [
            "get_modernbill_invoices()",
            "loads all the invoices, if you are an admin it loads all invoices, otherwise just the invoices for your customer id",
            "@return array an array of invoices"
        ],
        "fieldtexts": []
    },
    "get_modernbill_packages": {
        "name": "get_modernbill_packages",
        "params": "",
        "description": [
            "get_modernbill_packages()",
            "gets all teh modernbill packages",
            "@return array an array of modernbill packages"
        ],
        "fieldtexts": []
    },
    "modernbill_invoices": {
        "name": "modernbill_invoices",
        "params": "",
        "description": [
            "modernbill_invoices()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "modernbill_packages": {
        "name": "modernbill_packages",
        "params": "",
        "description": [
            "modernbill_packages()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "parse_monitoring_extra": {
        "name": "parse_monitoring_extra",
        "params": "$extra",
        "description": [
            "Monitoring Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Monitoring",
            "parse_monitoring_extra()",
            "@param mixed $extra",
            "@return array|mixed"
        ],
        "fieldtexts": []
    },
    "get_monitoring_services": {
        "name": "get_monitoring_services",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_monitoring_data": {
        "name": "get_monitoring_data",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_umonitored_server_list": {
        "name": "get_umonitored_server_list",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_umonitored_server_table": {
        "name": "get_umonitored_server_table",
        "params": "",
        "description": [
            "@return bool|string",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "monitoring": {
        "name": "monitoring",
        "params": "",
        "description": [
            "monitoring()",
            "@return void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "monitoring_setup": {
        "name": "monitoring_setup",
        "params": "",
        "description": [
            "monitoring_setup()",
            "@return bool",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "monitoring_stats_data": {
        "name": "monitoring_stats_data",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "monitoring_stats",
            "returns an array of affiliate stats in the format of:",
            "Array(",
            "[2013-05-20] => Array(",
            "[total] => 16",
            "[rejected] => 12",
            "[failed] => 4",
            ")",
            "[2013-05-21] => Array(",
            "[total] => 26",
            "[default] => 1",
            "[paid] => 1",
            "[rejected] => 10",
            "[locked] => 6",
            "[failed] => 8",
            ")",
            ")",
            "@return array array of signups by date in Y-m-d format"
        ],
        "fieldtexts": []
    },
    "website_scan": {
        "name": "website_scan",
        "params": "",
        "description": [
            "Monitoring Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Monitoring"
        ],
        "fieldtexts": []
    },
    "array2object": {
        "name": "array2object",
        "params": "$data",
        "description": [
            "Method to convert Array -> Object -> Array.",
            "@param hash|array $data Containing array object",
            "@return \\hash|\\stdClass",
            "@since    3.4"
        ],
        "fieldtexts": []
    },
    "object2array": {
        "name": "object2array",
        "params": "$data",
        "description": [
            "@param $data",
            "@return array"
        ],
        "fieldtexts": []
    },
    "processOpenSRS": {
        "name": "processOpenSRS",
        "params": "$type = '', $data = ''",
        "description": [
            "@param string $type",
            "@param string $data",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "convertArray2Formatted": {
        "name": "convertArray2Formatted",
        "params": "$type = '', $data = ''",
        "description": [
            "@param string $type",
            "@param string $data",
            "@return string"
        ],
        "fieldtexts": []
    },
    "convertFormatted2array": {
        "name": "convertFormatted2array",
        "params": "$type = '', $data = ''",
        "description": [
            "@param string $type",
            "@param string $data",
            "@return mixed|string"
        ],
        "fieldtexts": []
    },
    "array_filter_recursive": {
        "name": "array_filter_recursive",
        "params": "$input",
        "description": [
            "@param $input",
            "@return array"
        ],
        "fieldtexts": []
    },
    "getEventTypes": {
        "name": "getEventTypes",
        "params": "",
        "description": [
            "returns an array of various events we can receive with descriptions and logically hierarchically sorted",
            "@return array"
        ],
        "fieldtexts": []
    },
    "xmlRequest": {
        "name": "xmlRequest",
        "params": "$action, $object, $options",
        "description": [
            "performs an XML APi Request and grabs the response returning it",
            "@param string $action the",
            "@param string $object",
            "@param string $options"
        ],
        "fieldtexts": []
    },
    "getCookieRaw": {
        "name": "getCookieRaw",
        "params": "$username, $password, $domain",
        "description": [
            "Gets an OpenSRS cookie for a domain name given the username and password for it. Can be called statically.",
            "@param string $username the username to authenticate with opensrs",
            "@param string $password the password for opensrs authentication",
            "@param string $domain the domain name",
            "@return false|string false if there was a problem or the string containing the cookie"
        ],
        "fieldtexts": []
    },
    "getNameserversRaw": {
        "name": "getNameserversRaw",
        "params": "$cookie",
        "description": [
            "Gets the current nameservers for a domain using an authenticated cookie. Can be called statically.",
            "@param string $cookie the cookie from opensrs_get_cookie()",
            "@return false|array false if error or an array of nameservers"
        ],
        "fieldtexts": []
    },
    "createNameserverRaw": {
        "name": "createNameserverRaw",
        "params": "$cookie, $hostname, $ip, $useDomain = false",
        "description": [
            "Creates a domain nameserver entry for a domain using an authenticated cookie. Can be called statically.",
            "@param string $cookie the cookie from opensrs_get_cookie() or domain name",
            "@param string $hostname hostname of the nameserver to add",
            "@param string $ip ip address of the nameserver to add",
            "@param bool $useDomain",
            "@return bool true if successful, false if there was an error."
        ],
        "fieldtexts": []
    },
    "deleteNameserverRaw": {
        "name": "deleteNameserverRaw",
        "params": "$cookie, $hostname, $ip, $useDomain = false",
        "description": [
            "Deletes a domain nameserver entry for a domain using an authenticated cookie. Can be called statically.",
            "@param string $cookie the cookie from opensrs_get_cookie()",
            "@param string $hostname hostname of the nameserver to delete",
            "@param string $ip ip address of the nameserver to delete",
            "@param bool $useDomain",
            "@return bool true if successful, false if there was an error."
        ],
        "fieldtexts": []
    },
    "transferCheck": {
        "name": "transferCheck",
        "params": "$domain, $checkStatus = 0, $getRequestAddress = 0",
        "description": [
            "Checks to see if the specified domain can be transferred in to OpenSRS, or",
            "from one OpenSRS Reseller to another. This call can also be used to check",
            "the status of the last transfer request on a given domain name.",
            "When you use the check_transfer action prior to initiating a transfer, the",
            "transferable response parameter is most relevant, and if transferable = 0 ,",
            "the reason field is also important.",
            "When you use the check_transfer action to determine the progress of a",
            "transfer, the status parameter is most important. If the response indicates",
            "that the transfer is in progress and the status is pending_registry , the",
            "transfer will be scheduled to complete within 5 minutes of the query; running",
            "the query expedites the process and causes the transfer to complete within 5",
            "minutes.",
            "@param string $domain the domain name to check transfer status of",
            "@param int $checkStatus Flag to request the status of a transfer request. If the transfer state is returned as pending_registry and the Registry shows OpenSRS as the Registrar of record, OpenSRS schedules the completion of gTLD transfers. Allowed values are 0 or 1.",
            "@param int $getRequestAddress Flag to request the registrant's contact email address. This is useful if you want to make sure that your client can receive mail at that address to acknowledge the transfer. Allowed values are 0 or 1.",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "lookupGetDomain": {
        "name": "lookupGetDomain",
        "params": "$domain, $type = 'all_info'",
        "description": [
            "Queries various types of data regarding the user's domain. For example, the",
            "all_info type allows you to retrieve all data for the domain linked to the",
            "current cookie. The list type queries the list of domains associated with the",
            "user's profile. The list type can also be used to return a list of domains that",
            "expire within a specified range. The nameservers type returns the",
            "nameservers currently acting as DNS servers for the domain.",
            "@param string $domain the domain name to lookup\t *",
            "@param string $type Type of query. Allowed values are: 'admin\u2014Returns' - admin contact information.\t  'all_info' - Returns all information. 'auto_renew_flag' - Deprecated, Returned list of domains. 'billing' - Returns billing contact information. 'ca_whois_display_setting' - Returns the current CIRA Whois Privacy setting for .CA domains. 'domain_auth_info' ' - Returns domain authorization code, if applicable. 'expire_action' Returns the action to be taken upon domain expiry, specifically whether to auto-renew the domain, or let it expire silently. 'forwarding_email' - Returns forwarding email for .NAME 2nd level. 'it_whois_display_setting' - Returns the current Whois Privacy setting for .IT domains. 'list' - Returns list of domains for user. 'nameservers' - Returns nameserver information. 'owner' - Returns owner contact information. 'rsp_whois_info' - Returns name and contact information for RSP. 'status' - Returns lock or escrow status of the domain. 'tech' - Returns tech contact information. 'tld_data' - Returns additional information that is required by some registries, such as the residency of the registrant. 'trademark' - Deprecated. Used for .CA domains; returns 'Y' or 'N' value indicating whether the registered owner of the domain name is the legal holder of the trademark for that word. 'waiting history' - Returns information on asynchronous requests. 'whois_privacy_state ' - Returns the state for the WHOIS Privacy feature: enabled, disabled, enabling, or disabling. Note: If the TLD does not allow WHOIS Privacy, always returns Disabled. 'xpack_waiting_history' - Returns the state of completed\/cancelled requests not yet deleted from the database for .DK domains. All completed\/cancelled requests are deleted from the database two",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "lookupDomain": {
        "name": "lookupDomain",
        "params": "$domain, $selected = false",
        "description": [
            "Does a lookup on the domain and returns an array of information about it. Can be called statically.",
            "@param string $domain the domain name to lookup",
            "@param bool|string $selected false to not use this, tld to use just the tld from the domain, or available to use aall availalbe tlds",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "checkDomainAvailable": {
        "name": "checkDomainAvailable",
        "params": "$domain",
        "description": [
            "Checks whether or not the domain is available for registration. Can be called statically.",
            "@param string $domain the domain name to lookup",
            "@return bool returns true if the domain is available, false otherwise"
        ],
        "fieldtexts": []
    },
    "lookupDomainPrice": {
        "name": "lookupDomainPrice",
        "params": "$domain, $regType = 'new'",
        "description": [
            "Checks the OpenSRS price for a domain name. Can be called statically.",
            "@param string $domain the domain name to lookup the price for",
            "@param string $regType registration type, defaults to 'new', can be new, transfer, or renew",
            "@return false|float false if there was an error or the price"
        ],
        "fieldtexts": []
    },
    "searchDomain": {
        "name": "searchDomain",
        "params": "$domain, $function",
        "description": [
            "Searches for a domain name matching it up with our tlds that we have buyable. Can be called statically.",
            "@param string $domain the domain name or part to search for",
            "@param string $function the search function to perform",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "lock": {
        "name": "lock",
        "params": "$domain, $lock = true",
        "description": [
            "@param      $domain",
            "@param bool $lock",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "whoisPrivacy": {
        "name": "whoisPrivacy",
        "params": "$domain, $enabled",
        "description": [
            "Enable\/Disable the whois privacy for the given domain. Can be called statically.",
            "@param string $domain  the domain name to set status on",
            "@param bool   $enabled true if privacy status should be on, false if not",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "listDomainsByExpireyDate": {
        "name": "listDomainsByExpireyDate",
        "params": "$startDate = false, $endDate = false",
        "description": [
            "gets an array of domains registered by expiry date",
            "@param bool|false|string $startDate start date for lookups, or false(default) for now + 45 days",
            "@param bool|false|string $endDate   end date for lookups, or false(default) or 12-31 in 20 years",
            "@return array array of domains in the format of domain => expire date"
        ],
        "fieldtexts": []
    },
    "redeemDomain": {
        "name": "redeemDomain",
        "params": "$domain",
        "description": [
            "Removes the domain at registry level",
            "@param string $domain the domain name or part to search for",
            "@return array returns true if domain cancelled else false"
        ],
        "fieldtexts": []
    },
    "pollEvent": {
        "name": "pollEvent",
        "params": "$limit = 1",
        "description": [
            "Polls the OpenSRS server for a new Event",
            "@link https:\/\/help.opensrs.com\/hc\/en-us\/articles\/203245923-Event-Notifications",
            "@param int $limit optional limit, defaults to 1 (which is also the recomended amount to process at once), allows for polling multiple (up to 100 maximum) events at a time",
            "@return array returns some crap"
        ],
        "fieldtexts": []
    },
    "doAddonEnable": {
        "name": "doAddonEnable",
        "params": "\\ServiceHandler $serviceOrder, $repeatInvoiceId, $regexMatch = false",
        "description": [
            "@var \\ServiceHandler $service",
            "\t\t$service = $event->getSubject();",
            "\t\tfunction_requirements('class.AddonHandler');",
            "\t\t$addon = new \\AddonHandler();",
            "\t\t$addon->setModule(self::$module)",
            "\t\t\t->set_text('Whois Privacy')",
            "\t\t\t->set_cost(OPENSRS_PRIVACY_COST)",
            "\t\t\t->setEnable([__CLASS__, 'doAddonEnable'])",
            "\t\t\t->setDisable([__CLASS__, 'doAddonDisable'])",
            "\t\t\t->register();",
            "\t\t$service->addAddon($addon);",
            "\t}",
            "@param \\ServiceHandler $serviceOrder",
            "@param                $repeatInvoiceId",
            "@param bool           $regexMatch",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "doAddonDisable": {
        "name": "doAddonDisable",
        "params": "\\ServiceHandler $serviceOrder, $repeatInvoiceId, $regexMatch = false",
        "description": [
            "@param \\ServiceHandler $serviceOrder",
            "@param                $repeatInvoiceId",
            "@param bool           $regexMatch",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "activate_domain": {
        "name": "activate_domain",
        "params": "$id",
        "description": [
            "processes a domain activation",
            "@param int $id",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "activate_parallels": {
        "name": "activate_parallels",
        "params": "$ipAddress, $type, $addons = ''",
        "description": [
            "Parallels Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "get_parallels_licenses()",
            "simple wrapper to get all the parallels licenses.",
            "@return array array of licenses. {@link Parallels.getIpListDetailed}",
            "activate_parallels()",
            "@param mixed  $ipAddress",
            "@param mixed  $type",
            "@param string $addons",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "deactivate_parallels": {
        "name": "deactivate_parallels",
        "params": "$ipAddress",
        "description": [
            "@param $ipAddress"
        ],
        "fieldtexts": []
    },
    "add_patchman": {
        "name": "add_patchman",
        "params": "",
        "description": [
            "PatchMan Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses"
        ],
        "fieldtexts": []
    },
    "patchman_req": {
        "name": "patchman_req",
        "params": "$page, $post = '', $options = false",
        "description": [
            "@param string        $page",
            "@param string        $post",
            "@param bool|string[] $options",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_patchman_licenses": {
        "name": "get_patchman_licenses",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_patchman_license": {
        "name": "get_patchman_license",
        "params": "$lid",
        "description": [
            "@param $lid",
            "@return string"
        ],
        "fieldtexts": []
    },
    "get_patchman_license_by_ip": {
        "name": "get_patchman_license_by_ip",
        "params": "$ipAddress",
        "description": [
            "@param $ipAddress",
            "@return bool|mixed"
        ],
        "fieldtexts": []
    },
    "patchman_ip_to_lid": {
        "name": "patchman_ip_to_lid",
        "params": "$ipAddress",
        "description": [
            "@param $ipAddress",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "activate_patchman": {
        "name": "activate_patchman",
        "params": "$ipAddress, $ostype, $pass, $email, $name, $domain = '', $custid = null",
        "description": [
            "activate_patchman()",
            "@param $ipAddress",
            "@param boolean|string $ostype",
            "@param $pass",
            "@param $email",
            "@param string $name",
            "@param string $domain",
            "@param false|int $custid optional customer id number or null for none"
        ],
        "fieldtexts": []
    },
    "deactivate_patchman": {
        "name": "deactivate_patchman",
        "params": "$ipAddress",
        "description": [
            "deactivate_patchman()",
            "@param mixed $ipAddress",
            "@return string|null"
        ],
        "fieldtexts": []
    },
    "patchman_deactivate": {
        "name": "patchman_deactivate",
        "params": "$ipAddress",
        "description": [
            "@param $ipAddress",
            "@return null|string"
        ],
        "fieldtexts": []
    },
    "paypal_history": {
        "name": "paypal_history",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "paypal_history()"
        ],
        "fieldtexts": []
    },
    "paypal_refund": {
        "name": "paypal_refund",
        "params": "",
        "description": [
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "paypal_transactions": {
        "name": "paypal_transactions",
        "params": "",
        "description": [
            "Administrative Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Admin",
            "paypal_transactions()"
        ],
        "fieldtexts": []
    },
    "get_paypal_transaction_types": {
        "name": "get_paypal_transaction_types",
        "params": "",
        "description": [
            "PayPal Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category PayPal"
        ],
        "fieldtexts": []
    },
    "get_paypal_cats_and_fields": {
        "name": "get_paypal_cats_and_fields",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "view_paypal_transaction": {
        "name": "view_paypal_transaction",
        "params": "",
        "description": [
            "view_paypal_transaction()",
            "@return bool|void",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "getApiPaypalDgUrl": {
        "name": "getApiPaypalDgUrl",
        "params": "",
        "description": [
            "returns the proper API PayPal Digital Goods URL based on the sandboxFlag setting.",
            "@return string the API PayPal Digital Goods URL"
        ],
        "fieldtexts": []
    },
    "getApiPaypalUrl": {
        "name": "getApiPaypalUrl",
        "params": "",
        "description": [
            "returns the proper API PayPal URL based on the sandboxFlag setting.",
            "@return string the API PayPal URL"
        ],
        "fieldtexts": []
    },
    "getApiEndpoint": {
        "name": "getApiEndpoint",
        "params": "",
        "description": [
            "returns the proper API Endpoint based on the sandboxFlag setting.",
            "@return string the API Endpoint"
        ],
        "fieldtexts": []
    },
    "getApiUsername": {
        "name": "getApiUsername",
        "params": "",
        "description": [
            "returns the proper API Username based on the sandboxFlag setting.",
            "@return string the API Username"
        ],
        "fieldtexts": []
    },
    "getApiPassword": {
        "name": "getApiPassword",
        "params": "",
        "description": [
            "returns the proper API Password based on the sandboxFlag setting.",
            "@return string the API Password"
        ],
        "fieldtexts": []
    },
    "getApiSignature": {
        "name": "getApiSignature",
        "params": "",
        "description": [
            "returns the proper API Signature based on the sandboxFlag setting.",
            "@return string the API Signature"
        ],
        "fieldtexts": []
    },
    "SetSubscriptionExpressCheckout": {
        "name": "SetSubscriptionExpressCheckout",
        "params": "$paymentAmount, $currencyCodeType, $paymentType, $returnURL, $cancelURL, $items, $period = 1, $repeat_amount = false, $category = 'Physical', $custom = ''",
        "description": [
            "@param float|string $paymentAmount Total value of the shopping cart",
            "@param string $currencyCodeType Currency code value the PayPal API",
            "@param string $paymentType has to be one of the following values: Sale or Order or Authorization",
            "@param string $returnURL the page where buyers return to after they are done with the payment review on PayPal",
            "@param string $cancelURL the page where buyers return to when they cancel the payment review on PayPal",
            "@param array $items array of items being purchased",
            "@param int $period",
            "@param bool $repeat_amount",
            "@param string $category",
            "@param string $custom",
            "@return array"
        ],
        "fieldtexts": []
    },
    "CreateRecurringPaymentsProfile": {
        "name": "CreateRecurringPaymentsProfile",
        "params": "$token, $payer_id, $amt, $period, $description, $initamt = false",
        "description": [
            "@param string $token the token from  the SetExpressCheckout call also probably in $_SESSION['token']",
            "@param string $payer_id Identifies the customer's account",
            "@param float|string $amt The amount the buyer will pay in a payment period",
            "@param int|string $period Frequency of charges",
            "@param string $description Profile description - same as billing agreement description",
            "@param bool|float|string $initamt optional amount of initial payment",
            "@return array"
        ],
        "fieldtexts": []
    },
    "SetExpressCheckoutDG": {
        "name": "SetExpressCheckoutDG",
        "params": "$paymentAmount, $currencyCodeType, $paymentType, $returnURL, $cancelURL, $items",
        "description": [
            "Prepares the parameters for the SetExpressCheckout API Call for a Digital Goods payment.",
            "@param float|string $paymentAmount Total value of the shopping cart",
            "@param string $currencyCodeType Currency code value the PayPal API",
            "@param string $paymentType has to be one of the following values: Sale or Order or Authorization",
            "@param string $returnURL the page where buyers return to after they are done with the payment review on PayPal",
            "@param string $cancelURL the page where buyers return to when they cancel the payment review on PayPal",
            "@param array $items array of items being purchased",
            "@return array the response array"
        ],
        "fieldtexts": []
    },
    "SetExpressCheckout": {
        "name": "SetExpressCheckout",
        "params": "$paymentAmount, $currencyCodeType, $paymentType, $returnURL, $cancelURL, $items, $custom = ''",
        "description": [
            "@param float|string $paymentAmount Total value of the shopping cart",
            "@param string $currencyCodeType Currency code value the PayPal API",
            "@param string $paymentType has to be one of the following values: Sale or Order or Authorization",
            "@param string $returnURL the page where buyers return to after they are done with the payment review on PayPal",
            "@param string $cancelURL the page where buyers return to when they cancel the payment review on PayPal",
            "@param $items",
            "@param string $custom",
            "@return array"
        ],
        "fieldtexts": []
    },
    "CallShortcutExpressCheckout": {
        "name": "CallShortcutExpressCheckout",
        "params": "$paymentAmount, $currencyCodeType, $paymentType, $returnURL, $cancelURL",
        "description": [
            "Prepares the parameters for the SetExpressCheckout API Call.",
            "@param float|string $paymentAmount Total value of the shopping cart",
            "@param string $currencyCodeType Currency code value the PayPal API",
            "@param string $paymentType has to be one of the following values: Sale or Order or Authorization",
            "@param string $returnURL the page where buyers return to after they are done with the payment review on PayPal",
            "@param string $cancelURL the page where buyers return to when they cancel the payment review on PayPal",
            "@return array response array"
        ],
        "fieldtexts": []
    },
    "CallMarkExpressCheckout": {
        "name": "CallMarkExpressCheckout",
        "params": "$paymentAmount, $currencyCodeType, $paymentType, $returnURL, $cancelURL, $shipToName, $shipToStreet, $shipToCity, $shipToState, $shipToCountryCode, $shipToZip, $shipToStreet2, $phoneNum",
        "description": [
            "Prepares the parameters for the SetExpressCheckout API Call.",
            "@param float|string $paymentAmount Total value of the shopping cart",
            "@param string $currencyCodeType Currency code value the PayPal API",
            "@param string $paymentType has to be one of the following values: Sale or Order or Authorization",
            "@param string $returnURL the page where buyers return to after they are done with the payment review on PayPal",
            "@param string $cancelURL the page where buyers return to when they cancel the payment review on PayPal",
            "@param string $shipToName the Ship to name entered on the merchant's site",
            "@param string $shipToStreet the Ship to Street entered on the merchant's site",
            "@param string $shipToCity the Ship to City entered on the merchant's site",
            "@param string $shipToState the Ship to State entered on the merchant's site",
            "@param string $shipToCountryCode the Code for Ship to Country entered on the merchant's site",
            "@param string $shipToZip the Ship to ZipCode entered on the merchant's site",
            "@param string $shipToStreet2 the Ship to Street2 entered on the merchant's site",
            "@param string $phoneNum the phoneNum  entered on the merchant's site",
            "@return array the response array"
        ],
        "fieldtexts": []
    },
    "GetExpressCheckoutDetails": {
        "name": "GetExpressCheckoutDetails",
        "params": "$token",
        "description": [
            "Prepares the parameters for the GetExpressCheckoutDetails API Call.",
            "@param string $token",
            "@return array|bool false on error or The NVP Collection object of the GetExpressCheckoutDetails Call Response.",
            "[TOKEN] => EC-7SC92877V2886181V",
            "[CHECKOUTSTATUS] => PaymentActionNotInitiated",
            "[TIMESTAMP] => 2012-08-30T03:25:31Z",
            "[CORRELATIONID] => 5f13f9904bd64",
            "[ACK] => Success",
            "[VERSION] => 84",
            "[BUILD] => 3587318",
            "[EMAIL] => detain_1346134361_per@corpmail.interserver.net",
            "[PAYERID] => 23YHDDSUSNB86",
            "[PAYERSTATUS] => verified",
            "[FIRSTNAME] => Joe",
            "[LASTNAME] => Huss",
            "[COUNTRYCODE] => US",
            "[CURRENCYCODE] => USD",
            "[AMT] => 6.00",
            "[ITEMAMT] => 6.00",
            "[SHIPPINGAMT] => 0.00",
            "[HANDLINGAMT] => 0.00",
            "[TAXAMT] => 0.00",
            "[INSURANCEAMT] => 0.00",
            "[SHIPDISCAMT] => 0.00",
            "[L_NAME0] => CentOS OpenVZ 1 Slice VPS",
            "[L_QTY0] => 1",
            "[L_TAXAMT0] => 0.00",
            "[L_AMT0] => 6.00",
            "[L_ITEMWEIGHTVALUE0] =>    0.00000",
            "[L_ITEMLENGTHVALUE0] =>    0.00000",
            "[L_ITEMWIDTHVALUE0] =>    0.00000",
            "[L_ITEMHEIGHTVALUE0] =>    0.00000",
            "[L_ITEMCATEGORY0] => Digital",
            "[PAYMENTREQUEST_0_CURRENCYCODE] => USD",
            "[PAYMENTREQUEST_0_AMT] => 6.00",
            "[PAYMENTREQUEST_0_ITEMAMT] => 6.00",
            "[PAYMENTREQUEST_0_SHIPPINGAMT] => 0.00",
            "[PAYMENTREQUEST_0_HANDLINGAMT] => 0.00",
            "[PAYMENTREQUEST_0_TAXAMT] => 0.00",
            "[PAYMENTREQUEST_0_INSURANCEAMT] => 0.00",
            "[PAYMENTREQUEST_0_SHIPDISCAMT] => 0.00",
            "[PAYMENTREQUEST_0_INSURANCEOPTIONOFFERED] => FALSE",
            "[L_PAYMENTREQUEST_0_NAME0] => CentOS OpenVZ 1 Slice VPS",
            "[L_PAYMENTREQUEST_0_QTY0] => 1",
            "[L_PAYMENTREQUEST_0_TAXAMT0] => 0.00",
            "[L_PAYMENTREQUEST_0_AMT0] => 6.00",
            "[L_PAYMENTREQUEST_0_ITEMWEIGHTVALUE0] =>    0.00000",
            "[L_PAYMENTREQUEST_0_ITEMLENGTHVALUE0] =>    0.00000",
            "[L_PAYMENTREQUEST_0_ITEMWIDTHVALUE0] =>    0.00000",
            "[L_PAYMENTREQUEST_0_ITEMHEIGHTVALUE0] =>    0.00000",
            "[L_PAYMENTREQUEST_0_ITEMCATEGORY0] => Digital",
            "[PAYMENTREQUESTINFO_0_ERRORCODE] => 0"
        ],
        "fieldtexts": []
    },
    "ConfirmPayment": {
        "name": "ConfirmPayment",
        "params": "$token, $paymentType, $currencyCodeType, $payerID, $FinalPaymentAmt",
        "description": [
            "Prepares the parameters for the GetExpressCheckoutDetails API Call.",
            "Inputs:",
            "sBNCode:    The Buy Now code used by PayPal to track the transactions from a given shopping cart.",
            "@param string $token",
            "@param string $paymentType has to be one of the following values: Sale or Order or Authorization",
            "@param string $currencyCodeType Currency code value the PayPal API",
            "@param string $payerID",
            "@param float|string $FinalPaymentAmt",
            "@return array The NVP Collection object of the GetExpressCheckoutDetails Call Response.",
            "[TOKEN] => EC-7SC92877V2886181",
            "[SUCCESSPAGEREDIRECTREQUESTED] => FALSE",
            "[TIMESTAMP] => 2012-08-30T03:25:36Z",
            "[CORRELATIONID] => c78c6f901c8ba",
            "[ACK] => Success",
            "[VERSION] => 84",
            "[BUILD] => 3587318",
            "[INSURANCEOPTIONSELECTED] => FALSE",
            "[SHIPPINGOPTIONISDEFAULT] => FALSE",
            "[PAYMENTINFO_0_TRANSACTIONID] => 99A86447T2674872E",
            "[PAYMENTINFO_0_TRANSACTIONTYPE] => expresscheckout",
            "[PAYMENTINFO_0_PAYMENTTYPE] => instant",
            "[PAYMENTINFO_0_ORDERTIME] => 2012-08-30T03:25:34Z",
            "[PAYMENTINFO_0_AMT] => 6.00",
            "[PAYMENTINFO_0_FEEAMT] => 0.47",
            "[PAYMENTINFO_0_TAXAMT] => 0.00",
            "[PAYMENTINFO_0_CURRENCYCODE] => USD",
            "[PAYMENTINFO_0_PAYMENTSTATUS] => Completed",
            "[PAYMENTINFO_0_PENDINGREASON] => None",
            "[PAYMENTINFO_0_REASONCODE] => None",
            "[PAYMENTINFO_0_PROTECTIONELIGIBILITY] => Ineligible",
            "[PAYMENTINFO_0_PROTECTIONELIGIBILITYTYPE] => None",
            "[PAYMENTINFO_0_SECUREMERCHANTACCOUNTID] => SBRBYA8FEJUSA",
            "[PAYMENTINFO_0_ERRORCODE] => 0",
            "[PAYMENTINFO_0_ACK] => Success"
        ],
        "fieldtexts": []
    },
    "DirectPayment": {
        "name": "DirectPayment",
        "params": "$paymentType, $paymentAmount, $creditCardType, $creditCardNumber, $expDate, $cvv2, $firstName, $lastName, $street, $city, $state, $zip, $countryCode, $currencyCode",
        "description": [
            "This function makes a DoDirectPayment API call",
            "@param string $paymentType has to be one of the following values: Sale or Order or Authorization",
            "@param float|string $paymentAmount Total value of the shopping cart",
            "@param string $creditCardType buyer's credit card type (i.e. Visa, MasterCard ... )",
            "@param string $creditCardNumber buyers credit card number without any spaces, dashes or any other characters",
            "@param string $expDate credit card expiration date",
            "@param string $cvv2 Card Verification Value",
            "@param string $firstName first name as it appears on credit card",
            "@param string $lastName last name as it appears on credit card",
            "@param string $street buyer's street address line as it appears on credit card",
            "@param string $city buyer's city",
            "@param string $state buyer's state",
            "@param string $zip buyer's zip",
            "@param string $countryCode buyer's country code",
            "@param string $currencyCode currency code value the PayPal API",
            "@return array The NVP Collection object of the DoDirectPayment Call Response."
        ],
        "fieldtexts": []
    },
    "paypal_hash_call": {
        "name": "paypal_hash_call",
        "params": "$methodName, $nvpStr",
        "description": [
            "perform the API call to PayPal using API signature",
            "@param string $methodName name of API  method.",
            "@param string $nvpStr nvp string.",
            "@return array returns an associative array containing the response from the server."
        ],
        "fieldtexts": []
    },
    "RedirectToPayPal": {
        "name": "RedirectToPayPal",
        "params": "$token",
        "description": [
            "Purpose: Redirects to PayPal.com site.",
            "Inputs:  NVP string.",
            "Returns:",
            "@param $token"
        ],
        "fieldtexts": []
    },
    "RedirectToPayPalDG": {
        "name": "RedirectToPayPalDG",
        "params": "$token",
        "description": [
            "@param $token"
        ],
        "fieldtexts": []
    },
    "deformatNVP": {
        "name": "deformatNVP",
        "params": "$nvpstr",
        "description": [
            "This function will take NVPString and convert it to an Associative Array and it will decode the response.",
            "It is useful to search for a particular key and displaying arrays.",
            "@nvpstr is NVPString.",
            "@nvpArray is Associative Array.",
            "@param $nvpstr",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_paypal_adaptive_accounts_ipn_messages": {
        "name": "get_paypal_adaptive_accounts_ipn_messages",
        "params": "",
        "description": [
            "PayPal Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category PayPal",
            "gets the paypal fields for adaptive account ipn messages",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_auction_vars": {
        "name": "get_paypal_auction_vars",
        "params": "",
        "description": [
            "gets the paypal fields for auction vars",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_buyer_information_vars": {
        "name": "get_paypal_buyer_information_vars",
        "params": "",
        "description": [
            "gets the paypal fields for buyer information",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_dispute_resolution_vars": {
        "name": "get_paypal_dispute_resolution_vars",
        "params": "",
        "description": [
            "gets the paypal fields for dispute resolution",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_global_shipping_vars": {
        "name": "get_paypal_global_shipping_vars",
        "params": "",
        "description": [
            "gets the paypal fields for global shipping",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_mass_pay_vars": {
        "name": "get_paypal_mass_pay_vars",
        "params": "",
        "description": [
            "gets the paypal fields for mass payments",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_payment_information_vars": {
        "name": "get_paypal_payment_information_vars",
        "params": "",
        "description": [
            "gets the paypal fields for payment information",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_pay_vars": {
        "name": "get_paypal_pay_vars",
        "params": "",
        "description": [
            "gets the paypal fields for pay  vars",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_pdt_specific_vars": {
        "name": "get_paypal_pdt_specific_vars",
        "params": "",
        "description": [
            "gets the paypal fields for pdt specific things",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_preapproval_vars": {
        "name": "get_paypal_preapproval_vars",
        "params": "",
        "description": [
            "gets the paypal fields for preapproval",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_recurring_payment_vars": {
        "name": "get_paypal_recurring_payment_vars",
        "params": "",
        "description": [
            "gets the paypal fields for recurring payments",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_subscription_vars": {
        "name": "get_paypal_subscription_vars",
        "params": "",
        "description": [
            "gets the paypal fields for subscriptions",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_transaction_notification_vars": {
        "name": "get_paypal_transaction_notification_vars",
        "params": "",
        "description": [
            "gets the paypal fields for transaction notifications",
            "@return array an array of field name => description"
        ],
        "fieldtexts": []
    },
    "get_paypal_link_url": {
        "name": "get_paypal_link_url",
        "params": "$custom, $service_cost, $description = ''",
        "description": [
            "gets a paypal link url",
            "@param string $custom what to put in the custom field, which is used for internal matching",
            "@param float $service_cost the cost of the item",
            "@param string $description description of the item being charged",
            "@return string the link url"
        ],
        "fieldtexts": []
    },
    "get_paypal_subscription_link_url": {
        "name": "get_paypal_subscription_link_url",
        "params": "$custom, $service_cost, $description = '', $days_till_first_payment = 1, $frequency = 1",
        "description": [
            "gets a paypal subscription link url",
            "@param string $custom what to put in the custom field, which is used for internal matching",
            "@param float $service_cost the cost of the item",
            "@param string $description description of the item being charged",
            "@param int $days_till_first_payment defaults to 1, optional delay before the first payment is sent",
            "@return string the link url"
        ],
        "fieldtexts": []
    },
    "get_paypal_subscription_link": {
        "name": "get_paypal_subscription_link",
        "params": "$custom, $service_cost, $description = '', $link_text = 'Setup Paypal Subscription', $days_till_first_payment = 1, $frequency = 1",
        "description": [
            "gets a paypal subscription link",
            "@param string $custom the custom field for the link",
            "@param float $service_cost the cost of the service",
            "@param string $description the description",
            "@param string $link_text the text of the link",
            "@param int $days_till_first_payment defaults to 1, optional delay before the first payment is sent",
            "@return string the a href link"
        ],
        "fieldtexts": []
    },
    "get_paypal_link": {
        "name": "get_paypal_link",
        "params": "$custom, $service_cost, $description = '', $link_text = 'Click Here to make a PayPal payment'",
        "description": [
            "gets a paypal link",
            "@param string $custom the custom field for the link",
            "@param float $service_cost the cost of the service",
            "@param string $description the description",
            "@param string $link_text the text of the link",
            "@return string the a href link"
        ],
        "fieldtexts": []
    },
    "is_paypal_txn_refunded": {
        "name": "is_paypal_txn_refunded",
        "params": "$txn_id, $module = 'default'",
        "description": [
            "determines if a paypal transaction has been refunded or not",
            "@param string $txn_id paypal transaction id",
            "@param string $module module name",
            "@return bool whether or not it was refunded"
        ],
        "fieldtexts": []
    },
    "PayPalHttpPost": {
        "name": "PayPalHttpPost",
        "params": "$methodName_, $nvpStr_, $env = 'live'",
        "description": [
            "PayPal Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category PayPal",
            "Send HTTP POST Request",
            "@param $methodName_",
            "@param $nvpStr_",
            "@param $env",
            "@return array Parsed HTTP Response body",
            "@internal param \\The $string API method name",
            "@internal param \\The $string POST Message fields in &name=value pair format"
        ],
        "fieldtexts": []
    },
    "refundPaypalTransaction": {
        "name": "refundPaypalTransaction",
        "params": "$transactionId = null",
        "description": [
            "@param null $transactionId",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "execute": {
        "name": "execute",
        "params": "$request",
        "description": [
            "{@inheritDoc}"
        ],
        "fieldtexts": []
    },
    "setLogger": {
        "name": "setLogger",
        "params": "LoggerInterface $logger",
        "description": [
            "Class LoggerAwareAction",
            "@package App\\Payum\\Action",
            "class LoggerAwareAction implements ActionInterface, LoggerAwareInterface",
            "{",
            "\tprotected $logger;",
            "{@inheritDoc}"
        ],
        "fieldtexts": []
    },
    "supports": {
        "name": "supports",
        "params": "$packageType",
        "description": [
            "{@inheritDoc}"
        ],
        "fieldtexts": []
    },
    "get_pleskautomation_info_from_domain": {
        "name": "get_pleskautomation_info_from_domain",
        "params": "$hostname",
        "description": [
            "maps a domain name to plesk info",
            "ok finally got basic logic figured out that will let me lookup a webspace by domain name (plesk function not ppa, but can still be used nearly the same)",
            "from there it gets the webspace id, then w\/ that it loads the webspace.  w\/ that result it parse the account id, subscription id, and webspace status",
            "then it loads the subscription data parsing the subscription status from response, account info data parsing the email from the response",
            "then it loads the account members and from that result gets the member_id and then loads the full member info, from that result it parses out the username",
            "and user_id thats everything needed then",
            "@param string $hostname the website\/domain name to lookup",
            "@return array|bool",
            "@throws \\Detain\\MyAdminPleskAutomation\\Detain\\MyAdminPleskAutomation\\PPAFailedRequestException",
            "@throws \\Detain\\MyAdminPleskAutomation\\Detain\\MyAdminPleskAutomation\\PPAMalformedRequestException"
        ],
        "fieldtexts": []
    },
    "get_webhosting_ppa_instance": {
        "name": "get_webhosting_ppa_instance",
        "params": "$server = false",
        "description": [
            "Gets a Plesk Automation Class instance for the given server.",
            "@param array|bool|false|int|string $server the server to get a Plesk Automation instance for, can be an array like from get_service or a server id, or false for default",
            "@return \\Detain\\MyAdminPleskAutomation\\PPAConnector the pleskautomation instance"
        ],
        "fieldtexts": []
    },
    "getInstance": {
        "name": "getInstance",
        "params": "$ipAddress, $login, $password",
        "description": [
            "@param $ipAddress",
            "@param $login",
            "@param $password",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "checkResponse": {
        "name": "checkResponse",
        "params": "\\SimpleXMLElement $response",
        "description": [
            "Check data in API response",
            "@param \\SimpleXMLElement $response",
            "@return",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "get_webhosting_plesk_instance": {
        "name": "get_webhosting_plesk_instance",
        "params": "$server = false",
        "description": [
            "Gets a Plesk Class instance for the given server.",
            "@param array|bool|false|int|string $server the server to get a Plesk instance for, can be an array like from get_service or a server id, or false for default",
            "@return \\Detain\\MyAdminPlesk\\Plesk the plesk instance"
        ],
        "fieldtexts": []
    },
    "curlInit": {
        "name": "curlInit",
        "params": "$host, $login, $password",
        "description": [
            "Prepares CURL to perform Plesk API request",
            "@param string $host the hostname of the plesk server",
            "@param string $login the administrator user name",
            "@param string $password the administrator password",
            "@return resource"
        ],
        "fieldtexts": []
    },
    "parseResponse": {
        "name": "parseResponse",
        "params": "$responseString",
        "description": [
            "Looks if API responded with correct data",
            "@param string $responseString",
            "@return \\SimpleXMLElement",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getErrorCodes": {
        "name": "getErrorCodes",
        "params": "",
        "description": [
            "the reduced list of error codes which is supported by Plesk 8.0 for UNIX \/ Plesk 7.6 for Windows and later.",
            "@link http:\/\/docs.plesk.com\/en-US\/17.0\/api-rpc\/error-codes\/reduced-list-of-error-codes.33765\/",
            "@return string[] list of error codes"
        ],
        "fieldtexts": []
    },
    "getError": {
        "name": "getError",
        "params": "$code",
        "description": [
            "returns the specific error text for your given error code",
            "@param int $code the error code",
            "@return string the description of the error"
        ],
        "fieldtexts": []
    },
    "randomString": {
        "name": "randomString",
        "params": "$length = 8",
        "description": [
            "@param int $length",
            "@return string"
        ],
        "fieldtexts": []
    },
    "createWebUser": {
        "name": "createWebUser",
        "params": "$params",
        "description": [
            "Creates Web User",
            "@param $params",
            "@return \\DomDocument"
        ],
        "fieldtexts": []
    },
    "createCustomer": {
        "name": "createCustomer",
        "params": "$username, $password, $data",
        "description": [
            "@param $username",
            "@param $password",
            "@param $data",
            "@return \\DomDocument"
        ],
        "fieldtexts": []
    },
    "createMailAccount": {
        "name": "createMailAccount",
        "params": "$params",
        "description": [
            "Creates mail account",
            "@param $params",
            "@return \\DomDocument"
        ],
        "fieldtexts": []
    },
    "getServerInfoTypes": {
        "name": "getServerInfoTypes",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "varExport": {
        "name": "varExport",
        "params": "$result",
        "description": [
            "converts a var_export output to one using shorthand arrays and compacting empty arrays",
            "@param array $result an array to get a php shorthand array version of",
            "@return string the exported php code"
        ],
        "fieldtexts": []
    },
    "fixResult": {
        "name": "fixResult",
        "params": "$result",
        "description": [
            "recursively crawls the results and compacts certain types of arrays into a simpler and easier to read and reference form",
            "@param array $result",
            "@return array the result but compacted where possible"
        ],
        "fieldtexts": []
    },
    "getServerInfo": {
        "name": "getServerInfo",
        "params": "",
        "description": [
            "Returns DOM object representing request for",
            "@return \\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "createSession": {
        "name": "createSession",
        "params": "$user",
        "description": [
            "Creates a client session in plesk",
            "@param $user",
            "@return \\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getCustomers": {
        "name": "getCustomers",
        "params": "$stat = true",
        "description": [
            "Returns array representing request for information about all available customers",
            "@param bool $stat include the Stat info block, defaults to TRUE",
            "@return array an array of customers"
        ],
        "fieldtexts": []
    },
    "getWebspaces": {
        "name": "getWebspaces",
        "params": "$hosting = true, $limits = true, $stat = true, $prefs = true",
        "description": [
            "Returns array representing request for information about all available domains",
            "@param bool $hosting include the Hosting info block, defaults to TRUE",
            "@param bool $limits include the Limits info block, defaults to TRUE",
            "@param bool $stat include the Stat info block, defaults to TRUE",
            "@param bool $prefs include the Prefs info block, defaults to TRUE",
            "@return array an array of domains"
        ],
        "fieldtexts": []
    },
    "getObjectStatusList": {
        "name": "getObjectStatusList",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "getSiteFilters": {
        "name": "getSiteFilters",
        "params": "",
        "description": [
            "@return string[]"
        ],
        "fieldtexts": []
    },
    "getSiteDatasets": {
        "name": "getSiteDatasets",
        "params": "",
        "description": [
            "@return string[]"
        ],
        "fieldtexts": []
    },
    "getSites": {
        "name": "getSites",
        "params": "$params = false",
        "description": [
            "Returns DOM object representing request for information about all available sites",
            "@param bool|array $params",
            "@return array",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getSite": {
        "name": "getSite",
        "params": "$params = false",
        "description": [
            "Returns DOM object representing request for get site",
            "@param bool $params",
            "@return array",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listSites": {
        "name": "listSites",
        "params": "$params = false",
        "description": [
            "Returns DOM object representing request for list sites",
            "@param bool|array $params",
            "@return array",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getSiteGenSetups": {
        "name": "getSiteGenSetups",
        "params": "",
        "description": [
            "@return string[]"
        ],
        "fieldtexts": []
    },
    "createSite": {
        "name": "createSite",
        "params": "$params",
        "description": [
            "Returns DOM object representing request for create site",
            "@param array $params",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "updateSite": {
        "name": "updateSite",
        "params": "$params",
        "description": [
            "Returns DOM object representing request for update site",
            "@param array $params",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "updateServer": {
        "name": "updateServer",
        "params": "$params",
        "description": [
            "Returns DOM object representing request for update site",
            "@param array $params",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "createSite2": {
        "name": "createSite2",
        "params": "$params",
        "description": [
            "@param array $params",
            "@return \\DomDocument"
        ],
        "fieldtexts": []
    },
    "createClient": {
        "name": "createClient",
        "params": "$data",
        "description": [
            "Returns DOM object representing request for create client",
            "@param array $data account data",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "createDatabase": {
        "name": "createDatabase",
        "params": "",
        "description": [
            "Returns DOM object representing request for create database",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "createDatabaseUser": {
        "name": "createDatabaseUser",
        "params": "",
        "description": [
            "Returns DOM object representing request for create database user",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "createEmailAddress": {
        "name": "createEmailAddress",
        "params": "",
        "description": [
            "Returns DOM object representing request for create email address",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "createSecretKey": {
        "name": "createSecretKey",
        "params": "",
        "description": [
            "Returns DOM object representing request for create secret key",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "createSiteAlias": {
        "name": "createSiteAlias",
        "params": "",
        "description": [
            "Returns DOM object representing request for create site alias",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "createSubdomain": {
        "name": "createSubdomain",
        "params": "",
        "description": [
            "Returns DOM object representing request for create subdomain",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getHtypes": {
        "name": "getHtypes",
        "params": "",
        "description": [
            "returns an array of possible hosting types",
            "vrt_hst - virtual hosting",
            "std_fwd none - standard forwarding",
            "frm_fwd - frame forwarding,",
            "none. Data type: string. Allowed values: vrt_hst | std_fwd | frm_fwd | none.",
            "@return string[] an array of possible htype values"
        ],
        "fieldtexts": []
    },
    "getSubscriptionFilters": {
        "name": "getSubscriptionFilters",
        "params": "",
        "description": [
            "@return string[]"
        ],
        "fieldtexts": []
    },
    "getSubscriptionDatasets": {
        "name": "getSubscriptionDatasets",
        "params": "",
        "description": [
            "@return string[]"
        ],
        "fieldtexts": []
    },
    "createSubscription": {
        "name": "createSubscription",
        "params": "$params",
        "description": [
            "Returns DOM object representing request for create subscription",
            "@param array $params",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "deleteSubscription": {
        "name": "deleteSubscription",
        "params": "$params",
        "description": [
            "Returns DOM object representing request for delete subscription",
            "@param array $params",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listSubscriptions": {
        "name": "listSubscriptions",
        "params": "$params = false",
        "description": [
            "Returns DOM object representing request for list subscriptions",
            "@param bool|array $params",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "deleteClient": {
        "name": "deleteClient",
        "params": "$params",
        "description": [
            "Returns DOM object representing request for delete client",
            "@param array $params",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "deleteDatabase": {
        "name": "deleteDatabase",
        "params": "",
        "description": [
            "Returns DOM object representing request for delete database",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "deleteEmailAddress": {
        "name": "deleteEmailAddress",
        "params": "",
        "description": [
            "Returns DOM object representing request for delete email address",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "deleteSecretKey": {
        "name": "deleteSecretKey",
        "params": "",
        "description": [
            "Returns DOM object representing request for delete secret key",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "deleteSiteAlias": {
        "name": "deleteSiteAlias",
        "params": "",
        "description": [
            "Returns DOM object representing request for delete site alias",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "deleteSite": {
        "name": "deleteSite",
        "params": "$params",
        "description": [
            "Returns DOM object representing request for delete site",
            "@param array $params",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "deleteSubdomain": {
        "name": "deleteSubdomain",
        "params": "",
        "description": [
            "Returns DOM object representing request for delete subdomain",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getClient": {
        "name": "getClient",
        "params": "$params",
        "description": [
            "Returns DOM object representing request for get client",
            "@param array $params",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getDatabaseUser": {
        "name": "getDatabaseUser",
        "params": "",
        "description": [
            "Returns DOM object representing request for get database user",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getServicePlan": {
        "name": "getServicePlan",
        "params": "",
        "description": [
            "Returns DOM object representing request for get service plan",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getSubdomain": {
        "name": "getSubdomain",
        "params": "",
        "description": [
            "Returns DOM object representing request for get subdomain",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getSubscription": {
        "name": "getSubscription",
        "params": "$params",
        "description": [
            "Returns DOM object representing request for get subscription",
            "@param array $params",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "getTraffic": {
        "name": "getTraffic",
        "params": "",
        "description": [
            "Returns DOM object representing request for get traffic",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listClients": {
        "name": "listClients",
        "params": "",
        "description": [
            "Returns DOM object representing request for list clients",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listUsers": {
        "name": "listUsers",
        "params": "",
        "description": [
            "Returns DOM object representing request for list users",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listDatabaseServers": {
        "name": "listDatabaseServers",
        "params": "",
        "description": [
            "Returns DOM object representing request for list database servers",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listDatabases": {
        "name": "listDatabases",
        "params": "",
        "description": [
            "Returns DOM object representing request for list databases",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listDnsRecords": {
        "name": "listDnsRecords",
        "params": "",
        "description": [
            "Returns DOM object representing request for list dns records",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listEmailAddresses": {
        "name": "listEmailAddresses",
        "params": "",
        "description": [
            "Returns DOM object representing request for list email addresses",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listIpAddresses": {
        "name": "listIpAddresses",
        "params": "",
        "description": [
            "Returns DOM object representing request for list ip addresses",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listSecretKeys": {
        "name": "listSecretKeys",
        "params": "",
        "description": [
            "Returns DOM object representing request for list secret keys",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listServicePlans": {
        "name": "listServicePlans",
        "params": "",
        "description": [
            "Returns DOM object representing request for list service plans",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listSiteAliases": {
        "name": "listSiteAliases",
        "params": "",
        "description": [
            "Returns DOM object representing request for list site aliases",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "listSubdomains": {
        "name": "listSubdomains",
        "params": "",
        "description": [
            "Returns DOM object representing request for list subdomains",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "renameSubdomain": {
        "name": "renameSubdomain",
        "params": "",
        "description": [
            "Returns DOM object representing request for rename subdomain",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "updateClient": {
        "name": "updateClient",
        "params": "$params",
        "description": [
            "Returns DOM object representing request for update client",
            "@param array $params array of update parameters",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "updateEmailPassword": {
        "name": "updateEmailPassword",
        "params": "",
        "description": [
            "Returns DOM object representing request for update email password",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "updateSubdomain": {
        "name": "updateSubdomain",
        "params": "",
        "description": [
            "Returns DOM object representing request for update subdomain",
            "@return \\Detain\\MyAdminPlesk\\DOMDocument",
            "@throws \\Detain\\MyAdminPlesk\\ApiRequestException",
            "@throws \\Detain\\MyAdminPlesk\\Detain\\MyAdminPlesk\\ApiRequestException"
        ],
        "fieldtexts": []
    },
    "initialize": {
        "name": "initialize",
        "params": "InputInterface $input, OutputInterface $output",
        "description": [
            "Plugins Management",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Plugins",
            "namespace MyAdmin\\Plugins\\Command;",
            "use Symfony\\Component\\Console\\Input\\InputInterface;",
            "use Symfony\\Component\\Console\\Output\\OutputInterface;",
            "use Composer\\Command\\BaseCommand;",
            "Class UpdatePlugins",
            "@package MyAdmin\\Plugins\\Command",
            "class UpdatePlugins extends BaseCommand",
            "{",
            "\tprotected function configure()",
            "\t{",
            "\t\t$this",
            "\t\t\t->setName('myadmin:update-plugins') \/\/ the name of the command (the part after \"bin\/console\")",
            "\t\t\t->setDescription('Finds and Caches Plugins into MyAdmin') \/\/ the short description shown while running \"php bin\/console list\"",
            "\t\t\t->setHelp('This command allows you to create a user...'); \/\/ the full command description shown when running the command with the \"--help\" option",
            "\t}",
            "(optional)",
            "This method is executed before the interact() and the execute() methods.",
            "Its main purpose is to initialize variables used in the rest of the command methods.",
            "@param \\Symfony\\Component\\Console\\Input\\InputInterface   $input",
            "@param \\Symfony\\Component\\Console\\Output\\OutputInterface $output"
        ],
        "fieldtexts": []
    },
    "do_call": {
        "name": "do_call",
        "params": "$parent, $call, $calls",
        "description": [
            "@param $parent",
            "@param $call",
            "@param $calls",
            "@return array"
        ],
        "fieldtexts": []
    },
    "getCommands": {
        "name": "getCommands",
        "params": "",
        "description": [
            "Plugins Management",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Plugins",
            "namespace MyAdmin\\Plugins;",
            "use Composer\\Plugin\\Capability\\CommandProvider as CommandProviderCapability;",
            "use MyAdmin\\Plugins\\Command\\Command;",
            "use MyAdmin\\Plugins\\Command\\Parse;",
            "use MyAdmin\\Plugins\\Command\\CreateUser;",
            "use MyAdmin\\Plugins\\Command\\UpdatePlugins;",
            "use MyAdmin\\Plugins\\Command\\SetPermissions;",
            "Class CommandProvider",
            "@package MyAdmin\\Plugins",
            "class CommandProvider implements CommandProviderCapability",
            "{",
            "@return array"
        ],
        "fieldtexts": []
    },
    "isInstalled": {
        "name": "isInstalled",
        "params": "InstalledRepositoryInterface $repo, PackageInterface $package",
        "description": [
            "Checks that provided package is installed.",
            "@param InstalledRepositoryInterface $repo    repository in which to check",
            "@param PackageInterface             $package package instance",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "uninstall": {
        "name": "uninstall",
        "params": "InstalledRepositoryInterface $repo, PackageInterface $package",
        "description": [
            "{@inheritDoc}",
            "@throws \\InvalidArgumentException"
        ],
        "fieldtexts": []
    },
    "getInstallPath": {
        "name": "getInstallPath",
        "params": "PackageInterface $package",
        "description": [
            "Plugins Management",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Plugins",
            "namespace MyAdmin\\Plugins;",
            "use Composer\\Package\\PackageInterface;",
            "use Composer\\Installer\\LibraryInstaller;",
            "Class TemplateInstaller",
            "@package MyAdmin\\Plugins",
            "class TemplateInstaller extends LibraryInstaller",
            "{",
            "{@inheritDoc}",
            "@throws \\InvalidArgumentException"
        ],
        "fieldtexts": []
    },
    "ensureBinariesPresence": {
        "name": "ensureBinariesPresence",
        "params": "PackageInterface $package",
        "description": [
            "Make sure binaries are installed for a given package.",
            "@param PackageInterface $package Package instance"
        ],
        "fieldtexts": []
    },
    "getPackageBasePath": {
        "name": "getPackageBasePath",
        "params": "PackageInterface $package",
        "description": [
            "Returns the base path of the package without target-dir path",
            "It is used for BC as getInstallPath tends to be overridden by",
            "installer plugins but not getPackageBasePath",
            "@param  PackageInterface $package",
            "@return string"
        ],
        "fieldtexts": []
    },
    "installCode": {
        "name": "installCode",
        "params": "PackageInterface $package",
        "description": [
            "@param \\Composer\\Package\\PackageInterface $package"
        ],
        "fieldtexts": []
    },
    "updateCode": {
        "name": "updateCode",
        "params": "PackageInterface $initial, PackageInterface $target",
        "description": [
            "@param \\Composer\\Package\\PackageInterface $initial",
            "@param \\Composer\\Package\\PackageInterface $target"
        ],
        "fieldtexts": []
    },
    "removeCode": {
        "name": "removeCode",
        "params": "PackageInterface $package",
        "description": [
            "@param \\Composer\\Package\\PackageInterface $package"
        ],
        "fieldtexts": []
    },
    "activate": {
        "name": "activate",
        "params": "Composer $composer, IOInterface $io",
        "description": [
            "Plugins Management",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Plugins",
            "namespace MyAdmin\\Plugins;",
            "use Composer\\Composer;",
            "use Composer\\IO\\IOInterface;",
            "use Composer\\Plugin\\PluginInterface;",
            "Class TemplateInstallerPlugin",
            "@package MyAdmin\\Plugins",
            "class TemplateInstallerPlugin implements PluginInterface",
            "{",
            "@param \\Composer\\Composer       $composer",
            "@param \\Composer\\IO\\IOInterface $io"
        ],
        "fieldtexts": []
    },
    "get_routes": {
        "name": "get_routes",
        "params": "$include_admin = false",
        "description": [
            "gets the page routes",
            "@param bool $include_admin",
            "@return array of routes"
        ],
        "fieldtexts": []
    },
    "get_admin_routes": {
        "name": "get_admin_routes",
        "params": "",
        "description": [
            "gets the admin page routes",
            "@return array of routes"
        ],
        "fieldtexts": []
    },
    "get_public_routes": {
        "name": "get_public_routes",
        "params": "",
        "description": [
            "gets the public page routes",
            "@return array of routes"
        ],
        "fieldtexts": []
    },
    "add_page_requirement": {
        "name": "add_page_requirement",
        "params": "$function, $source, $namespace = ''",
        "description": [
            "adds a requirement into the loader and registers it as a page with the router",
            "@param string $function php function name or class.class_name",
            "@param string $source php source file",
            "@param string $namespace optional php namespace"
        ],
        "fieldtexts": []
    },
    "add_root_page_requirement": {
        "name": "add_root_page_requirement",
        "params": "$function, $source, $namespace = ''",
        "description": [
            "adds a requirement into the loader and registers it as a page with the router",
            "@param string $function php function name or class.class_name",
            "@param string $source php source file",
            "@param string $namespace optional php namespace"
        ],
        "fieldtexts": []
    },
    "add_public_path": {
        "name": "add_public_path",
        "params": "$page, $source",
        "description": [
            "adds a requirement into the loader and registers it as a page with the router",
            "@param string $function php function name or class.class_name",
            "@param string $path source file path"
        ],
        "fieldtexts": []
    },
    "add_ajax_page_requirement": {
        "name": "add_ajax_page_requirement",
        "params": "$function, $source, $namespace = ''",
        "description": [
            "adds a requirement into the loader and registers it as a page with the router",
            "@param string $function php function name or class.class_name",
            "@param string $source php source file",
            "@param string $namespace optional php namespace"
        ],
        "fieldtexts": []
    },
    "add_admin_page_requirement": {
        "name": "add_admin_page_requirement",
        "params": "$function, $source, $namespace = ''",
        "description": [
            "adds a requirement into the loader and registers it as a page with the router",
            "@param string $function php function name or class.class_name",
            "@param string $source php source file",
            "@param string $namespace optional php namespace"
        ],
        "fieldtexts": []
    },
    "add_requirement": {
        "name": "add_requirement",
        "params": "$function, $source, $namespace = ''",
        "description": [
            "adds a requirement into the loader",
            "@param string $function php function name or class.class_name",
            "@param string $source php source file",
            "@param string $namespace optional php namespace"
        ],
        "fieldtexts": []
    },
    "get_requirements": {
        "name": "get_requirements",
        "params": "",
        "description": [
            "gets an array of requirements for loading",
            "@return array the array of requirements"
        ],
        "fieldtexts": []
    },
    "register_module": {
        "name": "register_module",
        "params": "$module, $settings = false",
        "description": [
            "Pre-Config Functions.   This stuff is called almost instantly",
            "so it needs to be defined before any of the rest of the program can go.",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Config",
            "register_module()",
            "@param string     $module",
            "@param array|bool $settings",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_module_stuff": {
        "name": "get_module_stuff",
        "params": "$module = 'default'",
        "description": [
            "get_module_stuff()",
            "@param string $module",
            "@return array"
        ],
        "fieldtexts": []
    },
    "get_module_name": {
        "name": "get_module_name",
        "params": "$module = 'default'",
        "description": [
            "get_module_name()",
            "gets the name of a module, or makes sure that the given module exists, if not returns default",
            "@param string $module the module name your attempting to validate \/ get the name of",
            "@return string the name of the module"
        ],
        "fieldtexts": []
    },
    "get_module_settings": {
        "name": "get_module_settings",
        "params": "$module = 'default', $setting = false",
        "description": [
            "get_module_settings()",
            "gets the array of settings for a given module, or a specific setting for that module",
            "@param string $module",
            "@param bool|string $setting optional parameter, false to return all settings, or a specific setting name to return that setting",
            "@return array|false array of settings or false if no setting"
        ],
        "fieldtexts": []
    },
    "has_module_db": {
        "name": "has_module_db",
        "params": "$module",
        "description": [
            "@param $module",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_module_db": {
        "name": "get_module_db",
        "params": "$module",
        "description": [
            "gets the database handler for a given module",
            "@param string $module the name of the module to get the dbh for",
            "@return Db the database handler resource"
        ],
        "fieldtexts": []
    },
    "get_valid_module": {
        "name": "get_valid_module",
        "params": "$module = 'default'",
        "description": [
            "get_valid_module()",
            "returns the module name if a valid module or default if not",
            "@param string $module",
            "@return string the\/a validated module name"
        ],
        "fieldtexts": []
    },
    "getCapabilities": {
        "name": "getCapabilities",
        "params": "",
        "description": [
            "@return array"
        ],
        "fieldtexts": []
    },
    "getSubscribedEvents": {
        "name": "getSubscribedEvents",
        "params": "",
        "description": [
            "Events",
            "Command Events\t\t\t\t\tComposer\\Script\\Event",
            "pre-install-cmd\t\t\t\toccurs before the install command is executed with a lock file present.",
            "post-install-cmd\t\t\toccurs after the install command has been executed with a lock file present.",
            "pre-update-cmd\t\t\t\toccurs before the update command is executed, or before the install command is executed without a lock file present.",
            "post-update-cmd\t\t\t\toccurs after the update command has been executed, or after the install command has been executed without a lock file present.",
            "post-status-cmd\t\t\t\toccurs after the status command has been executed.",
            "pre-archive-cmd\t\t\t\toccurs before the archive command is executed.",
            "post-archive-cmd\t\t\toccurs after the archive command has been executed.",
            "pre-autoload-dump\t\t\toccurs before the autoloader is dumped, either during install\/update, or via the dump-autoload command.",
            "post-autoload-dump\t\t\toccurs after the autoloader has been dumped, either during install\/update, or via the dump-autoload command.",
            "post-root-package-install\toccurs after the root package has been installed, during the create-project command.",
            "post-create-project-cmd\t\toccurs after the create-project command has been executed.",
            "Installer Events\t\t\t\tComposer\\Installer\\InstallerEvent",
            "pre-dependencies-solving\toccurs before the dependencies are resolved.",
            "post-dependencies-solving\toccurs after the dependencies have been resolved.",
            "Package Events\t\t\t\t\tComposer\\Installer\\PackageEvent",
            "pre-package-install\t\t\toccurs before a package is installed.",
            "post-package-install\t\toccurs after a package has been installed.",
            "pre-package-update\t\t\toccurs before a package is updated.",
            "post-package-update\t\t\toccurs after a package has been updated.",
            "pre-package-uninstall\t\toccurs before a package is uninstalled.",
            "post-package-uninstall\t\toccurs after a package has been uninstalled.",
            "Plugin Events\t\t\t\t\tComposer\\Plugin\\PluginEvents",
            "init\t\t\t\t\t\toccurs after a Composer instance is done being initialized.",
            "command\t\t\t\t\t\toccurs before any Composer Command is executed on the CLI. It provides you with access to the input and output objects of the program.",
            "pre-file-download\t\t\toccurs before files are downloaded and allows you to manipulate the RemoteFilesystem object prior to downloading files based on the URL to be downloaded."
        ],
        "fieldtexts": []
    },
    "onPreFileDownload": {
        "name": "onPreFileDownload",
        "params": "PreFileDownloadEvent $event",
        "description": [
            "@param PreFileDownloadEvent $event"
        ],
        "fieldtexts": []
    },
    "setPermissions": {
        "name": "setPermissions",
        "params": "Event $event",
        "description": [
            "An event that triggers setting writable permissions on any directories specified in the writable-dirs composer extra options",
            "@param Event $event",
            "@return void"
        ],
        "fieldtexts": []
    },
    "getWritableDirs": {
        "name": "getWritableDirs",
        "params": "Event $event",
        "description": [
            "returns a list of writeable directories specified in the writeable-dirs composer extra options",
            "@param Event $event",
            "@return array an array of directory paths"
        ],
        "fieldtexts": []
    },
    "getWritableFiles": {
        "name": "getWritableFiles",
        "params": "Event $event",
        "description": [
            "returns a list of writeable files specified in the writeable-files composer extra options",
            "@param Event $event",
            "@return array an array of file paths"
        ],
        "fieldtexts": []
    },
    "setPermissionsSetfacl": {
        "name": "setPermissionsSetfacl",
        "params": "Event $event",
        "description": [
            "Sets Writrable Directory permissions for any directories listed in the writeable-dirs option using setfacl",
            "@param Event $event"
        ],
        "fieldtexts": []
    },
    "setPermissionsChmod": {
        "name": "setPermissionsChmod",
        "params": "Event $event",
        "description": [
            "Sets Writrable Directory permissions for any directories listed in the writeable-dirs option using chmod",
            "@param Event $event"
        ],
        "fieldtexts": []
    },
    "getHttpdUser": {
        "name": "getHttpdUser",
        "params": "Event $event",
        "description": [
            "returns the user the webserver is running as",
            "@param Event $event",
            "@return string the webserver username"
        ],
        "fieldtexts": []
    },
    "SetfaclPermissionsSetter": {
        "name": "SetfaclPermissionsSetter",
        "params": "Event $event, $http_user, $path",
        "description": [
            "sets the needed permissions for the $http_user and the running user on $path using setfacl",
            "@param Event $event",
            "@param string $http_user the webserver username",
            "@param string $path the directory to set permissions on"
        ],
        "fieldtexts": []
    },
    "ChmodPermissionsSetter": {
        "name": "ChmodPermissionsSetter",
        "params": "Event $event, $http_user, $path, $type = 'dir'",
        "description": [
            "sets the needed permissions for the $http_user and the running user on $path using chmod",
            "@param Event $event",
            "@param string $http_user the webserver username",
            "@param string $path the directory to set permissions on",
            "@param string $type optional type of entry, defaults to dir, can be dir or file"
        ],
        "fieldtexts": []
    },
    "EnsureDirExists": {
        "name": "EnsureDirExists",
        "params": "Event $event, $path",
        "description": [
            "checks if the given directory exists and if not tries to create it.",
            "@param Event $event",
            "@param string $path the directory",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "EnsureFileExists": {
        "name": "EnsureFileExists",
        "params": "Event $event, $path",
        "description": [
            "checks if the given file exists and if not tries to create it.",
            "@param Event $event",
            "@param string $path the directory",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "runProcess": {
        "name": "runProcess",
        "params": "Event $event, $commandline",
        "description": [
            "runs a command process returning the output and checking return code",
            "@param Event $event",
            "@param string $commandline the command line to run",
            "@return string the output",
            "@throws \\Exception"
        ],
        "fieldtexts": []
    },
    "activate_softaculous": {
        "name": "activate_softaculous",
        "params": "$ipAddress, $field, $email",
        "description": [
            "Softaculous Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin-Softaculous-Licensing",
            "@category Licenses",
            "activate_softaculous()",
            "@param mixed $ipAddress",
            "@param mixed $field",
            "@param mixed $email",
            "@return boolean"
        ],
        "fieldtexts": []
    },
    "activate_webuzo": {
        "name": "activate_webuzo",
        "params": "$ipAddress, $field = '', $email = ''",
        "description": [
            "Softaculous Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin-Softaculous-Licensing",
            "@category Licenses",
            "activate_webuzo()",
            "@param mixed $ipAddress",
            "@param mixed $field",
            "@param mixed $email",
            "@return boolean"
        ],
        "fieldtexts": []
    },
    "toXML": {
        "name": "toXML",
        "params": "$data, $rootNodeName = 'ResultSet', $xml = null",
        "description": [
            "Softaculous Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin-Softaculous-Licensing",
            "@category Licenses",
            "namespace Detain\\MyAdminSoftaculous;",
            "Converts an Array to XML",
            "class ArrayToXML",
            "{",
            "The main function for converting to an XML document.",
            "Pass in a multi dimensional array and this recursively loops through and builds up an XML document.",
            "@param array $data",
            "@param string $rootNodeName - what you want the root node to be - defaults to data.",
            "@param \\SimpleXMLElement $xml - should only be used recursively",
            "@return string XML"
        ],
        "fieldtexts": []
    },
    "toArray": {
        "name": "toArray",
        "params": "$xml",
        "description": [
            "Convert an XML document to a multi dimensional array",
            "Pass in an XML document (or SimpleXMLElement object) and this recursively loops through and builds a representative array",
            "@param string|\\SimpleXMLElement $xml - XML document - can optionally be a SimpleXMLElement object",
            "@return array|string"
        ],
        "fieldtexts": []
    },
    "isAssoc": {
        "name": "isAssoc",
        "params": "$array",
        "description": [
            "@param $array",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "deactivate_softaculous": {
        "name": "deactivate_softaculous",
        "params": "$ipAddress",
        "description": [
            "Softaculous Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin-Softaculous-Licensing",
            "@category Licenses",
            "@param $ipAddress",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "deactivate_webuzo": {
        "name": "deactivate_webuzo",
        "params": "$ipAddress",
        "description": [
            "Softaculous Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin-Softaculous-Licensing",
            "@category Licenses",
            "@param $ipAddress",
            "@return bool"
        ],
        "fieldtexts": []
    },
    "get_softaculous_licenses": {
        "name": "get_softaculous_licenses",
        "params": "$ipAddress = ''",
        "description": [
            "Softaculous Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin-Softaculous-Licensing",
            "@category Licenses",
            "@param string $ipAddress",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "get_webuzoLicenses": {
        "name": "get_webuzoLicenses",
        "params": "$ipAddress = ''",
        "description": [
            "Softaculous Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin-Softaculous-Licensing",
            "@category Licenses",
            "@param string $ipAddress",
            "@return array|bool"
        ],
        "fieldtexts": []
    },
    "softaculous_list": {
        "name": "softaculous_list",
        "params": "",
        "description": [
            "Softaculous Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin-Softaculous-Licensing",
            "@category Licenses"
        ],
        "fieldtexts": []
    },
    "req": {
        "name": "req",
        "params": "",
        "description": [
            "Handles the API curl Call, parsing the response and storing it",
            "@return FALSE|array FALSE if there was an error (setting  $this->error or returning the response)"
        ],
        "fieldtexts": []
    },
    "buy": {
        "name": "buy",
        "params": "$ipAddress, $toadd, $servertype, $authemail, $autorenew",
        "description": [
            "Buy or Renew a License",
            "@param mixed $ipAddress The IP of the license to be Purchased or Renewed",
            "@param string $toadd Time to extend. Valid extension e.g. '1M' will extend by one months  '8M' will extend by eight months  '1Y' will extend by One year",
            "@param mixed $servertype 1 for Dedicated and 2 for VPS",
            "@param mixed $authemail When a new license is purchased an Authorisation email is required to verify the owner of the License or for reminders when the license is expiring. This is not required in case of renewals",
            "@param integer $autorenew To be renewed Automatically before expiry. Values - 1 for TRUE   0 (i.e. any empty value) or 2 for FALSE   Emails will be sent when renewed.",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "licenses": {
        "name": "licenses",
        "params": "$key = '', $ipAddress = '', $expiry = '', $start = 0, $len = 1000000, $email = ''",
        "description": [
            "gets a list of licenses",
            "NOTE: $key, $ipAddress, $expiry, $start, $len (i.e. All Paras) are Optional",
            "When nothing is specified a list of all your license will be returned.",
            "@param string $key (Optional) The License KEY to get the details of that particular License",
            "@param string $ipAddress (Optional) The Primary IP of a License to get the details of that particular License",
            "@param string $expiry (Optional) To get a List of License that are expiring. Valid Options - 1 , 2 , 3 . Explanation is as follows: $expiry = 1; (All Expired License in your account)     $expiry = 2; (Expiring in 7 Days)  $expiry = 3; (Expiring in 15 Days)",
            "@param int $start (Optional) The starting key to return from. e.g. If the result is 500 licenses and you wanted only from the 100th one then specify 99",
            "@param int $len (Optional) The length to return from the start. e.g. If the result is 500 licenses and you wanted only from the 200 items after the 100th one then specify $start = 99 and $len = 200",
            "@param string $email (Optional) The authorised email of the user for which  you want to get the list of licenses.",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "ipToKey": {
        "name": "ipToKey",
        "params": "$ipAddress",
        "description": [
            "@param string $ipAddress",
            "@return bool|string"
        ],
        "fieldtexts": []
    },
    "cancelWithRefund": {
        "name": "cancelWithRefund",
        "params": "$key = '', $ipAddress = ''",
        "description": [
            "@param string|bool $key",
            "@param string $ipAddress"
        ],
        "fieldtexts": []
    },
    "cancel": {
        "name": "cancel",
        "params": "$key = '', $ipAddress = ''",
        "description": [
            "remove license and its auto renewal",
            "NOTE: 1) Either of $ipAddress, $key needs to be specified",
            "2) A cancel will not be allowed if you have a license expiring after MORE than a MONTH.",
            "3) Also a refund is not made when you cancel a license. You must first claim the refund using the refund() API",
            "@param string $key (Optional) The License KEY",
            "@param string $ipAddress (Optional) The Primary IP of the License",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "refundAndCancel": {
        "name": "refundAndCancel",
        "params": "$key = '', $ipAddress = ''",
        "description": [
            "refund license and then remove license and its auto renewal",
            "NOTE: 1) Either of $ipAddress, $key needs to be specified",
            "2) A cancel will not be allowed if you have a license expiring after MORE than a MONTH.",
            "3) We will try to refund you if the license is purchased less than 7 days ago. And then we will cancel the license.",
            "@param string $key (Optional) The License KEY",
            "@param string $ipAddress (Optional) The Primary IP of the License",
            "@return bool|mixed"
        ],
        "fieldtexts": []
    },
    "editips": {
        "name": "editips",
        "params": "$lid, $ips",
        "description": [
            "Edit the IPs of a License",
            "NOTE: Either of $ipAddress, $key needs to be specified",
            "@param int $lid The License ID (NOT the license key) e.g. lid could be 1000",
            "@param string|array $ips The list of IPs of the same VPS \/ Server. The first IP you enter will be the primary IP Address of the License. You can enter up to a maximum of 8 IP Address per license.",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "licenselogs": {
        "name": "licenselogs",
        "params": "$key, $limit = 0, $ipAddress = ''",
        "description": [
            "Action Logs of a License",
            "NOTE: The logs are returned in DESCENDING ORDER, meaning the latest logs will be return first.",
            "@param string $key The License KEY",
            "@param int $limit The number of action logs to be retrieved",
            "@param string $ipAddress The License IP",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "autorenewals": {
        "name": "autorenewals",
        "params": "$key = '', $ipAddress = '', $start = 0, $len = 1000000",
        "description": [
            "List the Auto Renewing Licenses",
            "NOTE: $key, $ipAddress, $start, $len (i.e. All Params) are Optional When nothing is specified",
            "a list of all your licenses under auto renewals will be returned.",
            "@param string $key (Optional) The License KEY to get the details of that particular License",
            "@param string $ipAddress (Optional) The Primary IP of a License to get the details of  that particular License",
            "@param int $start (Optional) The starting key to return from. e.g. If the result is 500 licenses and you wanted only from the 100th one then specify 99",
            "@param int $len (Optional) The length to return from the start. e.g. If the result is 500 licenses and you wanted only from the 200 items after the 100th one then specify $start = 99 and $len = 200",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "addautorenewal": {
        "name": "addautorenewal",
        "params": "$key = ''",
        "description": [
            "Add Auto Renewals",
            "@param string $key The License KEY to get the details of that particular License",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "removeautorenewal": {
        "name": "removeautorenewal",
        "params": "$key = ''",
        "description": [
            "Remove Auto Renewals",
            "@param string $key The License KEY to get the details of that particular License",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "webuzoBuy": {
        "name": "webuzoBuy",
        "params": "$ipAddress, $toadd, $servertype, $authemail, $autorenew",
        "description": [
            "To Buy or Renew a License",
            "@param string $ipAddress The IP of the license to be Purchased or Renewed",
            "@param string $toadd Time to extend. Valid extension e.g.  '1M' will extend by one months     '8M' will extend by eight months     '1Y' will extend by One year",
            "@param int $servertype 1 for Dedicated and 2 for VPS",
            "@param string $authemail When a new license is purchased an Authorisation email is required to verify the owner of the License or for reminders when the license is expiring. This is not required in case of renewals",
            "@param integer $autorenew To be renewed Automatically before expiry. Values - 1 for TRUE    0 (i.e. any empty value) or 2 for FALSE     Emails will be sent when renewed.",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "webuzoRefund": {
        "name": "webuzoRefund",
        "params": "$actid",
        "description": [
            "reverses a transaction",
            "NOTE: A refund can be claimed only within 7 days of buying\/renewing the license",
            "@param string $actid The Action ID for which you want to claim refund",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "webuzoLicenses": {
        "name": "webuzoLicenses",
        "params": "$key = '', $ipAddress = '', $expiry = '', $start = 0, $len = 1000000, $email = ''",
        "description": [
            "gets a list of licenses",
            "NOTE: $key, $ipAddress, $expiry, $start, $len (i.e. All Paras) are Optional When nothing is specified a list of all your license will be returned.",
            "@param string $key (Optional) The License KEY to get the details of that particular License",
            "@param string $ipAddress (Optional) The Primary IP of a License to get the details of that particular License",
            "@param string $expiry (Optional) To get a List of License that are expiring. Valid Options - 1 , 2 , 3 . Explanation is as follows:  $expiry = 1; (All Expired License in your account)    $expiry = 2; (Expiring in 7 Days)   $expiry = 3; (Expiring in 15 Days)",
            "@param int $start (Optional) The starting key to return from. e.g. If the result is 500 licenses and you wanted only from  the 100th one then specify 99",
            "@param int $len (Optional) The length to return from the start. e.g. If the result is 500 licenses and you wanted only from the 200 items after the 100th one then specify $start = 99 and $len = 200",
            "@param string $email (Optional) The authorised email of the user for which you want to get the list of licenses.",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "webuzoCancel": {
        "name": "webuzoCancel",
        "params": "$key = '', $ipAddress = ''",
        "description": [
            "remove license and its auto renewal",
            "NOTE: 1) Either of $ipAddress, $key needs to be specified",
            "2) A cancel will not be allowed if you have a license expiring after MORE than a MONTH.",
            "3) Also a refund is not made when you cancel a license. You must first claim the refund using the refund() API",
            "@param string $key (Optional) The License KEY",
            "@param string $ipAddress (Optional) The Primary IP of the License",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "webuzoRefundAndCancel": {
        "name": "webuzoRefundAndCancel",
        "params": "$key = '', $ipAddress = ''",
        "description": [
            "refund webuzo license and then remove webuzo license and its auto renewal",
            "NOTE: 1) Either of $ipAddress, $key needs to be specified",
            "2) A cancel will not be allowed if you have a license expiring after MORE than a MONTH.",
            "3) We will try to refund you if the license is purchased less than 7 days ago. And then we will cancel the license.",
            "@param string $key (Optional) The License KEY",
            "@param string $ipAddress (Optional) The Primary IP of the License",
            "@return bool|mixed"
        ],
        "fieldtexts": []
    },
    "webuzoEditips": {
        "name": "webuzoEditips",
        "params": "$lid, $ips",
        "description": [
            "Edit the IPs of a License",
            "NOTE: Either of $ipAddress, $key needs to be specified",
            "@param $lid The License ID (NOT the license key) e.g. lid could be 1000",
            "@param $ips The IP (SINGLE IP ONLY) of the VPS \/ Server. Unlike Softaculous only one IP is allowed here",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "webuzoLicenselogs": {
        "name": "webuzoLicenselogs",
        "params": "$key, $limit = 0, $ipAddress = ''",
        "description": [
            "Action Logs of a License",
            "NOTE: The logs are returned in DESCENDING ORDER, meaning the latest logs will be return first.",
            "@param string $key The License KEY",
            "@param int $limit The number of action logs to be retrieved",
            "@param string $ipAddress The License IP",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "webuzoAutorenewals": {
        "name": "webuzoAutorenewals",
        "params": "$key = '', $ipAddress = '', $start = 0, $len = 1000000",
        "description": [
            "List the Auto Renewing Licenses",
            "NOTE: $key, $ipAddress, $start, $len (i.e. All Params) are Optional When nothing is specified",
            "a list of all your licenses under auto renewals will be returned.",
            "@param string $key (Optional) The License KEY to get the details of that particular License",
            "@param string $ipAddress (Optional) The Primary IP of a License to get the details of that particular License",
            "@param int $start (Optional) The starting key to return from. e.g. If the result is 500 licenses and you wanted only from the 100th one then specify 99",
            "@param int $len (Optional) The length to return from the start. e.g. If the result is 500 licenses and you wanted only from the 200 items after the 100th one then specify $start = 99 and $len = 200",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "webuzoAddautorenewal": {
        "name": "webuzoAddautorenewal",
        "params": "$key = ''",
        "description": [
            "Add Auto Renewals",
            "@param string $key The License KEY that has to be added to Auto Renewal",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "webuzoRemoveautorenewal": {
        "name": "webuzoRemoveautorenewal",
        "params": "$key = ''",
        "description": [
            "Remove Auto Renewals\\",
            "@param string $key The License KEY that has to be removed from Auto Renewal",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "webuzotrial": {
        "name": "webuzotrial",
        "params": "$ipAddress, $servertype",
        "description": [
            "Webuzo Trial",
            "@param $ipAddress The IP that has to be licensed with a TRIAL License",
            "@param $servertype Whether its a VPS or a Dedicated Server License",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "virtBuy": {
        "name": "virtBuy",
        "params": "$ipAddress, $toadd, $autorenew",
        "description": [
            "To Buy or Renew a Virtualizor License",
            "@param string $ipAddress = The IP of the license to be Purchased or Renewed",
            "@param string $toadd Time to extend. Valid extension e.g.  - '1M' will extend by one months - '8M' will extend by eight months - '1Y' will extend by One year",
            "@param int $autorenew To be renewed Automatically before expiry.  Values - 1 for TRUE    0 for FALSE.",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "virtRefund": {
        "name": "virtRefund",
        "params": "$actid",
        "description": [
            "reverses a Virtualizor transaction",
            "NOTE: A refund can be claimed only within 7 days of buying\/renewing the license",
            "@param $actid The Action ID for which you want to claim refund",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "virtLicenses": {
        "name": "virtLicenses",
        "params": "$key = '', $ipAddress = '', $expiry = '', $start = 0, $len = 1000000, $email = ''",
        "description": [
            "gets a list of Virtualizor licenses",
            "NOTE: $key, $ipAddress, $expiry, $start, $len (i.e. All Paras) are Optional When nothing",
            "is specified a list of all your license will be returned.",
            "@param string $key (Optional) The License KEY to get the details of that particular License",
            "@param string $ipAddress (Optional) The Primary IP of a License to get the details of that particular License",
            "@param string $expiry (Optional) To get a List of License that are expiring. Valid Options - 1 , 2 , 3 . Explanation is as follows: $expiry = 1; (All Expired License in your account) $expiry = 2; (Expiring in 7 Days) $expiry = 3; (Expiring in 15 Days)",
            "@param int $start",
            "@param int $len (Optional) The length to return from the start. e.g. If the result is 500 licenses and you wanted only from the 200 items after the 100th one then specify $start = 99 and $len = 200",
            "@param string $email",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "virtRemove": {
        "name": "virtRemove",
        "params": "$key",
        "description": [
            "remove Virtualizor license and its auto renewwed",
            "NOTE: 1) $key needs to be specified",
            "2) A cancel will not be allowed if you have a license expiring",
            "<br> &after MORE than a MONTH.",
            "3) Also a refund is not made when you cancel a license. You must first claim the refund using the refund() API",
            "@param string $key The License KEY",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "virtRefundAndCancel": {
        "name": "virtRefundAndCancel",
        "params": "$key = '', $ipAddress = ''",
        "description": [
            "NOTE: 1) Either of $ipAddress, $key needs to be specified",
            "2) A cancel will not be allowed if you have a license expiring",
            "after MORE than a MONTH.",
            "3) We will try to refund you if the license is purchased less than 7 days ago. And then we will cancel the license.",
            "refund virtualizor license and then remove virtualizor license and its auto renewal",
            "@param string $key (Optional) The License KEY",
            "@param string $ipAddress (Optional) The Primary IP of the License",
            "@return bool|mixed"
        ],
        "fieldtexts": []
    },
    "virtEditips": {
        "name": "virtEditips",
        "params": "$lid, $ips",
        "description": [
            "Edit the IPs of a Virtualizor License",
            "NOTE: Either of $ipAddress, $key needs to be specified",
            "@param $lid The License ID (NOT the license key) e.g. lid could be 1000",
            "@param $ips The NEW IP of the server",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "virtLicenselogs": {
        "name": "virtLicenselogs",
        "params": "$key, $limit = 0, $ipAddress = ''",
        "description": [
            "Action Logs of a Virtualizor License",
            "NOTE: The logs are returned in DESCENDING ORDER, meaning the latest logs will be return first.",
            "@param $key The License KEY",
            "@param int $limit The number of action logs to be retrieved",
            "@param string $ipAddress The License IP",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "virtRenewals": {
        "name": "virtRenewals",
        "params": "$key = '', $ipAddress = '', $start = 0, $len = 1000000",
        "description": [
            "List the Auto Renewing Virtualizor Licenses",
            "NOTE: $key, $ipAddress, $start, $len (i.e. All Params) are Optional When nothing is",
            "specified a list of all your licenses under auto renewals will be returned.",
            "@param string $key (Optional) The License KEY to get the details of that particular License",
            "@param string $ipAddress (Optional) The Primary IP of a License to get the details of that particular License",
            "@param int $start (Optional) The starting key to return from. e.g. If the result is 500 licenses and you wanted only from the 100th one then specify 99",
            "@param int $len (Optional) The length to return from the start. e.g. If the result is 500 licenses and you wanted only from the 200 items after the 100th one then specify $start = 99 and $len = 200",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "virtAddautorenewal": {
        "name": "virtAddautorenewal",
        "params": "$key = ''",
        "description": [
            "Add Virtualizor Auto Renewals",
            "@param string $key The License KEY that has to be added to Auto Renewal",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "virtRemoveautorenewal": {
        "name": "virtRemoveautorenewal",
        "params": "$key = ''",
        "description": [
            "Remove Virtualizor Auto Renewals",
            "@param string $key The License KEY that has to be removed from Auto Renewal",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "sitemushBuy": {
        "name": "sitemushBuy",
        "params": "$ipAddress, $toadd, $autorenew",
        "description": [
            "To Buy or Renew a License",
            "@param string $ipAddress The IP of the license to be Purchased or Renewed",
            "@param string $toadd Time to extend. Valid extension e.g. - '1M' will extend by one months - '3M' will extend by three months - '6M' will extend by six months - '9M' will extend by nine months - '1Y' will extend by One year - '2Y' will extend by Two year - '3Y' will extend by Three year",
            "@param int $autorenew To be renewed Automatically before expiry. Values - 1 for TRUE   0 (i.e. any empty value) or 2 for FALSE    Emails will be sent when renewed.",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "sitemushRefund": {
        "name": "sitemushRefund",
        "params": "$actid",
        "description": [
            "reverses a transaction",
            "NOTE: A refund can be claimed only within 7 days of buying\/renewing the license",
            "@param mixed $actid The Action ID for which you want to claim refund",
            "@return array|FALSE"
        ],
        "fieldtexts": []
    },
    "sitemushLicenses": {
        "name": "sitemushLicenses",
        "params": "$key = '', $ipAddress = '', $expiry = '', $start = 0, $len = 1000000, $email = ''",
        "description": [
            "gets a list of SiteMush licenses",
            "NOTE: $key, $ipAddress, $expiry, $start, $len (i.e. All Paras) are Optional When",
            "nothing is specified a list of all your license will be returned.",
            "@param string $key       (Optional) The License KEY to get the details of that particular License",
            "@param string $ipAddress (Optional) The Primary IP of a License to get the details of that particular License",
            "@param string $expiry    (Optional) To get a List of License that are expiring. Valid Options - 1 , 2 , 3 . Explanation is as follows:  $expiry = 1; (All Expired License in your account)   $expiry = 2; (Expiring in 7 Days)  $expiry = 3; (Expiring in 15 Days)",
            "@param int    $start     (Optional) The starting key to return from. e.g. If the result is 500 licenses and you wanted only from the 100th one then specify 99",
            "@param int    $len       (Optional) The length to return from the start. e.g.  If the result is 500 licenses and you wanted only from the 200 items after the 100th one then specify  $start = 99 and $len = 200",
            "@param string $email     (Optional) The authorised email of the user for which you want to get the list of licenses.",
            "@return array|FALSE"
        ],
        "fieldtexts": []
    },
    "sitemushRemove": {
        "name": "sitemushRemove",
        "params": "$key",
        "description": [
            "remove SiteMush license and its auto renewal",
            "NOTE: 1) $key needs to be specified",
            "2) A cancel will not be allowed if you have a license expiring after MORE than a MONTH.",
            "3) Also a refund is not made when you cancel a license. You must first claim the refund using the sitemushRefund() API",
            "@param string $key The License KEY",
            "@return array|FALSE"
        ],
        "fieldtexts": []
    },
    "sitemushRefundAndCancel": {
        "name": "sitemushRefundAndCancel",
        "params": "$key = '', $ipAddress = ''",
        "description": [
            "refund SiteMush license and then remove SiteMush license and its auto renewal",
            "NOTE: 1) Either of $ipAddress, $key needs to be specified",
            "2) A cancel will not be allowed if you have a license expiring after MORE than a MONTH.",
            "3) We will try to refund you if the license is purchased less than 7 days ago. And then we will cancel the license.",
            "@param string $key       (Optional) The License KEY",
            "@param string $ipAddress (Optional) The Primary IP of the License",
            "@return array|bool|FALSE"
        ],
        "fieldtexts": []
    },
    "sitemushEditips": {
        "name": "sitemushEditips",
        "params": "$lid, $ips",
        "description": [
            "Edit the IPs of a SiteMush License",
            "NOTE: Either of $ipAddress, $key needs to be specified",
            "@param string|int   $lid The License ID (NOT the license key) e.g. lid could be 1000",
            "@param string|array $ips The NEW IP of the server",
            "@return array|FALSE"
        ],
        "fieldtexts": []
    },
    "sitemushLicenselogs": {
        "name": "sitemushLicenselogs",
        "params": "$key, $limit = 0, $ipAddress = ''",
        "description": [
            "Action Logs of a SiteMush License",
            "NOTE: The logs are returned in DESCENDING ORDER, meaning the latest logs will be return first.",
            "@param string $key       The License KEY",
            "@param int    $limit     The number of action logs to be retrieved",
            "@param string $ipAddress The License IP",
            "@return array|FALSE"
        ],
        "fieldtexts": []
    },
    "sitemushRenewals": {
        "name": "sitemushRenewals",
        "params": "$key = '', $ipAddress = '', $start = 0, $len = 1000000",
        "description": [
            "List the Auto Renewing SiteMush Licenses",
            "NOTE: $key, $ipAddress, $start, $len (i.e. All Params) are Optional When nothing",
            "is specified a list of all your licenses under auto renewals will be returned.",
            "@param string $key       (Optional) The License KEY to get the details of that particular License",
            "@param string $ipAddress (Optional) The Primary IP of a License to get the details of that particular License",
            "@param int    $start     (Optional) The starting key to return from. e.g. If the result is 500 licenses and you wanted only from  the 100th one then specify 99",
            "@param int    $len       (Optional) The length to return from the start. e.g. If the result is 500 licenses and you wanted only from  the 200 items after the 100th one then specify $start = 99 and $len = 200",
            "@return array|FALSE"
        ],
        "fieldtexts": []
    },
    "sitemushAddautorenewal": {
        "name": "sitemushAddautorenewal",
        "params": "$key = ''",
        "description": [
            "Add SiteMush Auto Renewals",
            "@param string $key The License KEY that has to be added toAuto Renewal",
            "@return array|FALSE"
        ],
        "fieldtexts": []
    },
    "sitemushRemoveautorenewal": {
        "name": "sitemushRemoveautorenewal",
        "params": "$key = ''",
        "description": [
            "Remove SiteMush Auto Renewals",
            "@param string $key The License KEY that has to be removed from Auto Renewal",
            "@return array|FALSE"
        ],
        "fieldtexts": []
    },
    "invoicedetails": {
        "name": "invoicedetails",
        "params": "$invoid = 0",
        "description": [
            "Details of an invoice",
            "@param int $invoid The Invoice ID the details of which you want to see. If nothing is specified i.e. invoid = 0 then all unbilled transactions for the current month will be returned",
            "@return FALSE|array"
        ],
        "fieldtexts": []
    },
    "displayResponse": {
        "name": "displayResponse",
        "params": "$response",
        "description": [
            "displays the response",
            "@param mixed $response the response from an a function\/api command",
            "@return void"
        ],
        "fieldtexts": []
    },
    "array2json": {
        "name": "array2json",
        "params": "$arr",
        "description": [
            "Converts array to JSON",
            "@package      softaculous",
            "@category   json",
            "@author       Pulkit Gupta",
            "@param        array $arr An array that needs to be converted to JSON",
            "@return       string The JSON string",
            "@since     \t 3.9"
        ],
        "fieldtexts": []
    },
    "webuzo_list": {
        "name": "webuzo_list",
        "params": "",
        "description": [
            "Softaculous Related Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin-Softaculous-Licensing",
            "@category Licenses"
        ],
        "fieldtexts": []
    },
    "vps_add_softaculous": {
        "name": "vps_add_softaculous",
        "params": "",
        "description": [
            "VPS Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category VPS",
            "Adds Softaculous to a VPS",
            "@return void"
        ],
        "fieldtexts": []
    },
    "get_token": {
        "name": "get_token",
        "params": "",
        "description": [
            "@return string"
        ],
        "fieldtexts": []
    },
    "acl": {
        "name": "acl",
        "params": "$container = '', $read = '', $write = ''",
        "description": [
            "@param string $container",
            "@param string $read",
            "@param string $write",
            "@return array|string"
        ],
        "fieldtexts": []
    },
    "usage": {
        "name": "usage",
        "params": "$container = ''",
        "description": [
            "@param string $container",
            "@return array|string"
        ],
        "fieldtexts": []
    },
    "download_passthrough": {
        "name": "download_passthrough",
        "params": "$container = ''",
        "description": [
            "@param string $container"
        ],
        "fieldtexts": []
    },
    "upload": {
        "name": "upload",
        "params": "$container, $filename",
        "description": [
            "@param $container",
            "@param $filename",
            "@return string"
        ],
        "fieldtexts": []
    },
    "ls": {
        "name": "ls",
        "params": "$container = ''",
        "description": [
            "@param string $container",
            "@return string"
        ],
        "fieldtexts": []
    },
    "ls_header": {
        "name": "ls_header",
        "params": "$container = ''",
        "description": [
            "@param string $container",
            "@return string"
        ],
        "fieldtexts": []
    },
    "list_accounts": {
        "name": "list_accounts",
        "params": "",
        "description": [
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "list_account": {
        "name": "list_account",
        "params": "$account",
        "description": [
            "@param $account",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "list_user": {
        "name": "list_user",
        "params": "$account, $user",
        "description": [
            "@param $account",
            "@param $user",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "createAccount": {
        "name": "createAccount",
        "params": "$username, $password, $email, $name, $package = 'default'",
        "description": [
            "@param string $username",
            "@param string $password",
            "@param string $email",
            "@param string $name",
            "@param string $package",
            "@return bool|mixed|string"
        ],
        "fieldtexts": []
    },
    "addWebDnsMailDomain": {
        "name": "addWebDnsMailDomain",
        "params": "$username, $domain",
        "description": [
            "@param string $username",
            "@param string $domain"
        ],
        "fieldtexts": []
    },
    "addDatabase": {
        "name": "addDatabase",
        "params": "$username, $dbName, $dbUser, $dbPass",
        "description": [
            "@param string $username",
            "@param string $dbName",
            "@param string $dbUser",
            "@param string $dbPass"
        ],
        "fieldtexts": []
    },
    "listAccount": {
        "name": "listAccount",
        "params": "$username, $format = 'json'",
        "description": [
            "@param string $username",
            "@param string $format"
        ],
        "fieldtexts": []
    },
    "listWebDomains": {
        "name": "listWebDomains",
        "params": "$username, $domain, $format = 'json'",
        "description": [
            "@param string $username",
            "@param string $domain",
            "@param string $format"
        ],
        "fieldtexts": []
    },
    "deleteAccount": {
        "name": "deleteAccount",
        "params": "$username",
        "description": [
            "@param string $username"
        ],
        "fieldtexts": []
    },
    "suspendAccount": {
        "name": "suspendAccount",
        "params": "$username",
        "description": [
            "@param string $username"
        ],
        "fieldtexts": []
    },
    "unsuspendAccount": {
        "name": "unsuspendAccount",
        "params": "$username",
        "description": [
            "@param string $username"
        ],
        "fieldtexts": []
    },
    "checkUserPass": {
        "name": "checkUserPass",
        "params": "$username, $password",
        "description": [
            "@param string $username",
            "@param string $password"
        ],
        "fieldtexts": []
    },
    "doSliceEnable": {
        "name": "doSliceEnable",
        "params": "\\ServiceHandler $serviceOrder, $repeatInvoiceId, $regexMatch = false",
        "description": [
            "@var \\ServiceHandler $service",
            "\t\t$service = $event->getSubject();",
            "\t\tfunction_requirements('class.AddonHandler');",
            "\t\t$addon = new \\AddonHandler();",
            "\t\t$addon->setModule(self::$module)",
            "\t\t\t->set_text('Slice Upgrade')",
            "\t\t\t->set_text_match('(.*) Slice Upgrade')",
            "\t\t\t->set_require_ip(false)",
            "\t\t\t->setOneTime(true)",
            "\t\t\t->setEnable([__CLASS__, 'doSliceEnable'])",
            "\t\t\t->register();",
            "\t\t$service->addAddon($addon);",
            "\t}",
            "@param \\ServiceHandler $serviceOrder",
            "@param                $repeatInvoiceId",
            "@param bool           $regexMatch"
        ],
        "fieldtexts": []
    },
    "webuzo_add_domain": {
        "name": "webuzo_add_domain",
        "params": "$host=null, $user=null, $pass=null",
        "description": [
            "@param null $host",
            "@param null $user",
            "@param null $pass",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "webuzo_configure": {
        "name": "webuzo_configure",
        "params": "$id",
        "description": [
            "@param $id",
            "@return false|null"
        ],
        "fieldtexts": []
    },
    "webuzo_edit_installation": {
        "name": "webuzo_edit_installation",
        "params": "$host, $user, $pass, $installation_id",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $installation_id",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "webuzo_get_all_scripts": {
        "name": "webuzo_get_all_scripts",
        "params": "$user, $pass, $host",
        "description": [
            "@param $user",
            "@param $pass",
            "@param $host",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "webuzo_add_backup": {
        "name": "webuzo_add_backup",
        "params": "$host, $user, $pass, $install_id",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $install_id"
        ],
        "fieldtexts": []
    },
    "webuzo_download_backup": {
        "name": "webuzo_download_backup",
        "params": "$host, $user, $pass, $back_up_name",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $back_up_name"
        ],
        "fieldtexts": []
    },
    "webuzo_remove_backup": {
        "name": "webuzo_remove_backup",
        "params": "$host, $user, $pass, $back_up_name",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $back_up_name"
        ],
        "fieldtexts": []
    },
    "webuzo_restore_backup": {
        "name": "webuzo_restore_backup",
        "params": "$host, $user, $pass, $back_up_name",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $back_up_name"
        ],
        "fieldtexts": []
    },
    "webuzo_api_call": {
        "name": "webuzo_api_call",
        "params": "$host, $user, $pass, $act, $last_params = null, $post = []",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $act",
            "@param null $last_params",
            "@param array $post",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "webuzo_format_units_size": {
        "name": "webuzo_format_units_size",
        "params": "$bytes",
        "description": [
            "@param $bytes",
            "@return string"
        ],
        "fieldtexts": []
    },
    "webuzo_import_script": {
        "name": "webuzo_import_script",
        "params": "$host, $user, $pass, $script_id",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $script_id"
        ],
        "fieldtexts": []
    },
    "webuzo_install_sysapp": {
        "name": "webuzo_install_sysapp",
        "params": "$host, $user, $pass, $app_id",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $app_id"
        ],
        "fieldtexts": []
    },
    "webuzo_list_backups": {
        "name": "webuzo_list_backups",
        "params": "$host, $user, $pass",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass"
        ],
        "fieldtexts": []
    },
    "webuzo_list_domains": {
        "name": "webuzo_list_domains",
        "params": "$host = null, $user = null, $pass = null",
        "description": [
            "@param null $host",
            "@param null $user",
            "@param null $pass"
        ],
        "fieldtexts": []
    },
    "webuzo_list_installed_scripts": {
        "name": "webuzo_list_installed_scripts",
        "params": "$host, $user, $pass",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass"
        ],
        "fieldtexts": []
    },
    "webuzo_list_installed_sysapps": {
        "name": "webuzo_list_installed_sysapps",
        "params": "$host = null, $user = null, $pass = null",
        "description": [
            "@param null $host",
            "@param null $user",
            "@param null $pass"
        ],
        "fieldtexts": []
    },
    "webuzo_list_sysapps": {
        "name": "webuzo_list_sysapps",
        "params": "$host=null, $user=null, $pass=null",
        "description": [
            "@param null $host",
            "@param null $user",
            "@param null $pass",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "webuzo_randomPassword": {
        "name": "webuzo_randomPassword",
        "params": "$length = 8",
        "description": [
            "@param int $length",
            "@return string"
        ],
        "fieldtexts": []
    },
    "webuzo_remove_domain": {
        "name": "webuzo_remove_domain",
        "params": "$host, $user, $pass, $domain_name",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $domain_name"
        ],
        "fieldtexts": []
    },
    "webuzo_remove_script": {
        "name": "webuzo_remove_script",
        "params": "$host, $user, $pass, $script_id",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $script_id"
        ],
        "fieldtexts": []
    },
    "webuzo_update_logo": {
        "name": "webuzo_update_logo",
        "params": "$host = null",
        "description": [
            "@param null $host",
            "@return mixed"
        ],
        "fieldtexts": []
    },
    "webuzo_view_script": {
        "name": "webuzo_view_script",
        "params": "$host, $user, $pass, $script_id",
        "description": [
            "@param $host",
            "@param $user",
            "@param $pass",
            "@param $script_id",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "webuzo_view_sysapps": {
        "name": "webuzo_view_sysapps",
        "params": "$host = null, $user = null, $pass = null, $app_id = null",
        "description": [
            "@param null $host",
            "@param null $user",
            "@param null $pass",
            "@param null $app_id",
            "@throws \\Exception",
            "@throws \\SmartyException"
        ],
        "fieldtexts": []
    },
    "activate_whmsonic": {
        "name": "activate_whmsonic",
        "params": "$licenseip, $license, $orderid, $clientName, $clientEmail",
        "description": [
            "Licensing Functionality",
            "@author Joe Huss <detain@interserver.net>",
            "@copyright 2018",
            "@package MyAdmin",
            "@category Licenses",
            "activate_whmsonic()",
            "activate a whmsonic license on the given ip.",
            "license can be one of the following:",
            "Yearly License",
            "Monthly License",
            "LifeTime License",
            "@param string $licenseip ip address to license",
            "@param string $license the license type",
            "@param integer $orderid order id associated with the purchase",
            "@param string $clientName clients full name",
            "@param string $clientEmail client email address",
            "@return string \"success\" if ok , otherwise it returns the error"
        ],
        "fieldtexts": []
    },
    "whmsonic_terminate": {
        "name": "whmsonic_terminate",
        "params": "$licenseip",
        "description": [
            "whmsonic_terminate()",
            "terminate a whmsonic license",
            "@param string $licenseip ip address to terminate",
            "@return string \"success\" if ok , otherwise it returns the error"
        ],
        "fieldtexts": []
    },
    "whmsonic_suspend": {
        "name": "whmsonic_suspend",
        "params": "$licenseip",
        "description": [
            "whmsonic_suspend()",
            "suspend a whmsonic license",
            "@param string $licenseip ip address to suspend",
            "@return string \"success\" if ok , otherwise it returns the error"
        ],
        "fieldtexts": []
    },
    "whmsonic_unsuspend": {
        "name": "whmsonic_unsuspend",
        "params": "$licenseip",
        "description": [
            "whmsonic_unsuspend()",
            "unsuspend a whmsonic license",
            "@param string $licenseip ip address to unsuspend",
            "@return string \"success\" if ok , otherwise it returns the error"
        ],
        "fieldtexts": []
    },
    "whmsonic_list": {
        "name": "whmsonic_list",
        "params": "$type = 4",
        "description": [
            "whmsonic_list()",
            "list the whmsonic licenses",
            "@todo possibly return the output instead of just echoing it",
            "type can be any of the following:",
            "1=Yearly Licenses",
            "2=LifeTime Licenses",
            "3=Monthly Licenses",
            "4=All Licenses (default)",
            "@param integer $type optional type of license list to get, defaults to 4 (all licenses)",
            "@return array|string|void"
        ],
        "fieldtexts": []
    },
    "whmsonic_verify": {
        "name": "whmsonic_verify",
        "params": "$clientserverIP",
        "description": [
            "whmsonic_verify()",
            "verifys a whmsonic license,",
            "it seems $clientserverIP somehow needs to be known and global before its called??",
            "@todo rewrite this to use arguments and return stuff instead of echo",
            "@param $clientserverIP",
            "@return void"
        ],
        "fieldtexts": []
    }
}